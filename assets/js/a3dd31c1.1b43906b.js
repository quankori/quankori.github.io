"use strict";(self.webpackChunk=self.webpackChunk||[]).push([[9937],{3905:(e,t,a)=>{a.d(t,{Zo:()=>m,kt:()=>k});var n=a(7294);function r(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function i(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,n)}return a}function l(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?i(Object(a),!0).forEach((function(t){r(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):i(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function s(e,t){if(null==e)return{};var a,n,r=function(e,t){if(null==e)return{};var a,n,r={},i=Object.keys(e);for(n=0;n<i.length;n++)a=i[n],t.indexOf(a)>=0||(r[a]=e[a]);return r}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(n=0;n<i.length;n++)a=i[n],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(r[a]=e[a])}return r}var o=n.createContext({}),p=function(e){var t=n.useContext(o),a=t;return e&&(a="function"==typeof e?e(t):l(l({},t),e)),a},m=function(e){var t=p(e.components);return n.createElement(o.Provider,{value:t},e.children)},u="mdxType",c={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},d=n.forwardRef((function(e,t){var a=e.components,r=e.mdxType,i=e.originalType,o=e.parentName,m=s(e,["components","mdxType","originalType","parentName"]),u=p(a),d=r,k=u["".concat(o,".").concat(d)]||u[d]||c[d]||i;return a?n.createElement(k,l(l({ref:t},m),{},{components:a})):n.createElement(k,l({ref:t},m))}));function k(e,t){var a=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var i=a.length,l=new Array(i);l[0]=d;var s={};for(var o in t)hasOwnProperty.call(t,o)&&(s[o]=t[o]);s.originalType=e,s[u]="string"==typeof e?e:r,l[1]=s;for(var p=2;p<i;p++)l[p]=a[p];return n.createElement.apply(null,l)}return n.createElement.apply(null,a)}d.displayName="MDXCreateElement"},4648:(e,t,a)=>{a.r(t),a.d(t,{assets:()=>o,contentTitle:()=>l,default:()=>c,frontMatter:()=>i,metadata:()=>s,toc:()=>p});var n=a(7462),r=(a(7294),a(3905));const i={title:"Redis"},l=void 0,s={unversionedId:"programming/database/redis",id:"programming/database/redis",title:"Redis",description:"Features of Redis",source:"@site/docs/programming/database/redis.md",sourceDirName:"programming/database",slug:"/programming/database/redis",permalink:"/docs/programming/database/redis",draft:!1,tags:[],version:"current",frontMatter:{title:"Redis"},sidebar:"programming",previous:{title:"Lock Transaction",permalink:"/docs/programming/database/lock-transaction"},next:{title:"Scaling Transaction",permalink:"/docs/programming/database/scaling"}},o={},p=[{value:"Features of Redis",id:"features-of-redis",level:2},{value:"1. Data Structures",id:"1-data-structures",level:3},{value:"2. Persistence",id:"2-persistence",level:3},{value:"3. Replication",id:"3-replication",level:3},{value:"4. Sharding",id:"4-sharding",level:3},{value:"5. Pub/Sub Messaging",id:"5-pubsub-messaging",level:3},{value:"6. Transactions",id:"6-transactions",level:3},{value:"7. Modules",id:"7-modules",level:3},{value:"8. Streams",id:"8-streams",level:3},{value:"Best Practices",id:"best-practices",level:2},{value:"Summary",id:"summary",level:2}],m={toc:p},u="wrapper";function c(e){let{components:t,...a}=e;return(0,r.kt)(u,(0,n.Z)({},m,a,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("h2",{id:"features-of-redis"},"Features of Redis"),(0,r.kt)("ol",null,(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("strong",{parentName:"li"},"Data Structures")),(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("strong",{parentName:"li"},"Persistence")),(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("strong",{parentName:"li"},"Replication")),(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("strong",{parentName:"li"},"Sharding")),(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("strong",{parentName:"li"},"Pub/Sub Messaging")),(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("strong",{parentName:"li"},"Transactions")),(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("strong",{parentName:"li"},"Modules")),(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("strong",{parentName:"li"},"Streams"))),(0,r.kt)("h3",{id:"1-data-structures"},"1. Data Structures"),(0,r.kt)("p",null,"Redis supports multiple advanced data structures:"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"Strings"),": Binary-safe strings, often used for caching."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"Lists"),": Ordered collections of strings."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"Sets"),": Unordered collections of unique strings."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"Sorted Sets"),": Like sets but with an associated score, allowing for range queries."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"Hashes"),": Key-value pairs within a key, similar to a JSON object."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"Bitmaps"),": Bit-level operations."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"HyperLogLogs"),": Probabilistic data structure for counting unique items."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"Geospatial Indexes"),": Store and query items by their geographic location.")),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Example"),":"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-python"},"import redis\n\nr = redis.Redis(host='localhost', port=6379, db=0)\nr.set('foo', 'bar')  # String\nr.lpush('mylist', 'a', 'b', 'c')  # List\nr.sadd('myset', 'a', 'b', 'c')  # Set\nr.zadd('myzset', {'a': 1, 'b': 2})  # Sorted Set\nr.hset('myhash', 'field1', 'value1')  # Hash\n")),(0,r.kt)("h3",{id:"2-persistence"},"2. Persistence"),(0,r.kt)("p",null,"Redis provides two persistence options:"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"RDB (Redis Database Backup)"),": Snapshots the dataset at specified intervals."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"AOF (Append-Only File)"),": Logs every write operation. More durable but slower than RDB.")),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Example")," (Configuration in ",(0,r.kt)("inlineCode",{parentName:"p"},"redis.conf"),"):"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-plaintext"},"save 900 1  # Save after 900 seconds if at least 1 key changed\nsave 300 10  # Save after 300 seconds if at least 10 keys changed\nappendonly yes  # Enable AOF\n")),(0,r.kt)("h3",{id:"3-replication"},"3. Replication"),(0,r.kt)("p",null,"Replication allows data to be copied from a primary Redis server to one or more replica servers. This enhances read scalability and provides redundancy."),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Example")," (Configuration in ",(0,r.kt)("inlineCode",{parentName:"p"},"redis.conf"),"):"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-plaintext"},"replicaof master_host master_port\n")),(0,r.kt)("h3",{id:"4-sharding"},"4. Sharding"),(0,r.kt)("p",null,"Sharding (partitioning) distributes data across multiple Redis instances. This allows Redis to handle more data than a single instance could."),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Example")," (Using Redis Cluster):"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-plaintext"},"# Start Redis instances and configure them to form a cluster\nredis-cli --cluster create 127.0.0.1:7000 127.0.0.1:7001 127.0.0.1:7002 \\\n          127.0.0.1:7003 127.0.0.1:7004 127.0.0.1:7005 --cluster-replicas 1\n")),(0,r.kt)("h3",{id:"5-pubsub-messaging"},"5. Pub/Sub Messaging"),(0,r.kt)("p",null,"Publish/Subscribe messaging allows messages to be sent and received between Redis clients. It is useful for real-time messaging and notifications."),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Example"),":"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-python"},"# Publisher\nr.publish('mychannel', 'hello world')\n\n# Subscriber\npubsub = r.pubsub()\npubsub.subscribe('mychannel')\nfor message in pubsub.listen():\n    print(message)\n")),(0,r.kt)("h3",{id:"6-transactions"},"6. Transactions"),(0,r.kt)("p",null,"Redis transactions ensure that a series of commands are executed atomically using the ",(0,r.kt)("inlineCode",{parentName:"p"},"MULTI")," and ",(0,r.kt)("inlineCode",{parentName:"p"},"EXEC")," commands."),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Example"),":"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-python"},"pipe = r.pipeline()\npipe.multi()\npipe.set('foo', 'bar')\npipe.incr('baz')\npipe.execute()\n")),(0,r.kt)("h3",{id:"7-modules"},"7. Modules"),(0,r.kt)("p",null,"Redis modules extend its functionality with custom commands and data structures."),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Example"),":"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-plaintext"},"# Load a module\nloadmodule /path/to/module.so\n")),(0,r.kt)("h3",{id:"8-streams"},"8. Streams"),(0,r.kt)("p",null,"Streams provide a powerful data structure for handling log-like data structures and time-series data."),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Example"),":"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-python"},"# Add an entry to a stream\nr.xadd('mystream', {'field1': 'value1', 'field2': 'value2'})\n\n# Read entries from a stream\nr.xrange('mystream', '-', '+')\n")),(0,r.kt)("h2",{id:"best-practices"},"Best Practices"),(0,r.kt)("ol",null,(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("p",{parentName:"li"},(0,r.kt)("strong",{parentName:"p"},"Use Appropriate Data Structures"),":"),(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},"Choose the right data structure for your use case to optimize performance and memory usage."))),(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("p",{parentName:"li"},(0,r.kt)("strong",{parentName:"p"},"Monitor Performance"),":"),(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},"Use Redis's built-in monitoring commands (",(0,r.kt)("inlineCode",{parentName:"li"},"INFO"),", ",(0,r.kt)("inlineCode",{parentName:"li"},"MONITOR"),") to keep track of performance and detect bottlenecks."))),(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("p",{parentName:"li"},(0,r.kt)("strong",{parentName:"p"},"Optimize Memory Usage"),":"),(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},"Use efficient data types and structures to minimize memory consumption."),(0,r.kt)("li",{parentName:"ul"},"Enable key eviction policies to manage memory usage."))),(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("p",{parentName:"li"},(0,r.kt)("strong",{parentName:"p"},"Leverage Persistence Options"),":"),(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},"Choose the right persistence strategy (RDB vs. AOF) based on your durability and performance requirements."))),(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("p",{parentName:"li"},(0,r.kt)("strong",{parentName:"p"},"Implement Replication and Sharding"),":"),(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},"Use replication for high availability and read scalability."),(0,r.kt)("li",{parentName:"ul"},"Use sharding to distribute the load and scale horizontally."))),(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("p",{parentName:"li"},(0,r.kt)("strong",{parentName:"p"},"Utilize Caching Effectively"),":"),(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},"Cache frequently accessed data to reduce load on primary databases."),(0,r.kt)("li",{parentName:"ul"},"Implement cache invalidation strategies to ensure data consistency."))),(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("p",{parentName:"li"},(0,r.kt)("strong",{parentName:"p"},"Secure Your Redis Deployment"),":"),(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},"Use password authentication (",(0,r.kt)("inlineCode",{parentName:"li"},"requirepass")," in ",(0,r.kt)("inlineCode",{parentName:"li"},"redis.conf"),")."),(0,r.kt)("li",{parentName:"ul"},"Bind Redis to specific network interfaces (",(0,r.kt)("inlineCode",{parentName:"li"},"bind")," directive in ",(0,r.kt)("inlineCode",{parentName:"li"},"redis.conf"),")."),(0,r.kt)("li",{parentName:"ul"},"Use firewall rules and VPNs to restrict access."))),(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("p",{parentName:"li"},(0,r.kt)("strong",{parentName:"p"},"Handle Failover Gracefully"),":"),(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},"Use tools like Redis Sentinel for automatic failover and high availability."))),(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("p",{parentName:"li"},(0,r.kt)("strong",{parentName:"p"},"Test Lua Scripts Thoroughly"),":"),(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},"Ensure Lua scripts are tested for performance and correctness, as they run within the Redis server."))),(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("p",{parentName:"li"},(0,r.kt)("strong",{parentName:"p"},"Plan for Backup and Recovery"),":"),(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},"Regularly back up your Redis data and have a recovery plan in place.")))),(0,r.kt)("h2",{id:"summary"},"Summary"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"Data Structures"),": Use the appropriate data structure for each use case."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"Persistence"),": Choose between RDB and AOF based on your needs."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"Replication"),": Implement for high availability and read scalability."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"Sharding"),": Distribute data across multiple instances for horizontal scaling."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"Pub/Sub Messaging"),": Use for real-time messaging."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"Lua Scripting"),": Execute atomic operations."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"Transactions"),": Ensure atomic execution of commands."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"Modules"),": Extend Redis functionality."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"Streams"),": Handle log-like and time-series data.")))}c.isMDXComponent=!0}}]);
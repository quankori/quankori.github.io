"use strict";(self.webpackChunk=self.webpackChunk||[]).push([[53],{1109:e=>{e.exports=JSON.parse('{"pluginId":"default","version":"current","label":"Next","banner":null,"badge":false,"noIndex":false,"className":"docs-version-current","isLast":true,"docsSidebars":{"blog":[{"type":"link","label":"About Me","href":"/","docId":"home"},{"type":"category","label":"System Design","collapsed":true,"collapsible":true,"items":[{"type":"link","label":"Checklist","href":"/blog/system-design/checklist","docId":"blog/system-design/checklist"},{"type":"link","label":"Monolithic Architecture","href":"/blog/system-design/monolithic","docId":"blog/system-design/monolithic"},{"type":"link","label":"Domain Centric Architecture","href":"/blog/system-design/domain-centric","docId":"blog/system-design/domain-centric"},{"type":"link","label":"Event Driven Architecture","href":"/blog/system-design/event-driven","docId":"blog/system-design/event-driven"},{"type":"link","label":"Microservices Architecture","href":"/blog/system-design/microservices","docId":"blog/system-design/microservices"},{"type":"link","label":"Serverless Architecture","href":"/blog/system-design/serverless","docId":"blog/system-design/serverless"},{"type":"link","label":"System Design Pattern","href":"/blog/system-design/system-design-pattern","docId":"blog/system-design/system-design-pattern"},{"type":"link","label":"Database","href":"/blog/system-design/database","docId":"blog/system-design/database"}]},{"type":"category","label":"Programming Language","collapsed":true,"collapsible":true,"items":[{"type":"link","label":"Node.js","href":"/blog/programming/nodejs","docId":"blog/programming/nodejs"},{"type":"link","label":"Golang","href":"/blog/programming/golang","docId":"blog/programming/golang"},{"type":"link","label":"Message Queue","href":"/blog/programming/message-queue","docId":"blog/programming/message-queue"},{"type":"link","label":"Redis","href":"/blog/programming/redis","docId":"blog/programming/redis"},{"type":"link","label":"Computer Science","href":"/blog/programming/computer-science","docId":"blog/programming/computer-science"},{"type":"link","label":"Programming Design Pattern","href":"/blog/programming/programming-design-pattern","docId":"blog/programming/programming-design-pattern"},{"type":"link","label":"Design Principle","href":"/blog/programming/design-principle","docId":"blog/programming/design-principle"}]},{"type":"category","label":"English","collapsed":true,"collapsible":true,"items":[{"type":"link","label":"Cheatsheet","href":"/blog/english/cheatsheet","docId":"blog/english/cheatsheet"}]}]},"docs":{"blog/english/cheatsheet":{"id":"blog/english/cheatsheet","title":"English CheatSheet","description":"Danh t\u1eeb, \u0110\u1ea1i t\u1eeb & T\u1eeb h\u1ea1n \u0111\u1ecbnh (Nouns, Pronouns & Determiners)","sidebar":"blog"},"blog/programming/computer-science":{"id":"blog/programming/computer-science","title":"Computer Science","description":"Core Concepts: N\u1ec1n t\u1ea3ng Ho\u1ea1t \u0111\u1ed9ng","sidebar":"blog"},"blog/programming/design-principle":{"id":"blog/programming/design-principle","title":"Design Principle","description":"Monolithic First Strategy: Kh\u1edfi \u0111\u1ea7u \u0110\u01a1n gi\u1ea3n","sidebar":"blog"},"blog/programming/golang":{"id":"blog/programming/golang","title":"Golang","description":"Concurrency trong Go: Goroutines, Channels v\xe0 Select","sidebar":"blog"},"blog/programming/message-queue":{"id":"blog/programming/message-queue","title":"Message Queue","description":"Ki\u1ebfn Tr\xfac C\u1ed1t L\xf5i","sidebar":"blog"},"blog/programming/nodejs":{"id":"blog/programming/nodejs","title":"Node.js","description":"Ki\u1ebfn Tr\xfac C\u1ed1t L\xf5i (Core Architecture)","sidebar":"blog"},"blog/programming/programming-design-pattern":{"id":"blog/programming/programming-design-pattern","title":"Programming Design Pattern","description":"Design Patterns l\xe0 c\xe1c gi\u1ea3i ph\xe1p \u0111\xe3 \u0111\u01b0\u1ee3c ki\u1ec3m ch\u1ee9ng, t\xe1i s\u1eed d\u1ee5ng \u0111\u01b0\u1ee3c cho c\xe1c v\u1ea5n \u0111\u1ec1 ph\u1ed5 bi\u1ebfn trong thi\u1ebft k\u1ebf ph\u1ea7n m\u1ec1m. B\u1ed9 s\u01b0u t\u1eadp kinh \u0111i\u1ec3n nh\u1ea5t l\xe0 c\u1ee7a \\"Gang of Four\\" (GoF), chia th\xe0nh 3 nh\xf3m ch\xednh:","sidebar":"blog"},"blog/programming/redis":{"id":"blog/programming/redis","title":"Redis","description":"Redis (Remote Dictionary Server) kh\xf4ng ch\u1ec9 l\xe0 m\u1ed9t key-value store \u0111\u01a1n gi\u1ea3n. N\xf3 l\xe0 m\u1ed9t kho l\u01b0u tr\u1eef c\u1ea5u tr\xfac d\u1eef li\u1ec7u trong b\u1ed9 nh\u1edb (in-memory data structure store) c\u1ef1c k\u1ef3 nhanh ch\xf3ng v\xe0 linh ho\u1ea1t, \u0111\u01b0\u1ee3c s\u1eed d\u1ee5ng r\u1ed9ng r\xe3i cho caching, qu\u1ea3n l\xfd session, message broker, real-time analytics.","sidebar":"blog"},"blog/system-design/checklist":{"id":"blog/system-design/checklist","title":"Checklist Requirement","description":"Ph\u1ea7n 1: L\xe0m R\xf5 Y\xeau C\u1ea7u V\u1edbi BA (Understanding the \\"What\\" and \\"Why\\")","sidebar":"blog"},"blog/system-design/database":{"id":"blog/system-design/database","title":"Database","description":"Core concepts (C\xe1c kh\xe1i ni\u1ec7m C\u1ed1t l\xf5i)","sidebar":"blog"},"blog/system-design/domain-centric":{"id":"blog/system-design/domain-centric","title":"Domain-Centric Architectures","description":"C\xe1c ki\u1ebfn tr\xfac ph\u1ea7n m\u1ec1m hi\u1ec7n \u0111\u1ea1i nh\u01b0 Onion, Clean, EBI, v\xe0 Hexagonal (Ports and Adapters) ng\xe0y c\xe0ng tr\u1edf n\xean ph\u1ed5 bi\u1ebfn nh\u1edd kh\u1ea3 n\u0103ng gi\u1ea3i quy\u1ebft c\xe1c v\u1ea5n \u0111\u1ec1 c\u1ed1 h\u1eefu trong c\xe1c ki\u1ebfn tr\xfac ph\xe2n l\u1edbp truy\u1ec1n th\u1ed1ng. Ch\xfang t\u1eadp trung v\xe0o vi\u1ec7c \u0111\u1eb7t mi\u1ec1n nghi\u1ec7p v\u1ee5 (domain) l\xe0m trung t\xe2m (domain-centric) v\xe0 qu\u1ea3n l\xfd s\u1ef1 ph\u1ee5 thu\u1ed9c m\u1ed9t c\xe1ch ch\u1eb7t ch\u1ebd th\xf4ng qua nguy\xean t\u1eafc \u0110\u1ea3o ng\u01b0\u1ee3c Ph\u1ee5 thu\u1ed9c (Dependency Inversion). \u0110i\u1ec1u n\xe0y gi\xfap x\xe2y d\u1ef1ng c\xe1c \u1ee9ng d\u1ee5ng linh ho\u1ea1t, d\u1ec5 b\u1ea3o tr\xec, d\u1ec5 ki\u1ec3m th\u1eed v\xe0 \xedt b\u1ecb \u1ea3nh h\u01b0\u1edfng b\u1edfi nh\u1eefng thay \u0111\u1ed5i trong c\xe1c th\xe0nh ph\u1ea7n c\u01a1 s\u1edf h\u1ea1 t\u1ea7ng (nh\u01b0 UI, database).","sidebar":"blog"},"blog/system-design/event-driven":{"id":"blog/system-design/event-driven","title":"Event-Driven Architecture","description":"C\xe1c kh\xe1i ni\u1ec7m xoay quanh \\"s\u1ef1 ki\u1ec7n\\" (event) \u0111\xf3ng vai tr\xf2 quan tr\u1ecdng trong nhi\u1ec1u ki\u1ebfn tr\xfac ph\u1ea7n m\u1ec1m hi\u1ec7n \u0111\u1ea1i, gi\xfap x\xe2y d\u1ef1ng c\xe1c h\u1ec7 th\u1ed1ng linh ho\u1ea1t, c\xf3 kh\u1ea3 n\u0103ng m\u1edf r\u1ed9ng v\xe0 ph\u1ee5c h\u1ed3i t\u1ed1t. B\xe0i vi\u1ebft n\xe0y s\u1ebd l\xe0m r\xf5 ba kh\xe1i ni\u1ec7m c\u1ed1t l\xf5i th\u01b0\u1eddng \u0111i c\xf9ng nhau:","sidebar":"blog"},"blog/system-design/microservices":{"id":"blog/system-design/microservices","title":"Microservices Architecture","description":"Ki\u1ebfn tr\xfac Microservices chia m\u1ed9t \u1ee9ng d\u1ee5ng l\u1edbn th\xe0nh m\u1ed9t t\u1eadp h\u1ee3p c\xe1c d\u1ecbch v\u1ee5 nh\u1ecf, \u0111\u1ed9c l\u1eadp, m\u1ed7i d\u1ecbch v\u1ee5 ch\u1ea1y trong ti\u1ebfn tr\xecnh ri\xeang v\xe0 giao ti\u1ebfp v\u1edbi nhau qua m\u1ea1ng. M\u1eb7c d\xf9 mang l\u1ea1i nhi\u1ec1u l\u1ee3i \xedch v\u1ec1 t\xednh linh ho\u1ea1t, kh\u1ea3 n\u0103ng m\u1edf r\u1ed9ng v\xe0 t\u1ed1c \u0111\u1ed9 ph\xe1t tri\u1ec3n, ki\u1ebfn tr\xfac n\xe0y c\u0169ng \u0111\u1eb7t ra nh\u1eefng th\xe1ch th\u1ee9c m\u1edbi, \u0111\u1eb7c bi\u1ec7t l\xe0 trong vi\u1ec7c giao ti\u1ebfp gi\u1eefa c\xe1c d\u1ecbch v\u1ee5 v\xe0 \u0111\u1ea3m b\u1ea3o t\xednh \u1ed5n \u0111\u1ecbnh c\u1ee7a to\xe0n h\u1ec7 th\u1ed1ng.","sidebar":"blog"},"blog/system-design/monolithic":{"id":"blog/system-design/monolithic","title":"Monolithic Architecture","description":"Monolithic Architecture","sidebar":"blog"},"blog/system-design/serverless":{"id":"blog/system-design/serverless","title":"Serverless Architecture","description":"\u0110\xe2y l\xe0 m\u1ed9t c\xe1ch ti\u1ebfp c\u1eadn n\u01a1i nh\xe0 cung c\u1ea5p \u0111\xe1m m\xe2y (cloud provider) ch\u1ecbu tr\xe1ch nhi\u1ec7m ho\xe0n to\xe0n vi\u1ec7c qu\u1ea3n l\xfd c\u01a1 s\u1edf h\u1ea1 t\u1ea7ng m\xe1y ch\u1ee7, bao g\u1ed3m vi\u1ec7c c\u1ea5p ph\xe1t t\xe0i nguy\xean, v\xe1 l\u1ed7i h\u1ec7 \u0111i\u1ec1u h\xe0nh, v\xe0 t\u1ef1 \u0111\u1ed9ng co gi\xe3n (scaling). Nh\xe0 ph\xe1t tri\u1ec3n ch\u1ec9 c\u1ea7n t\u1eadp trung v\xe0o vi\u1ec7c vi\u1ebft v\xe0 tri\u1ec3n khai m\xe3 ngu\u1ed3n (th\u01b0\u1eddng d\u01b0\u1edbi d\u1ea1ng c\xe1c h\xe0m - functions) m\xe0 kh\xf4ng c\u1ea7n b\u1eadn t\xe2m \u0111\u1ebfn m\xe1y ch\u1ee7 v\u1eadt l\xfd hay \u1ea3o b\xean d\u01b0\u1edbi.","sidebar":"blog"},"blog/system-design/system-design-pattern":{"id":"blog/system-design/system-design-pattern","title":"System Design Pattern","description":"SAGA Pattern: Qu\u1ea3n l\xfd Transaction Ph\xe2n t\xe1n","sidebar":"blog"},"home":{"id":"home","title":"About Me","description":"Back-end engineer with experience (Node.js, Golang) and deep expertise in building high-performance, reliable fintech and blockchain solutions. Solid background in system architecture, cloud optimization, and complex technical problem-solving. Passionate about driving technical strategy and product innovation for significant business impact. Positioned for a Principal Engineer/Technical Architect role focused on technical and architectural leadership.","sidebar":"blog"}}}')}}]);
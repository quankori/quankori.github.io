"use strict";(self.webpackChunk=self.webpackChunk||[]).push([[794],{3905:(e,t,n)=>{n.d(t,{Zo:()=>u,kt:()=>h});var r=n(7294);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function o(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},i=Object.keys(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var s=r.createContext({}),c=function(e){var t=r.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):o(o({},t),e)),n},u=function(e){var t=c(e.components);return r.createElement(s.Provider,{value:t},e.children)},p="mdxType",m={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},d=r.forwardRef((function(e,t){var n=e.components,a=e.mdxType,i=e.originalType,s=e.parentName,u=l(e,["components","mdxType","originalType","parentName"]),p=c(n),d=a,h=p["".concat(s,".").concat(d)]||p[d]||m[d]||i;return n?r.createElement(h,o(o({ref:t},u),{},{components:n})):r.createElement(h,o({ref:t},u))}));function h(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var i=n.length,o=new Array(i);o[0]=d;var l={};for(var s in t)hasOwnProperty.call(t,s)&&(l[s]=t[s]);l.originalType=e,l[p]="string"==typeof e?e:a,o[1]=l;for(var c=2;c<i;c++)o[c]=n[c];return r.createElement.apply(null,o)}return r.createElement.apply(null,n)}d.displayName="MDXCreateElement"},5671:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>s,contentTitle:()=>o,default:()=>m,frontMatter:()=>i,metadata:()=>l,toc:()=>c});var r=n(7462),a=(n(7294),n(3905));const i={title:"Core CheatSheet"},o=void 0,l={unversionedId:"cheatsheet/fundamental/core",id:"cheatsheet/fundamental/core",title:"Core CheatSheet",description:"Object-Oriented Programming (OOP)",source:"@site/docs/cheatsheet/fundamental/core.md",sourceDirName:"cheatsheet/fundamental",slug:"/cheatsheet/fundamental/core",permalink:"/docs/cheatsheet/fundamental/core",draft:!1,tags:[],version:"current",frontMatter:{title:"Core CheatSheet"},sidebar:"cheatsheet",previous:{title:"RxJS CheatSheet",permalink:"/docs/cheatsheet/nodejs/rxjs"},next:{title:"Database CheatSheet",permalink:"/docs/cheatsheet/fundamental/database"}},s={},c=[{value:"Object-Oriented Programming (OOP)",id:"object-oriented-programming-oop",level:3},{value:"Stateless / Stateful",id:"stateless--stateful",level:3},{value:"Process / Thread",id:"process--thread",level:3},{value:"SSH",id:"ssh",level:3},{value:"SSL",id:"ssl",level:3},{value:"BigO",id:"bigo",level:3}],u={toc:c},p="wrapper";function m(e){let{components:t,...n}=e;return(0,a.kt)(p,(0,r.Z)({},u,n,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("h3",{id:"object-oriented-programming-oop"},"Object-Oriented Programming (OOP)"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"Encapsulation: Bundling data with methods that operate on that data."),(0,a.kt)("li",{parentName:"ul"},"Inheritance: Creating new classes from existing ones to promote code reuse."),(0,a.kt)("li",{parentName:"ul"},"Polymorphism: Allowing objects to be treated as instances of their parent class, enabling flexibility."),(0,a.kt)("li",{parentName:"ul"},"Abstraction: Hiding complex implementation details and exposing only necessary parts.")),(0,a.kt)("h3",{id:"stateless--stateful"},"Stateless / Stateful"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"Stateless: The server does not retain any information about the client between requests. Each request is independent and contains all necessary information."),(0,a.kt)("li",{parentName:"ul"},"Stateful: The server maintains context or state about the client across multiple requests, allowing for persistent interactions.")),(0,a.kt)("h3",{id:"process--thread"},"Process / Thread"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"Process: An independent program in execution with its own memory space. Processes are isolated from each other, providing stability and security."),(0,a.kt)("li",{parentName:"ul"},"Thread: The smallest unit of processing within a process, sharing the same memory space. Threads allow concurrent execution within a process, enabling parallelism.")),(0,a.kt)("h3",{id:"ssh"},"SSH"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},"+---------+                        +----------+\n|  Client |                        |  Server  |\n+---------+                        +----------+\n     |                                   |\n     |       1. Initiate Connection      |\n     |-----------------------------------\x3e|\n     |                                   |\n     |       2. Server Sends Public Key  |\n     |<-----------------------------------|\n     |                                   |\n     | 3. Client Verifies Server's Identity|\n     |                                   |\n     |   4. Client Generates Session Key |\n     |-----------------------------------\x3e|\n     |                                   |\n     | 5. Server Acknowledges Session Key|\n     |<-----------------------------------|\n     |                                   |\n     |    6. Encrypted Communication Begins|\n     |-----------------------------------\x3e|\n     |                                   |\n     |          ... Data Transfer ...     |\n     |                                   |\n")),(0,a.kt)("h3",{id:"ssl"},"SSL"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},"+---------+                        +----------+\n|  Client |                        |  Server  |\n+---------+                        +----------+\n     |                                   |\n     |      1. Client Hello               |\n     |-----------------------------------\x3e|\n     |                                   |\n     |      2. Server Hello               |\n     |      3. Server Certificate         |\n     |      4. Server Key Exchange        |\n     |      5. Server Hello Done          |\n     |<-----------------------------------|\n     |                                   |\n     |      6. Client Key Exchange        |\n     |      7. Change Cipher Spec         |\n     |      8. Client Finished            |\n     |-----------------------------------\x3e|\n     |                                   |\n     |      9. Change Cipher Spec         |\n     |     10. Server Finished            |\n     |<-----------------------------------|\n     |                                   |\n     |      11. Encrypted Data Transfer   |\n     |<-----------------------------------\x3e|\n     |                                   |\n")),(0,a.kt)("h3",{id:"bigo"},"BigO"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"O(1): Constant time"),(0,a.kt)("li",{parentName:"ul"},"O(log n): Logarithmic time"),(0,a.kt)("li",{parentName:"ul"},"O(n): Linear time"),(0,a.kt)("li",{parentName:"ul"},"O(n log n): Linearithmic time"),(0,a.kt)("li",{parentName:"ul"},"O(n\xb2): Quadratic time")))}m.isMDXComponent=!0}}]);
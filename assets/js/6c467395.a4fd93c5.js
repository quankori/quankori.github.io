"use strict";(self.webpackChunk=self.webpackChunk||[]).push([[578],{3905:(e,r,n)=>{n.d(r,{Zo:()=>b,kt:()=>v});var t=n(7294);function l(e,r,n){return r in e?Object.defineProperty(e,r,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[r]=n,e}function s(e,r){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var t=Object.getOwnPropertySymbols(e);r&&(t=t.filter((function(r){return Object.getOwnPropertyDescriptor(e,r).enumerable}))),n.push.apply(n,t)}return n}function o(e){for(var r=1;r<arguments.length;r++){var n=null!=arguments[r]?arguments[r]:{};r%2?s(Object(n),!0).forEach((function(r){l(e,r,n[r])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):s(Object(n)).forEach((function(r){Object.defineProperty(e,r,Object.getOwnPropertyDescriptor(n,r))}))}return e}function a(e,r){if(null==e)return{};var n,t,l=function(e,r){if(null==e)return{};var n,t,l={},s=Object.keys(e);for(t=0;t<s.length;t++)n=s[t],r.indexOf(n)>=0||(l[n]=e[n]);return l}(e,r);if(Object.getOwnPropertySymbols){var s=Object.getOwnPropertySymbols(e);for(t=0;t<s.length;t++)n=s[t],r.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(l[n]=e[n])}return l}var u=t.createContext({}),c=function(e){var r=t.useContext(u),n=r;return e&&(n="function"==typeof e?e(r):o(o({},r),e)),n},b=function(e){var r=c(e.components);return t.createElement(u.Provider,{value:r},e.children)},i="mdxType",p={inlineCode:"code",wrapper:function(e){var r=e.children;return t.createElement(t.Fragment,{},r)}},m=t.forwardRef((function(e,r){var n=e.components,l=e.mdxType,s=e.originalType,u=e.parentName,b=a(e,["components","mdxType","originalType","parentName"]),i=c(n),m=l,v=i["".concat(u,".").concat(m)]||i[m]||p[m]||s;return n?t.createElement(v,o(o({ref:r},b),{},{components:n})):t.createElement(v,o({ref:r},b))}));function v(e,r){var n=arguments,l=r&&r.mdxType;if("string"==typeof e||l){var s=n.length,o=new Array(s);o[0]=m;var a={};for(var u in r)hasOwnProperty.call(r,u)&&(a[u]=r[u]);a.originalType=e,a[i]="string"==typeof e?e:l,o[1]=a;for(var c=2;c<s;c++)o[c]=n[c];return t.createElement.apply(null,o)}return t.createElement.apply(null,n)}m.displayName="MDXCreateElement"},9460:(e,r,n)=>{n.r(r),n.d(r,{assets:()=>u,contentTitle:()=>o,default:()=>p,frontMatter:()=>s,metadata:()=>a,toc:()=>c});var t=n(7462),l=(n(7294),n(3905));const s={title:"Cheatsheet RxJS"},o=void 0,a={unversionedId:"cheatsheet/nodejs/rxjs",id:"cheatsheet/nodejs/rxjs",title:"Cheatsheet RxJS",description:"Observables",source:"@site/docs/cheatsheet/nodejs/rxjs.md",sourceDirName:"cheatsheet/nodejs",slug:"/cheatsheet/nodejs/rxjs",permalink:"/docs/cheatsheet/nodejs/rxjs",draft:!1,tags:[],version:"current",frontMatter:{title:"Cheatsheet RxJS"},sidebar:"cheatsheet",previous:{title:"Cheatsheet Nest.js",permalink:"/docs/cheatsheet/nodejs/nestjs"},next:{title:"Assume Role",permalink:"/docs/cheatsheet/devops/assume-role"}},u={},c=[{value:"Observables",id:"observables",level:3},{value:"Creation Operators",id:"creation-operators",level:3},{value:"Transformation Operators",id:"transformation-operators",level:3},{value:"Filtering Operators",id:"filtering-operators",level:3},{value:"Subjects",id:"subjects",level:3}],b={toc:c},i="wrapper";function p(e){let{components:r,...n}=e;return(0,l.kt)(i,(0,t.Z)({},b,n,{components:r,mdxType:"MDXLayout"}),(0,l.kt)("h3",{id:"observables"},"Observables"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"Create observables")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-ts"},'import { Observable } from "rxjs";\n\n// T\u1ea1o m\u1ed9t Observable \u0111\u01a1n gi\u1ea3n\nconst observable = new Observable((subscriber) => {\n  subscriber.next("Hello");\n  subscriber.next("World");\n  subscriber.complete();\n});\n')),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"Register observables")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-ts"},'observable.subscribe({\n  next(x) {\n    console.log("Received:", x);\n  },\n  error(err) {\n    console.error("Error:", err);\n  },\n  complete() {\n    console.log("Completed");\n  },\n});\n')),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"Cold (not share)")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-ts"},'import { Observable } from "rxjs";\n\n// T\u1ea1o m\u1ed9t Cold Observable\nconst coldObservable = new Observable<number>((subscriber) => {\n  console.log("Observable b\u1eaft \u0111\u1ea7u ph\xe1t d\u1eef li\u1ec7u");\n  subscriber.next(1);\n  subscriber.next(2);\n  subscriber.next(3);\n  subscriber.complete();\n});\n\n// \u0110\u0103ng k\xfd subscriber \u0111\u1ea7u ti\xean\ncoldObservable.subscribe({\n  next: (value) => console.log(`Subscriber 1 nh\u1eadn: ${value}`),\n  complete: () => console.log("Subscriber 1 ho\xe0n th\xe0nh"),\n});\n\n// \u0110\u0103ng k\xfd subscriber th\u1ee9 hai\ncoldObservable.subscribe({\n  next: (value) => console.log(`Subscriber 2 nh\u1eadn: ${value}`),\n  complete: () => console.log("Subscriber 2 ho\xe0n th\xe0nh"),\n});\n')),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"Hot (share)")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-ts"},'import { Subject } from "rxjs";\n\n// T\u1ea1o m\u1ed9t Subject, \u0111\xe2y l\xe0 m\u1ed9t Hot Observable\nconst hotObservable = new Subject<number>();\n\n// \u0110\u0103ng k\xfd subscriber \u0111\u1ea7u ti\xean\nhotObservable.subscribe({\n  next: (value) => console.log(`Subscriber 1 nh\u1eadn: ${value}`),\n});\n\n// Ph\xe1t d\u1eef li\u1ec7u\nhotObservable.next(1);\nhotObservable.next(2);\n\n// \u0110\u0103ng k\xfd subscriber th\u1ee9 hai\nhotObservable.subscribe({\n  next: (value) => console.log(`Subscriber 2 nh\u1eadn: ${value}`),\n});\n\n// Ph\xe1t d\u1eef li\u1ec7u ti\u1ebfp t\u1ee5c\nhotObservable.next(3);\nhotObservable.next(4);\n\n// Ho\xe0n th\xe0nh Observable\nhotObservable.complete();\n')),(0,l.kt)("h3",{id:"creation-operators"},"Creation Operators"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"of")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-ts"},'import { of } from "rxjs";\n\nof(1, 2, 3).subscribe(console.log);\n// Output: 1, 2, 3\n')),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"from")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-ts"},'import { from } from "rxjs";\n\nfrom([10, 20, 30]).subscribe(console.log);\n// Output: 10, 20, 30\n')),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"interval")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-ts"},'import { interval } from "rxjs";\n\nconst source = interval(1000); // 1 gi\xe2y\nsource.subscribe((val) => console.log(val));\n// Output: 0, 1, 2, 3, ...\n')),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"timer")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-ts"},'import { timer } from "rxjs";\n\nconst source = timer(2000, 1000); // B\u1eaft \u0111\u1ea7u sau 2 gi\xe2y, ph\xe1t m\u1ed7i 1 gi\xe2y\nsource.subscribe((val) => console.log(val));\n// Output sau 2 gi\xe2y: 0, sau m\u1ed7i gi\xe2y: 1, 2, 3, ...\n')),(0,l.kt)("h3",{id:"transformation-operators"},"Transformation Operators"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"map")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-ts"},'import { of } from "rxjs";\nimport { map } from "rxjs/operators";\n\nof(1, 2, 3)\n  .pipe(map((x) => x * 10))\n  .subscribe(console.log);\n// Output: 10, 20, 30\n')),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"pluck")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-ts"},'import { of } from "rxjs";\nimport { pluck } from "rxjs/operators";\n\nof({ name: "Alice" }, { name: "Bob" })\n  .pipe(pluck("name"))\n  .subscribe(console.log);\n// Output: \'Alice\', \'Bob\'\n')),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"scan")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-ts"},'import { of } from "rxjs";\nimport { scan } from "rxjs/operators";\n\nof(1, 2, 3, 4)\n  .pipe(scan((acc, curr) => acc + curr, 0))\n  .subscribe(console.log);\n// Output: 1, 3, 6, 10\n')),(0,l.kt)("h3",{id:"filtering-operators"},"Filtering Operators"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"filter")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-ts"},'import { of } from "rxjs";\nimport { filter } from "rxjs/operators";\n\nof(1, 2, 3, 4, 5)\n  .pipe(filter((x) => x % 2 === 0))\n  .subscribe(console.log);\n// Output: 2, 4\n')),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"take")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-ts"},'import { interval } from "rxjs";\nimport { take } from "rxjs/operators";\n\ninterval(1000).pipe(take(3)).subscribe(console.log);\n// Output: 0, 1, 2\n')),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"debounceTime")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-ts"},'import { fromEvent } from "rxjs";\nimport { debounceTime } from "rxjs/operators";\n\nconst clicks = fromEvent(document, "click");\nconst result = clicks.pipe(debounceTime(1000));\nresult.subscribe((x) => console.log("Clicked!"));\n')),(0,l.kt)("h3",{id:"subjects"},"Subjects"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"Create subjects")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-ts"},'import { Subject } from "rxjs";\n\nconst subject = new Subject<number>();\n\nsubject.subscribe({\n  next: (v) => console.log(`Observer A: ${v}`),\n});\nsubject.subscribe({\n  next: (v) => console.log(`Observer B: ${v}`),\n});\n\nsubject.next(1);\n// Output:\n// Observer A: 1\n// Observer B: 1\n\nsubject.next(2);\n// Output:\n// Observer A: 2\n// Observer B: 2\n')),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"BehaviorSubject")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-ts"},'import { BehaviorSubject } from "rxjs";\n\nconst behaviorSubject = new BehaviorSubject<number>(0);\n\nbehaviorSubject.subscribe((val) => console.log(`Subscriber 1: ${val}`));\n\nbehaviorSubject.next(1);\nbehaviorSubject.next(2);\n\nbehaviorSubject.subscribe((val) => console.log(`Subscriber 2: ${val}`));\n\nbehaviorSubject.next(3);\n// Output:\n// Subscriber 1: 0\n// Subscriber 1: 1\n// Subscriber 1: 2\n// Subscriber 2: 2\n// Subscriber 1: 3\n// Subscriber 2: 3\n')),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"ReplaySubject")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-ts"},"const replaySubject = new ReplaySubject<number>(2); // L\u01b0u l\u1ea1i 2 gi\xe1 tr\u1ecb g\u1ea7n nh\u1ea5t\n\nreplaySubject.next(1);\nreplaySubject.next(2);\nreplaySubject.next(3);\n\nreplaySubject.subscribe((val) => console.log(`Subscriber: ${val}`));\n// Output:\n// Subscriber: 2\n// Subscriber: 3\n")))}p.isMDXComponent=!0}}]);
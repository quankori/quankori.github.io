"use strict";(self.webpackChunk=self.webpackChunk||[]).push([[2670],{3905:(e,t,n)=>{n.d(t,{Zo:()=>u,kt:()=>k});var a=n(7294);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function l(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function c(e,t){if(null==e)return{};var n,a,r=function(e,t){if(null==e)return{};var n,a,r={},o=Object.keys(e);for(a=0;a<o.length;a++)n=o[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(a=0;a<o.length;a++)n=o[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var i=a.createContext({}),s=function(e){var t=a.useContext(i),n=t;return e&&(n="function"==typeof e?e(t):l(l({},t),e)),n},u=function(e){var t=s(e.components);return a.createElement(i.Provider,{value:t},e.children)},h="mdxType",p={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},m=a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,o=e.originalType,i=e.parentName,u=c(e,["components","mdxType","originalType","parentName"]),h=s(n),m=r,k=h["".concat(i,".").concat(m)]||h[m]||p[m]||o;return n?a.createElement(k,l(l({ref:t},u),{},{components:n})):a.createElement(k,l({ref:t},u))}));function k(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var o=n.length,l=new Array(o);l[0]=m;var c={};for(var i in t)hasOwnProperty.call(t,i)&&(c[i]=t[i]);c.originalType=e,c[h]="string"==typeof e?e:r,l[1]=c;for(var s=2;s<o;s++)l[s]=n[s];return a.createElement.apply(null,l)}return a.createElement.apply(null,n)}m.displayName="MDXCreateElement"},1606:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>i,contentTitle:()=>l,default:()=>p,frontMatter:()=>o,metadata:()=>c,toc:()=>s});var a=n(7462),r=(n(7294),n(3905));const o={title:"Blockchain Consensus"},l=void 0,c={unversionedId:"programming/blockchain/consensus",id:"programming/blockchain/consensus",title:"Blockchain Consensus",description:"Proof of Work.",source:"@site/docs/programming/blockchain/consensus.md",sourceDirName:"programming/blockchain",slug:"/programming/blockchain/consensus",permalink:"/docs/programming/blockchain/consensus",draft:!1,tags:[],version:"current",frontMatter:{title:"Blockchain Consensus"},sidebar:"programming",previous:{title:"Automated Market Maker",permalink:"/docs/programming/blockchain/amm"},next:{title:"Blockchain Trilemma",permalink:"/docs/programming/blockchain/trilemma"}},i={},s=[{value:"Proof of Work.",id:"proof-of-work",level:2},{value:"Proof of Stake",id:"proof-of-stake",level:2}],u={toc:s},h="wrapper";function p(e){let{components:t,...n}=e;return(0,r.kt)(h,(0,a.Z)({},u,n,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("h2",{id:"proof-of-work"},"Proof of Work."),(0,r.kt)("p",null,"S\u1eed d\u1ee5ng s\u1ee9c m\u1ea1nh m\xe1y t\xednh \u0111\u1ec3 gi\u1ea3i quy\u1ebft v\u1ea5n \u0111\u1ec1."),(0,r.kt)("p",null,"Ng\u01b0\u1eddi khai th\xe1c (miner) s\u1ebd t\xecm ra nonce ch\xednh x\xe1c th\xf4ng qua vi\u1ec7c l\u1eb7p \u0111i l\u1eb7p l\u1ea1i sao cho k\xfd t\u1ef1 \u0111\u1ea7u ti\xean nh\u1ecf h\u01a1n s\u1ed1 \u0111\xedch (target number) trong h\u1ec7 th\u1eadp l\u1ee5c ph\xe2n."),(0,r.kt)("p",null,"S\u1ed1 \u0111\xedch \u0111\u01b0\u1ee3c t\u1ea1o ra \u0111\u1ed9c l\u1eadp b\u1edfi c\xe1c node trong m\u1ea1ng (tu\xe2n theo m\u1ed9t s\u1ed1 quy t\u1eafc c\u1ee5 th\u1ec3)."),(0,r.kt)("p",null,"S\u1ed1 \u0111\xedch c\xe0ng nh\u1ecf, th\u1eddi gian \u0111\u1ec3 t\xecm ra n\xf3 c\xe0ng l\xe2u. V\xed d\u1ee5, m\u1ee5c ti\xeau 0x0001 s\u1ebd t\u1ed1n nhi\u1ec1u th\u1eddi gian h\u01a1n 0x010000."),(0,r.kt)("p",null,"For example:"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"On website ",(0,r.kt)("inlineCode",{parentName:"li"},"https://emn178.github.io/online-tools/sha256.html")),(0,r.kt)("li",{parentName:"ul"},"Target is node have is 32"),(0,r.kt)("li",{parentName:"ul"},"Old hash of old block is ",(0,r.kt)("inlineCode",{parentName:"li"},"0x1dcc4")),(0,r.kt)("li",{parentName:"ul"},"Data in new block is ",(0,r.kt)("inlineCode",{parentName:"li"},"[{a:2, b:3}]")),(0,r.kt)("li",{parentName:"ul"},"When we sum it will result is:")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"  nonce_number:old_hash_block:new_data\n  # Result will be\n  0:0x1dcc4:[{a:2, b:3}]\n  # 9b2265d45e26247d3db353afce35864b673e95c6d6c7194d856d57afedda0a27\n")),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"At that time, the first 2 characters of the string are still smaller than the hash value, so it will not work, then we add 1 to the nonce.")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"  nonce_number:old_hash_block:new_data\n  # S\u1ebd ra l\xe0\n  1:0x1dcc4:[{a:2, b:3}]\n  # ad77af42297b05ee67d22bfd021ea7c2a249cc7797495a482aaa24d34d5d5015\n")),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"Add nonce to 2")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"  nonce_number:old_hash_block:new_data\n  # S\u1ebd ra l\xe0\n  2:0x1dcc4:[{a:2, b:3}]\n  # 08fbf223a91dfb45f74b79789d564fd2244d65e96928b6d0b293d1a823dd6abb\n")),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},'At this point, the first two characters "08" are smaller than the target "32", so the mining is successful.')),(0,r.kt)("p",null,"Qua v\xed d\u1ee5 c\u01a1 b\u1ea3n n\xe0y, ch\xfang ta c\xf3 th\u1ec3 hi\u1ec3u c\u01a1 ch\u1ebf c\u1ee7a vi\u1ec7c gi\u1ea3i quy\u1ebft c\xe1c c\xe2u \u0111\u1ed1 trong m\u1ea1ng, nh\u01b0ng vi\u1ec7c tri\u1ec3n khai thu\u1eadt to\xe1n khai th\xe1c block c\xf3 th\u1ec3 thay \u0111\u1ed5i t\xf9y thu\u1ed9c v\xe0o m\u1ea1ng v\xe0 c\xe1c node tham gia."),(0,r.kt)("h2",{id:"proof-of-stake"},"Proof of Stake"),(0,r.kt)("p",null,"T\u1ea1o m\u1ed9t block d\u1ef1a tr\xean s\u1ed1 ti\u1ec1n c\xf3 trong t\xe0i kho\u1ea3n"),(0,r.kt)("p",null,"Thu\u1eadt to\xe1n s\u1ebd l\u1ea5y hai k\xfd t\u1ef1 \u0111\u1ea7u c\u1ee7a block nh\xe2n v\u1edbi s\u1ed1 \u0111\xedch, sau \u0111\xf3 so s\xe1nh n\xf3 v\u1edbi s\u1ed1 ti\u1ec1n c\u1ee7a ng\u01b0\u1eddi d\xf9ng, ai c\xf3 nhi\u1ec1u h\u01a1n s\u1ebd th\u1eafng."),(0,r.kt)("p",null,"For example:"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"User A has 52 tokens, User B has 15 tokens"),(0,r.kt)("li",{parentName:"ul"},"The node's target is set to 5"),(0,r.kt)("li",{parentName:"ul"},"We have a hash string, for example: 08fbf223a91dfb45f74b79789d564fd2244d65e96928b6d0b293d1a823dd6abb"),(0,r.kt)("li",{parentName:"ul"},"We will take the first two characters, which are 08, multiply it by the target of 5, and the result is 40."),(0,r.kt)("li",{parentName:"ul"},"We can see that user B only has 15 tokens, so they cannot mine the block, but user A has 52 tokens, so they can mine the block successfully.")),(0,r.kt)("p",null,"Qua v\xed d\u1ee5 c\u01a1 b\u1ea3n n\xe0y, ch\xfang ta c\xf3 th\u1ec3 hi\u1ec3u \u0111\u01b0\u1ee3c c\u01a1 ch\u1ebf c\u1ee7a thu\u1eadt to\xe1n khai th\xe1c trong m\u1ea1ng, nh\u01b0ng vi\u1ec7c tri\u1ec3n khai thu\u1eadt to\xe1n khai th\xe1c c\xf3 th\u1ec3 thay \u0111\u1ed5i t\xf9y thu\u1ed9c v\xe0o m\u1ea1ng v\xe0 c\xe1c node tham gia."),(0,r.kt)("p",null,(0,r.kt)("img",{parentName:"p",src:"https://raw.githubusercontent.com/quankori/quankori.github.io/master/src/images/blockchain/6.PNG",alt:"Image"})))}p.isMDXComponent=!0}}]);
"use strict";(self.webpackChunk=self.webpackChunk||[]).push([[4873],{3905:(n,e,t)=>{t.d(e,{Zo:()=>h,kt:()=>d});var a=t(7294);function r(n,e,t){return e in n?Object.defineProperty(n,e,{value:t,enumerable:!0,configurable:!0,writable:!0}):n[e]=t,n}function i(n,e){var t=Object.keys(n);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(n);e&&(a=a.filter((function(e){return Object.getOwnPropertyDescriptor(n,e).enumerable}))),t.push.apply(t,a)}return t}function o(n){for(var e=1;e<arguments.length;e++){var t=null!=arguments[e]?arguments[e]:{};e%2?i(Object(t),!0).forEach((function(e){r(n,e,t[e])})):Object.getOwnPropertyDescriptors?Object.defineProperties(n,Object.getOwnPropertyDescriptors(t)):i(Object(t)).forEach((function(e){Object.defineProperty(n,e,Object.getOwnPropertyDescriptor(t,e))}))}return n}function s(n,e){if(null==n)return{};var t,a,r=function(n,e){if(null==n)return{};var t,a,r={},i=Object.keys(n);for(a=0;a<i.length;a++)t=i[a],e.indexOf(t)>=0||(r[t]=n[t]);return r}(n,e);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(n);for(a=0;a<i.length;a++)t=i[a],e.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(n,t)&&(r[t]=n[t])}return r}var c=a.createContext({}),l=function(n){var e=a.useContext(c),t=e;return n&&(t="function"==typeof n?n(e):o(o({},e),n)),t},h=function(n){var e=l(n.components);return a.createElement(c.Provider,{value:e},n.children)},u="mdxType",p={inlineCode:"code",wrapper:function(n){var e=n.children;return a.createElement(a.Fragment,{},e)}},m=a.forwardRef((function(n,e){var t=n.components,r=n.mdxType,i=n.originalType,c=n.parentName,h=s(n,["components","mdxType","originalType","parentName"]),u=l(t),m=r,d=u["".concat(c,".").concat(m)]||u[m]||p[m]||i;return t?a.createElement(d,o(o({ref:e},h),{},{components:t})):a.createElement(d,o({ref:e},h))}));function d(n,e){var t=arguments,r=e&&e.mdxType;if("string"==typeof n||r){var i=t.length,o=new Array(i);o[0]=m;var s={};for(var c in e)hasOwnProperty.call(e,c)&&(s[c]=e[c]);s.originalType=n,s[u]="string"==typeof n?n:r,o[1]=s;for(var l=2;l<i;l++)o[l]=t[l];return a.createElement.apply(null,o)}return a.createElement.apply(null,t)}m.displayName="MDXCreateElement"},7794:(n,e,t)=>{t.r(e),t.d(e,{assets:()=>c,contentTitle:()=>o,default:()=>p,frontMatter:()=>i,metadata:()=>s,toc:()=>l});var a=t(7462),r=(t(7294),t(3905));const i={title:"Basic"},o=void 0,s={unversionedId:"programming/bash/basic",id:"programming/bash/basic",title:"Basic",description:"Execute",source:"@site/docs/programming/bash/basic.md",sourceDirName:"programming/bash",slug:"/programming/bash/basic",permalink:"/docs/programming/bash/basic",draft:!1,editUrl:"https://github.com/recallwei/wiki/tree/main/website/docs/programming/bash/basic.md",tags:[],version:"current",frontMatter:{title:"Basic"},sidebar:"programming",previous:{title:"Node.js Concept",permalink:"/docs/programming/nodejs/concept"}},c={},l=[{value:"Execute",id:"execute",level:2},{value:"Variable",id:"variable",level:2},{value:"Input",id:"input",level:2},{value:"Math",id:"math",level:2},{value:"Arguments",id:"arguments",level:2},{value:"Piping",id:"piping",level:2},{value:"Conditional",id:"conditional",level:2},{value:"Wildcard",id:"wildcard",level:2},{value:"Loop",id:"loop",level:2},{value:"Case",id:"case",level:2},{value:"Array",id:"array",level:2},{value:"Functions",id:"functions",level:2}],h={toc:l},u="wrapper";function p(n){let{components:e,...t}=n;return(0,r.kt)(u,(0,a.Z)({},h,t,{components:e,mdxType:"MDXLayout"}),(0,r.kt)("h2",{id:"execute"},"Execute"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"chmod +x demo.sh\n")),(0,r.kt)("h2",{id:"variable"},"Variable"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},'#!/bin/bash\n\n# G\xe1n bi\u1ebfn\nMESSAGE="Hello, World"\n\n# \u0110\u1ecdc bi\u1ebfn\necho "message: $MESSAGE"\n\n# Th\u1eddi gian b\u1eaft \u0111\u1ea7u\nSTART=$(date +%s)\n\n# V\u1ecb tr\xed th\u01b0 m\u1ee5c\nDIRECTORY=$(pwd)\n\n# Deley 2 gi\xe2y\nsleep 2\n\n# Th\u1eddi gian sau 2 gi\xe2y\nEND=$(date +%s)\n\n# Kho\u1ea3ng th\u1eddi gian\nDIFFERENCE=$((END - START))\n')),(0,r.kt)("h2",{id:"input"},"Input"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},'#!/bin/bash\n\n# -n: Ch\u1edd nh\u1eadp\necho -n Your name:\nread NAME\n\n# -p: G\u1ed9p chung v\u1edbi read \u0111\u1ecdc t\xean bi\u1ebfn\nread -p "Your name: " NAME\n\n# -sp: \u0110\u1ecdc t\xean bi\u1ebfn nh\u01b0ng kh\xf4ng hi\u1ec7n ra\nread -sp "Your name: " NAME\n\n# \u0110\u1ecdc hostname\nread HOSTNAME < /etc/hostname\n')),(0,r.kt)("h2",{id:"math"},"Math"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},'#!/bin/bash\nNUMBER=5\n\n# X\xe0i let: s\u1ed1 nguy\xean\nlet RESULT=NUMBER+5\n\n# X\xe0i (( )): s\u1ed1 nguy\xean\nRESULT=$((NUMBER + 5))\n\n# X\xe0i [ ]: s\u1ed1 nguy\xean\nRESULT=$[NUMBER + 5]\n\n# Expr: s\u1ed1 nguy\xean\nRESULT=$(expr $NUMBER + 5)\n\n# bc: s\u1ed1 nguy\xean v\xe0 s\u1ed1 th\u1eadp ph\xe2n\nRESULT=`echo "$NUMBER * 1.9" | bc`\n')),(0,r.kt)("h2",{id:"arguments"},"Arguments"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},'#!/bin/bash\n\n# Truy\u1ec1n bi\u1ebfn 0: default, 1: bi\u1ebfn th\u1ee9 nh\u1ea5t\necho "$0"\necho "$1"\n\n# L\u1ea5y h\u1ebft bi\u1ebfn truy\u1ec1n v\xe0o\necho "\\$@: $@"\n\n# T\xednh t\u1ed5ng bi\u1ebfn truy\u1ec1n v\xe0o\necho "Count: $#"\n')),(0,r.kt)("h2",{id:"piping"},"Piping"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},'#!/bin/bash\n\n# Ki\u1ec3m tra file\ncat new_file\n\n# Truy\u1ec1n bi\u1ebfn v\xe0o\n# > ghi \u0111\xe8 t\u1eeb \u0111i\u1ec3m b\u1eaft \u0111\u1ea7u\n# >> ghi th\xeam t\u1eeb \u0111i\u1ec3m k\u1ebft th\xfac\n# < l\u1ea5y ra trong file\n# 2> L\u1ea5y data l\u1ed7i ra file ri\xeang\n# | l\u1ec7nh \u0111\u1ea7u v\xe0o v\xe0 \u0111\u1ea7u ra\necho "Hello" > new_file\necho "Hello 2" >> new_file\nwc < name_file\nls new.sh 2> error_msg\ncat file_1.txt | head -5\n')),(0,r.kt)("h2",{id:"conditional"},"Conditional"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},'#!/bin/bash\n# C\xe2u m\u1eb7c \u0111\u1ecbnh\nif [ condition ];\nthen\n    commands;\nelse\n    commands;\nfi\n\n# Integer\n# -eq => B\u1eb1ng nhau (Equal)\n# -ne => Kh\xf4ng b\u1eb1ng nhau (Not equal)\n# -lt => Nh\u1ecf h\u01a1n (Less than)\n# -gt => L\u1edbn h\u01a1n (Greater than)\n# -le => Nh\u1ecf h\u01a1n ho\u1eb7c b\u1eb1ng (Less or equal)\n# -ge => L\u1edbn h\u01a1n ho\u1eb7c b\u1eb1ng (Greater or equal)\nvar=10\nif [ $var -eq 0 ]; # False\nthen\n    commands;\nfi\n\n# String\n# [[ $str1 = $str2 ]] ho\u1eb7c [[ $str1 == $str2 ]]: Gi\u1ed1ng nhau\n# [[ $str1 != $str2 ]]: Kh\xe1c nhau\n# [[ $str1 > $str2 ]]: Tr\u1ea3 v\u1ec1 TRUE n\u1ebfu srt1 l\u1edbn h\u01a1n str2 t\xednh theo b\u1ea3ng ch\u1eef c\xe1i\n# [[ $str1 < $str2 ]]: Tr\u1ea3 v\u1ec1 TRUE n\u1ebfu srt1 nh\u1ecf h\u01a1n str2 t\xednh theo b\u1ea3ng ch\u1eef c\xe1i\n# [[ -z $str1 ]]: Tr\u1ea3 v\u1ec1 TRUE n\u1ebfu $str1 l\xe0 1 chu\u1ed7i r\u1ed7ng.\n# [[ -n $str1 ]]: Tr\u1ea3 v\u1ec1 TRUE n\u1ebfu $str1 l\xe0 1 chu\u1ed7i kh\xe1c r\u1ed7ng.\nstr1="HELLO"\nstr2="Hello"\nif [[ $str1 > $str2 ]]; # True\nthen\n    commands;\nfi\n\n# File\n# [ -f $file_var]: Tr\u1ea3 v\u1ec1 TRUE n\u1ebfu file_var l\xe0 1 t\u1eadp tin.\n# [ -x $var ]: Tr\u1ea3 v\u1ec1 TRUE n\u1ebfu var l\xe0 t\u1eadp tin v\xe0 c\xf3 quy\u1ec1n th\u1ef1c thi (executable)\n# [ -d $var ]: Tr\u1ea3 v\u1ec1 TRUE n\u1ebfu var l\xe0 1 th\u01b0 m\u1ee5c\n# [ -e $var ]: Tr\u1ea3 v\u1ec1 TRUE n\u1ebfu var t\u1ed3n t\u1ea1i\n# [ -w $var ]: Tr\u1ea3 v\u1ec1 TRUE n\u1ebfu var l\xe0 1 t\u1eadp tin v\xe0 c\xf3 quy\u1ec1n ghi (writable)\n# [ -r $var ]: Tr\u1ea3 v\u1ec1 TRUE n\u1ebfu var l\xe0 1 t\u1eadp tin v\xe0 c\xf3 quy\u1ec1n \u0111\u1ecdc (readable)\n# [ -L $var ]: Tr\u1ea3 v\u1ec1 TRUE n\u1ebfu var l\xe0 1 li\xean k\u1ebft m\u1ec1m (symlink)\nfpath="/etc/passwd"\nif [ -e $fpath ]; then\n    echo File exists;\nelse\n    echo Does not exist;\nfi\n\n# AND ho\u1eb7c && => Tr\u1ea3 v\u1ec1 TRUE khi t\u1ea5t c\u1ea3 c\xe1c \u0111i\u1ec1u ki\u1ec7n \u0111\u1ec1u th\u1ecfa\n# OR ho\u1eb7c || => Tr\u1ea3 v\u1ec1 TRUE khi 1 trong c\xe1c \u0111i\u1ec1u ki\u1ec7n th\u1ecfa\nstr1="Not empty "\nif [[ -n $str1 ]] || [[ -z $str1 ]];\nthen\n    echo TRUE\nfi\n')),(0,r.kt)("h2",{id:"wildcard"},"Wildcard"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"#!/bin/bash\n\nls [sv]*\n# secondfile video.mpeg\n\nls [^a-k]*\n# secondfile thirdfile video.mpeg\n\nls *[0-9]*\n# foo1 foo2 foo3\n\n# *: match b\u1ea5t k\xec\n# ?: match 1 k\xfd t\u1ef1 b\u1ea5t k\xec\n# ^: kho\u1ea3ng c\xe1ch\n# [characters]: match k\xfd t\u1ef1 n\xe0o c\xf3 trong set\n# [!characters]: kh\xf4ng match k\xfd t\u1ef1 n\xe0o c\xf3 trong set\n# [[:class:]]: match k\xfd t\u1ef1 \u0111\u1ecbnh ngh\u0129a b\u1edfi class\n")),(0,r.kt)("h2",{id:"loop"},"Loop"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"#!/bin/bash\n\n# For\nfor var in 0 1 2 3 4 5 6 7 8 9\ndo\n   echo $var\ndone\n\n# While\na=0\nwhile [ $a -lt 10 ]\ndo\n   echo $a\n   a=`expr $a + 1`\ndone\n\n# Until\na=0\nuntil [ ! $a -lt 10 ]\ndo\n   echo $a\n   a=`expr $a + 1`\ndone\n")),(0,r.kt)("h2",{id:"case"},"Case"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},'#!/bin/bash\n\nFRUIT="kiwi"\n\ncase "$FRUIT" in\n   "apple") echo "Apple pie is quite tasty."\n   ;;\n   "banana") echo "I like banana nut bread."\n   ;;\n   "kiwi") echo "New Zealand is famous for kiwi."\n   ;;\nesac\n\n# Case truy\u1ec1n bi\u1ebfn\ncase  in\n   -f) FILE="2"\n      echo "File name is $FILE"\n      ;;\n   -d) DIR="2"\n      echo "Dir name is $DIR"\n      ;;\n   *)\n      echo "`basename 0`:usage: [-f file] | [-d directory]"\n      exit 1 # Command to come out of the program with status 1\n      ;;\nesac\n\n# $./test.sh\n# test.sh: usage: [ -f filename ] | [ -d directory ]\n# $ ./test.sh -f index.jsp\n# $ vi test.sh\n# $ ./test.sh -f index.jsp\n# File name is index.jsp\n# $ ./test.sh -d unix\n# Dir name is unix\n')),(0,r.kt)("h2",{id:"array"},"Array"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},'#!/bin/sh\n\nNAME[0]="Zara"\nNAME[1]="Qadir"\nNAME[2]="Mahnaz"\nNAME[3]="Ayan"\nNAME[4]="Daisy"\n\necho ${NAME[0]} # L\u1ea5y gi\xe1 tr\u1ecb m\u1ea3ng t\u1ea1i v\u1ecb tr\xed truy\u1ec1n v\xe0o\necho "First Method:${NAME[*]}"\necho "Second Method:${NAME[@]}"\necho ${#NAME[*]} # Chi\u1ec1u d\xe0i m\u1ea3ng\n')),(0,r.kt)("h2",{id:"functions"},"Functions"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},'#!/bin/bash\n\n# Filename: function.sh\n\nfunction add()\n{\n    num1=$1    #--\x3e L\u1ea5y gi\xe1 tr\u1ecb c\u1ee7a \u0111\u1ed1i s\u1ed1 th\u1ee9 1\n    num2=$2    #--\x3e L\u1ea5y gi\xe1 tr\u1ecb c\u1ee7a \u0111\u1ed1i s\u1ed1 th\u1ee9 2\n    sum=`expr $num1 + $num2` #--\x3e T\xednh t\u1ed5ng 2 s\u1ed1\n\n    # In ra k\u1ebft qu\u1ea3\n    echo "First number is: " $num1\n    echo "Second number is: " $num2\n    echo "$1 + $2 = " $sum\n}\n# $ add 100 200\n# First number is: 100\n# Second number is: 200\n# 100 + 200 = 300\n\nfunction factorial()\n{\n    if [ $1 -eq 0 ]\n    then\n    {\n        echo 1\n    }\n    else\n    {\n        echo $(($1 * $(factorial $(($1-1))))) -> G\u1ecdi l\u1ea1i h\xe0m factional \u1edf tr\xean\n    }\n    fi\n}\n')))}p.isMDXComponent=!0}}]);
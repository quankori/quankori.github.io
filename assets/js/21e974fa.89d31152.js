"use strict";(self.webpackChunk=self.webpackChunk||[]).push([[4574],{3905:(e,t,n)=>{n.d(t,{Zo:()=>p,kt:()=>m});var r=n(7294);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function s(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function l(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?s(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):s(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function o(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},s=Object.keys(e);for(r=0;r<s.length;r++)n=s[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var s=Object.getOwnPropertySymbols(e);for(r=0;r<s.length;r++)n=s[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var u=r.createContext({}),c=function(e){var t=r.useContext(u),n=t;return e&&(n="function"==typeof e?e(t):l(l({},t),e)),n},p=function(e){var t=c(e.components);return r.createElement(u.Provider,{value:t},e.children)},i="mdxType",h={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},d=r.forwardRef((function(e,t){var n=e.components,a=e.mdxType,s=e.originalType,u=e.parentName,p=o(e,["components","mdxType","originalType","parentName"]),i=c(n),d=a,m=i["".concat(u,".").concat(d)]||i[d]||h[d]||s;return n?r.createElement(m,l(l({ref:t},p),{},{components:n})):r.createElement(m,l({ref:t},p))}));function m(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var s=n.length,l=new Array(s);l[0]=d;var o={};for(var u in t)hasOwnProperty.call(t,u)&&(o[u]=t[u]);o.originalType=e,o[i]="string"==typeof e?e:a,l[1]=o;for(var c=2;c<s;c++)l[c]=n[c];return r.createElement.apply(null,l)}return r.createElement.apply(null,n)}d.displayName="MDXCreateElement"},6359:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>u,contentTitle:()=>l,default:()=>h,frontMatter:()=>s,metadata:()=>o,toc:()=>c});var r=n(7462),a=(n(7294),n(3905));const s={title:"SSH CheatSheet"},l=void 0,o={unversionedId:"cheatsheet/ssh",id:"cheatsheet/ssh",title:"SSH CheatSheet",description:"Generate SSH",source:"@site/docs/cheatsheet/ssh.md",sourceDirName:"cheatsheet",slug:"/cheatsheet/ssh",permalink:"/docs/cheatsheet/ssh",draft:!1,tags:[],version:"current",frontMatter:{title:"SSH CheatSheet"}},u={},c=[{value:"Generate SSH",id:"generate-ssh",level:2},{value:"Step add user to ec2",id:"step-add-user-to-ec2",level:2},{value:"SSH Tunnel",id:"ssh-tunnel",level:2}],p={toc:c},i="wrapper";function h(e){let{components:t,...n}=e;return(0,a.kt)(i,(0,r.Z)({},p,n,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("h2",{id:"generate-ssh"},"Generate SSH"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"Generate SSH (Default OpenSSH)")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-bash"},"ssh-keygen -f <path>\n")),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"Generate SSH PEM (Privacy-Enhanced Mail)")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-bash"},"ssh-keygen -t rsa -m PEM -f <path>\n")),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"Generate SSH GIT (ED25519)")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-bash"},'ssh-keygen -t ed25519 -C "minhquan.k0r1@gmail.com"\n')),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-bash"},'eval "$(ssh-agent -s)"\n')),(0,a.kt)("p",null,"Add ssh key account to ssh-agent"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-bash"},"ssh-add ~/.ssh/id_ed25519\n")),(0,a.kt)("h2",{id:"step-add-user-to-ec2"},"Step add user to ec2"),(0,a.kt)("p",null,"Add new user"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-bash"},"sudo adduser newuser\n")),(0,a.kt)("p",null,"Create folder ssh"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-bash"},"sudo mkdir /home/newuser/.ssh\n")),(0,a.kt)("p",null,"Copy public SSH user to file"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-bash"},"sudo nano /home/newuser/.ssh/authorized_keys\n")),(0,a.kt)("p",null,"Grant permission for newuser"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-bash"},"sudo chown -R newuser:newuser /home/newuser/.ssh\nsudo chmod 700 /home/newuser/.ssh\nsudo chmod 600 /home/newuser/.ssh/authorized_keys\n")),(0,a.kt)("p",null,"User test"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-bash"},"ssh newuser@<ip_ec2>\n")),(0,a.kt)("h2",{id:"ssh-tunnel"},"SSH Tunnel"),(0,a.kt)("p",null,"Dynamic Port Forwarding"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-bash"},'ssh -D 8080 -N -i "key.pem" ec2-user@server\n')),(0,a.kt)("p",null,"Change SOCKS Network config"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},"Server: 127.0.0.1\n\nPort: 8080\n")))}h.isMDXComponent=!0}}]);
"use strict";(self.webpackChunk=self.webpackChunk||[]).push([[3413],{3905:(e,n,t)=>{t.d(n,{Zo:()=>l,kt:()=>v});var r=t(7294);function o(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function c(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);n&&(r=r.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,r)}return t}function s(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?c(Object(t),!0).forEach((function(n){o(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):c(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function a(e,n){if(null==e)return{};var t,r,o=function(e,n){if(null==e)return{};var t,r,o={},c=Object.keys(e);for(r=0;r<c.length;r++)t=c[r],n.indexOf(t)>=0||(o[t]=e[t]);return o}(e,n);if(Object.getOwnPropertySymbols){var c=Object.getOwnPropertySymbols(e);for(r=0;r<c.length;r++)t=c[r],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(o[t]=e[t])}return o}var i=r.createContext({}),p=function(e){var n=r.useContext(i),t=n;return e&&(t="function"==typeof e?e(n):s(s({},n),e)),t},l=function(e){var n=p(e.components);return r.createElement(i.Provider,{value:n},e.children)},d="mdxType",u={inlineCode:"code",wrapper:function(e){var n=e.children;return r.createElement(r.Fragment,{},n)}},m=r.forwardRef((function(e,n){var t=e.components,o=e.mdxType,c=e.originalType,i=e.parentName,l=a(e,["components","mdxType","originalType","parentName"]),d=p(t),m=o,v=d["".concat(i,".").concat(m)]||d[m]||u[m]||c;return t?r.createElement(v,s(s({ref:n},l),{},{components:t})):r.createElement(v,s({ref:n},l))}));function v(e,n){var t=arguments,o=n&&n.mdxType;if("string"==typeof e||o){var c=t.length,s=new Array(c);s[0]=m;var a={};for(var i in n)hasOwnProperty.call(n,i)&&(a[i]=n[i]);a.originalType=e,a[d]="string"==typeof e?e:o,s[1]=a;for(var p=2;p<c;p++)s[p]=t[p];return r.createElement.apply(null,s)}return r.createElement.apply(null,t)}m.displayName="MDXCreateElement"},9634:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>i,contentTitle:()=>s,default:()=>u,frontMatter:()=>c,metadata:()=>a,toc:()=>p});var r=t(7462),o=(t(7294),t(3905));const c={title:"Providers"},s=void 0,a={unversionedId:"programming/nestjs/providers",id:"programming/nestjs/providers",title:"Providers",description:"Image",source:"@site/docs/programming/nestjs/providers.md",sourceDirName:"programming/nestjs",slug:"/programming/nestjs/providers",permalink:"/docs/programming/nestjs/providers",draft:!1,tags:[],version:"current",frontMatter:{title:"Providers"},sidebar:"programming",previous:{title:"Lifecycle Events",permalink:"/docs/programming/nestjs/lifecycle-events"},next:{title:"Modules",permalink:"/docs/programming/nestjs/modules"}},i={},p=[{value:"Concept",id:"concept",level:2},{value:"Standart Providers",id:"standart-providers",level:2},{value:"Customer Providers",id:"customer-providers",level:2},{value:"Value providers: useValue",id:"value-providers-usevalue",level:3},{value:"Class providers: useClass",id:"class-providers-useclass",level:3},{value:"Factory providers: useFactory",id:"factory-providers-usefactory",level:3},{value:"Alias providers: useExisting",id:"alias-providers-useexisting",level:3},{value:"Non-service based providers",id:"non-service-based-providers",level:3},{value:"Provider scope",id:"provider-scope",level:2}],l={toc:p},d="wrapper";function u(e){let{components:n,...t}=e;return(0,o.kt)(d,(0,r.Z)({},l,t,{components:n,mdxType:"MDXLayout"}),(0,o.kt)("p",null,(0,o.kt)("img",{parentName:"p",src:"https://raw.githubusercontent.com/quankori/quankori.github.io/master/src/images/nestjs/1.png",alt:"Image"})),(0,o.kt)("h2",{id:"concept"},"Concept"),(0,o.kt)("p",null,"Trong NestJS, providers l\xe0 c\xe1c \u0111\u1ed1i t\u01b0\u1ee3ng ch\u1ecbu tr\xe1ch nhi\u1ec7m cung c\u1ea5p c\xe1c d\u1ecbch v\u1ee5, h\xe0m, hay \u0111\u1ed1i t\u01b0\u1ee3ng cho c\xe1c ph\u1ea7n kh\xe1c trong \u1ee9ng d\u1ee5ng nh\u01b0 controllers, modules, v\xe0 injectables. Providers l\xe0 c\u1ed1t l\xf5i c\u1ee7a h\u1ec7 th\u1ed1ng dependency injection trong NestJS, cho ph\xe9p c\xe1c ph\u1ea7n kh\xe1c trong \u1ee9ng d\u1ee5ng y\xeau c\u1ea7u v\xe0 s\u1eed d\u1ee5ng c\xe1c d\u1ecbch v\u1ee5 m\xe0 kh\xf4ng c\u1ea7n bi\u1ebft c\xe1ch ch\xednh x\xe1c ch\xfang \u0111\u01b0\u1ee3c t\u1ea1o ra."),(0,o.kt)("h2",{id:"standart-providers"},"Standart Providers"),(0,o.kt)("p",null,"C\xe1c providers \u0111\u01b0\u1ee3c \u0111\u1ecbnh ngh\u0129a b\u1eb1ng c\xe1ch s\u1eed d\u1ee5ng c\xfa ph\xe1p ",(0,o.kt)("inlineCode",{parentName:"p"},"@Injectable()")," decorator v\xe0 \u0111\u01b0\u1ee3c cung c\u1ea5p cho c\xe1c module \u0111\u1ec3 s\u1eed d\u1ee5ng"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-ts"},'import { Injectable } from "@nestjs/common";\n\n@Injectable()\nexport class CatsService {\n  findAll() {\n    return ["Cat 1", "Cat 2"];\n  }\n}\n')),(0,o.kt)("h2",{id:"customer-providers"},"Customer Providers"),(0,o.kt)("p",null,"B\xean c\u1ea1nh vi\u1ec7c s\u1eed d\u1ee5ng @Injectable() decorator, b\u1ea1n c\u0169ng c\xf3 th\u1ec3 t\u1ea1o c\xe1c custom provider b\u1eb1ng c\xe1ch s\u1eed d\u1ee5ng c\xfa ph\xe1p object literal \u0111\u1ec3 \u0111\u1ecbnh ngh\u0129a provider."),(0,o.kt)("h3",{id:"value-providers-usevalue"},"Value providers: useValue"),(0,o.kt)("p",null,"S\u1eed d\u1ee5ng useValue \u0111\u1ec3 cung c\u1ea5p gi\xe1 tr\u1ecb c\u1ed1 \u0111\u1ecbnh cho provider."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-ts"},'const catsServiceProvider = {\n  provide: "CatsService",\n  useValue: {\n    findAll: () => ["Cat 1", "Cat 2"],\n  },\n};\n')),(0,o.kt)("h3",{id:"class-providers-useclass"},"Class providers: useClass"),(0,o.kt)("p",null,"S\u1eed d\u1ee5ng useClass \u0111\u1ec3 cung c\u1ea5p m\u1ed9t class \u0111\u1ec3 t\u1ea1o instance cho provider."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-ts"},'const catsServiceProvider = {\n  provide: "CatsService",\n  useClass: CatsService,\n};\n')),(0,o.kt)("h3",{id:"factory-providers-usefactory"},"Factory providers: useFactory"),(0,o.kt)("p",null,"Factory providers cho ph\xe9p b\u1ea1n s\u1eed d\u1ee5ng m\u1ed9t h\xe0m \u0111\u1ec3 t\u1ea1o ra instance c\u1ee7a provider. \u0110i\u1ec1u n\xe0y gi\xfap b\u1ea1n c\xf3 th\u1ec3 t\xf9y ch\u1ec9nh vi\u1ec7c kh\u1edfi t\u1ea1o c\u1ee7a provider d\u1ef1a tr\xean logic ho\u1eb7c c\u1ea5u h\xecnh c\u1ee5 th\u1ec3."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-ts"},'import { Module } from "@nestjs/common";\nimport { Connection, DatabaseService } from "./database.service";\n\n@Module({\n  providers: [\n    DatabaseService,\n    {\n      provide: "CONNECTION",\n      useFactory: (connection: Connection) => {\n        return new DatabaseService(connection);\n      },\n      inject: [Connection],\n    },\n  ],\n  exports: ["CONNECTION", DatabaseService],\n})\nexport class DatabaseModule {}\n')),(0,o.kt)("p",null,"Trong v\xed d\u1ee5 n\xe0y, DatabaseService l\xe0 m\u1ed9t provider, v\xe0 CONNECTION \u0111\u01b0\u1ee3c t\u1ea1o b\u1edfi h\xe0m factory. H\xe0m factory c\xf3 th\u1ec3 truy c\u1eadp v\xe0 s\u1eed d\u1ee5ng Connection \u0111\u1ec3 t\u1ea1o instance c\u1ee7a DatabaseService."),(0,o.kt)("p",null,"Trong v\xed d\u1ee5 n\xe0y, Connection l\xe0 m\u1ed9t class/provider kh\xe1c \u0111\u01b0\u1ee3c inject v\xe0o h\xe0m factory th\xf4ng qua ",(0,o.kt)("inlineCode",{parentName:"p"},"inject: [Connection]"),". Khi NestJS c\u1ea7n t\u1ea1o instance c\u1ee7a CONNECTION provider, n\xf3 s\u1ebd t\u1ef1 \u0111\u1ed9ng inject m\u1ed9t instance c\u1ee7a Connection v\xe0o h\xe0m factory."),(0,o.kt)("h3",{id:"alias-providers-useexisting"},"Alias providers: useExisting"),(0,o.kt)("p",null,"Alias providers cho ph\xe9p b\u1ea1n t\u1ea1o m\u1ed9t t\xean kh\xe1c cho m\u1ed9t provider hi\u1ec7n c\xf3. \u0110i\u1ec1u n\xe0y h\u1eefu \xedch khi b\u1ea1n mu\u1ed1n s\u1eed d\u1ee5ng m\u1ed9t t\xean r\xfat g\u1ecdn ho\u1eb7c thay \u0111\u1ed5i t\xean c\u1ee7a m\u1ed9t provider m\xe0 kh\xf4ng \u1ea3nh h\u01b0\u1edfng \u0111\u1ebfn vi\u1ec7c s\u1eed d\u1ee5ng provider n\xe0y trong c\xe1c module kh\xe1c."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-ts"},'import { Module } from "@nestjs/common";\nimport { ExistingService } from "./existing.service";\n\n@Module({\n  providers: [ExistingService],\n  exports: [ExistingService],\n})\nexport class AppModule {}\n')),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-ts"},'import { Module } from "@nestjs/common";\nimport { AliasService } from "./alias.service";\n\n@Module({\n  providers: [\n    {\n      provide: "AliasService",\n      useExisting: ExistingService,\n    },\n  ],\n})\nexport class CatsModule {}\n')),(0,o.kt)("p",null,"Trong v\xed d\u1ee5 n\xe0y, provider ",(0,o.kt)("inlineCode",{parentName:"p"},"AliasService")," th\u1ef1c ch\u1ea5t l\xe0 ",(0,o.kt)("inlineCode",{parentName:"p"},"ExistingService"),", nh\u01b0ng c\xf3 t\xean kh\xe1c \u0111\u1ec3 s\u1eed d\u1ee5ng trong module ",(0,o.kt)("inlineCode",{parentName:"p"},"CatsModule"),"."),(0,o.kt)("h3",{id:"non-service-based-providers"},"Non-service based providers"),(0,o.kt)("p",null,"C\xf3 th\u1ec3 s\u1eed d\u1ee5ng non-service based providers \u0111\u1ec3 \u0111\u1ecbnh ngh\u0129a c\xe1c gi\xe1 tr\u1ecb kh\xf4ng c\u1ea7n t\u1ea1o instance c\u1ee7a class provider. Ch\xfang th\u01b0\u1eddng \u0111\u01b0\u1ee3c s\u1eed d\u1ee5ng \u0111\u1ec3 cung c\u1ea5p c\xe1c gi\xe1 tr\u1ecb \u0111\u01a1n gi\u1ea3n nh\u01b0 chu\u1ed7i, s\u1ed1 ho\u1eb7c h\u1eb1ng s\u1ed1."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-ts"},'import { Module } from "@nestjs/common";\n\n@Module({\n  providers: [\n    {\n      provide: "API_KEY",\n      useValue: "your-api-key",\n    },\n    {\n      provide: "MAX_RETRIES",\n      useValue: 5,\n    },\n  ],\n})\nexport class AppModule {}\n')),(0,o.kt)("p",null,"S\u1eed d\u1ee5ng"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-ts"},'import { Controller, Get, Inject } from "@nestjs/common";\n\n@Controller("cats")\nexport class CatsController {\n  constructor(\n    @Inject("API_KEY") private apiKey: string,\n    @Inject("MAX_RETRIES") private maxRetries: number\n  ) {}\n\n  @Get()\n  getCats() {\n    console.log("API Key:", this.apiKey);\n    console.log("Max Retries:", this.maxRetries);\n    // Your controller logic here\n  }\n}\n')),(0,o.kt)("h2",{id:"provider-scope"},"Provider scope"),(0,o.kt)("p",null,"M\u1ed7i provider c\xf3 m\u1ed9t ph\u1ea1m vi s\u1eed d\u1ee5ng (scope) ri\xeang, bao g\u1ed3m ",(0,o.kt)("inlineCode",{parentName:"p"},"SINGLETON"),", ",(0,o.kt)("inlineCode",{parentName:"p"},"TRANSIENT"),", v\xe0 ",(0,o.kt)("inlineCode",{parentName:"p"},"REQUEST"),".\nV\xed d\u1ee5 th\xec khi request t\u1ea1o g\u1eedi t\u1edbi scope ",(0,o.kt)("inlineCode",{parentName:"p"},"SINGLETON")," th\xec s\u1ebd d\xf9ng l\u1ea1i instance \u0111\xe3 x\xe0i, c\xf2n ",(0,o.kt)("inlineCode",{parentName:"p"},"TRANSIENT")," v\xe0 ",(0,o.kt)("inlineCode",{parentName:"p"},"REQUEST")," s\u1ebd t\u1ea1o m\u1edbi instance."),(0,o.kt)("p",null,(0,o.kt)("strong",{parentName:"p"},"Singleton")," (M\u1eb7c \u0111\u1ecbnh): M\u1ed7i provider ch\u1ec9 \u0111\u01b0\u1ee3c t\u1ea1o duy nh\u1ea5t m\u1ed9t l\u1ea7n v\xe0 \u0111\u01b0\u1ee3c chia s\u1ebb cho t\u1ea5t c\u1ea3 c\xe1c module v\xe0 th\xe0nh ph\u1ea7n trong \u1ee9ng d\u1ee5ng. \u0110i\u1ec1u n\xe0y \u0111\u1ea3m b\u1ea3o r\u1eb1ng m\u1ed9t instance c\u1ee7a provider s\u1ebd \u0111\u01b0\u1ee3c s\u1eed d\u1ee5ng cho t\u1ea5t c\u1ea3 c\xe1c y\xeau c\u1ea7u trong \u1ee9ng d\u1ee5ng."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-ts"},'import { Injectable, Scope } from "@nestjs/common";\n\n@Injectable({ scope: Scope.DEFAULT }) // Ho\u1eb7c kh\xf4ng c\u1ea7n khai b\xe1o scope v\xec singleton l\xe0 m\u1eb7c \u0111\u1ecbnh\n')),(0,o.kt)("p",null,(0,o.kt)("strong",{parentName:"p"},"Transient"),": M\u1ed7i y\xeau c\u1ea7u (request) s\u1ebd t\u1ea1o ra m\u1ed9t instance ri\xeang c\u1ee7a provider. \u0110i\u1ec1u n\xe0y \u0111\u1ea3m b\u1ea3o r\u1eb1ng m\u1ed7i y\xeau c\u1ea7u s\u1ebd c\xf3 m\u1ed9t instance \u0111\u1ed9c l\u1eadp c\u1ee7a provider m\xe0 kh\xf4ng \u1ea3nh h\u01b0\u1edfng \u0111\u1ebfn c\xe1c y\xeau c\u1ea7u kh\xe1c."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-ts"},'import { Injectable, Scope } from "@nestjs/common";\n\n@Injectable({ scope: Scope.TRANSIENT })\n')),(0,o.kt)("p",null,(0,o.kt)("strong",{parentName:"p"},"Request"),": C\u01a1 ch\u1ebf n\xe0y t\u1ea1o ra m\u1ed9t instance ri\xeang c\u1ee7a provider cho m\u1ed7i y\xeau c\u1ea7u (request), nh\u01b0ng kh\xe1c v\u1edbi transient, c\xe1c instance c\u1ee7a request-scoped provider s\u1ebd \u0111\u01b0\u1ee3c chia s\u1ebb trong su\u1ed1t qu\xe1 tr\xecnh x\u1eed l\xfd m\u1ed9t y\xeau c\u1ea7u duy nh\u1ea5t. C\xe1c y\xeau c\u1ea7u kh\xe1c s\u1ebd c\xf3 c\xe1c instance kh\xe1c nhau."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-ts"},"import { Injectable, Scope } from '@nestjs/common';\n\n@Injectable({ scope: Scope.REQUEST })\n")))}u.isMDXComponent=!0}}]);
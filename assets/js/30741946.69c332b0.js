"use strict";(self.webpackChunk=self.webpackChunk||[]).push([[2934],{3905:(e,a,t)=>{t.d(a,{Zo:()=>d,kt:()=>k});var n=t(7294);function r(e,a,t){return a in e?Object.defineProperty(e,a,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[a]=t,e}function l(e,a){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);a&&(n=n.filter((function(a){return Object.getOwnPropertyDescriptor(e,a).enumerable}))),t.push.apply(t,n)}return t}function o(e){for(var a=1;a<arguments.length;a++){var t=null!=arguments[a]?arguments[a]:{};a%2?l(Object(t),!0).forEach((function(a){r(e,a,t[a])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):l(Object(t)).forEach((function(a){Object.defineProperty(e,a,Object.getOwnPropertyDescriptor(t,a))}))}return e}function c(e,a){if(null==e)return{};var t,n,r=function(e,a){if(null==e)return{};var t,n,r={},l=Object.keys(e);for(n=0;n<l.length;n++)t=l[n],a.indexOf(t)>=0||(r[t]=e[t]);return r}(e,a);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);for(n=0;n<l.length;n++)t=l[n],a.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(r[t]=e[t])}return r}var s=n.createContext({}),i=function(e){var a=n.useContext(s),t=a;return e&&(t="function"==typeof e?e(a):o(o({},a),e)),t},d=function(e){var a=i(e.components);return n.createElement(s.Provider,{value:a},e.children)},p="mdxType",u={inlineCode:"code",wrapper:function(e){var a=e.children;return n.createElement(n.Fragment,{},a)}},m=n.forwardRef((function(e,a){var t=e.components,r=e.mdxType,l=e.originalType,s=e.parentName,d=c(e,["components","mdxType","originalType","parentName"]),p=i(t),m=r,k=p["".concat(s,".").concat(m)]||p[m]||u[m]||l;return t?n.createElement(k,o(o({ref:a},d),{},{components:t})):n.createElement(k,o({ref:a},d))}));function k(e,a){var t=arguments,r=a&&a.mdxType;if("string"==typeof e||r){var l=t.length,o=new Array(l);o[0]=m;var c={};for(var s in a)hasOwnProperty.call(a,s)&&(c[s]=a[s]);c.originalType=e,c[p]="string"==typeof e?e:r,o[1]=c;for(var i=2;i<l;i++)o[i]=t[i];return n.createElement.apply(null,o)}return n.createElement.apply(null,t)}m.displayName="MDXCreateElement"},979:(e,a,t)=>{t.r(a),t.d(a,{assets:()=>s,contentTitle:()=>o,default:()=>u,frontMatter:()=>l,metadata:()=>c,toc:()=>i});var n=t(7462),r=(t(7294),t(3905));const l={title:"Docker CheatSheet"},o=void 0,c={unversionedId:"cheatsheet/docker",id:"cheatsheet/docker",title:"Docker CheatSheet",description:"Setup",source:"@site/docs/cheatsheet/docker.md",sourceDirName:"cheatsheet",slug:"/cheatsheet/docker",permalink:"/docs/cheatsheet/docker",draft:!1,editUrl:"https://github.com/recallwei/wiki/tree/main/website/docs/cheatsheet/docker.md",tags:[],version:"current",frontMatter:{title:"Docker CheatSheet"},sidebar:"cheatsheet",previous:{title:"AWS CheatSheet",permalink:"/docs/cheatsheet/aws"},next:{title:"GIT CheatSheet",permalink:"/docs/cheatsheet/git"}},s={},i=[{value:"Setup",id:"setup",level:2},{value:"Debian Docker",id:"debian-docker",level:3},{value:"RedHat Docker",id:"redhat-docker",level:3},{value:"AWS EC2 Docker",id:"aws-ec2-docker",level:3},{value:"Docker compose",id:"docker-compose",level:3},{value:"Stop all container",id:"stop-all-container",level:2},{value:"Remove all images",id:"remove-all-images",level:2},{value:"Remove all containers",id:"remove-all-containers",level:2},{value:"Remove all volumes",id:"remove-all-volumes",level:2},{value:"List images",id:"list-images",level:2},{value:"Pull image",id:"pull-image",level:2},{value:"Remove image selected",id:"remove-image-selected",level:2},{value:"Access image",id:"access-image",level:2},{value:"Log container running",id:"log-container-running",level:2},{value:"Access container runnning",id:"access-container-runnning",level:2},{value:"Restart container",id:"restart-container",level:2},{value:"Stop container",id:"stop-container",level:2},{value:"Remove container",id:"remove-container",level:2},{value:"Execute container",id:"execute-container",level:2},{value:"Log container",id:"log-container",level:2},{value:"Copy file to container",id:"copy-file-to-container",level:2},{value:"Docker log tail container",id:"docker-log-tail-container",level:2}],d={toc:i},p="wrapper";function u(e){let{components:a,...t}=e;return(0,r.kt)(p,(0,n.Z)({},d,t,{components:a,mdxType:"MDXLayout"}),(0,r.kt)("h2",{id:"setup"},"Setup"),(0,r.kt)("h3",{id:"debian-docker"},"Debian Docker"),(0,r.kt)("p",null,"Install docker"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"sudo apt install docker.io\n")),(0,r.kt)("p",null,"Active service"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"sudo systemctl enable --now docker\n")),(0,r.kt)("p",null,"Add user to group"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"sudo usermod -aG docker $USER\n")),(0,r.kt)("p",null,"Group docker"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"newgrp docker\n")),(0,r.kt)("h3",{id:"redhat-docker"},"RedHat Docker"),(0,r.kt)("p",null,"Install docker"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"yum install docker-ce docker-ce-cli containerd.io\nyum install -y yum-utils\nyum-config-manager --add-repo https://download.docker.com/linux/centos/docker-ce.repo\nyum install docker-ce docker-ce-cli containerd.io\n")),(0,r.kt)("p",null,"Active service"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"systemctl start docker\n")),(0,r.kt)("h3",{id:"aws-ec2-docker"},"AWS EC2 Docker"),(0,r.kt)("p",null,"Update system"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"sudo yum update\n")),(0,r.kt)("p",null,"Install docker"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"sudo yum search docker\n")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"sudo yum info docker\n")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"sudo yum install docker\n")),(0,r.kt)("p",null,"Active service"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"sudo usermod -a -G docker ec2-user\nid ec2-user\nnewgrp docker\n")),(0,r.kt)("p",null,"Enable docker service"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"sudo systemctl enable docker.service\n")),(0,r.kt)("p",null,"Enable docker service"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"sudo systemctl start docker.service\n")),(0,r.kt)("p",null,"Docker-compose"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"wget https://github.com/docker/compose/releases/latest/download/docker-compose-$(uname -s)-$(uname -m)\nsudo mv docker-compose-$(uname -s)-$(uname -m) /usr/local/bin/docker-compose\nsudo chmod -v +x /usr/local/bin/docker-compose\n")),(0,r.kt)("h3",{id:"docker-compose"},"Docker compose"),(0,r.kt)("p",null,"Install docker compose"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},'sudo curl -L "https://github.com/docker/compose/releases/download/1.25.3/docker-compose-$(uname -s)-$(uname -m)" -o /usr/local/bin/docker-compose\n')),(0,r.kt)("p",null,"Chmod file"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"sudo chmod +x /usr/local/bin/docker-compose\n")),(0,r.kt)("h2",{id:"stop-all-container"},"Stop all container"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"docker stop $(docker ps -a -q)\n")),(0,r.kt)("h2",{id:"remove-all-images"},"Remove all images"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"docker rmi -f $(docker images -a -q)\n")),(0,r.kt)("h2",{id:"remove-all-containers"},"Remove all containers"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"docker rm $(docker ps -a -q)\n")),(0,r.kt)("h2",{id:"remove-all-volumes"},"Remove all volumes"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"docker system prune\n")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"docker volume rm $(docker volume ls -qf dangling=true | xargs)\n")),(0,r.kt)("h2",{id:"list-images"},"List images"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"docker images\n")),(0,r.kt)("h2",{id:"pull-image"},"Pull image"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"docker pull image_name:version\n")),(0,r.kt)("h2",{id:"remove-image-selected"},"Remove image selected"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"docker image rm image_name:version\n")),(0,r.kt)("h2",{id:"access-image"},"Access image"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"# condition:\n# --name: \u0110\u1eb7t t\xean container\n# --port: T\u1ea1o port\n# -i: Cho ph\xe9p nh\u1eadn tham s\u1ed1\n# -t: Ch\u1ea1y termnial\ndocker run -it image_name /bin/bash\n")),(0,r.kt)("h2",{id:"log-container-running"},"Log container running"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"docker ps\n")),(0,r.kt)("h2",{id:"access-container-runnning"},"Access container runnning"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"docker attach container_id\n")),(0,r.kt)("h2",{id:"restart-container"},"Restart container"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"docker start container_id\n")),(0,r.kt)("h2",{id:"stop-container"},"Stop container"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"docker stop container_id\n")),(0,r.kt)("h2",{id:"remove-container"},"Remove container"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"docker rm container_id\n")),(0,r.kt)("h2",{id:"execute-container"},"Execute container"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"docker exec -it container_id /bin/bash\n")),(0,r.kt)("h2",{id:"log-container"},"Log container"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"docker logs -f container_id\n")),(0,r.kt)("h2",{id:"copy-file-to-container"},"Copy file to container"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"docker cp <local_path> 1d8:/<remote_path>\n")),(0,r.kt)("h2",{id:"docker-log-tail-container"},"Docker log tail container"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"docker logs -t --tail 1000 container 2>&1 | grep -i error\n")))}u.isMDXComponent=!0}}]);
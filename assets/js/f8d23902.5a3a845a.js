"use strict";(self.webpackChunk=self.webpackChunk||[]).push([[1828],{3905:(e,t,n)=>{n.d(t,{Zo:()=>s,kt:()=>f});var r=n(7294);function o(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function a(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?a(Object(n),!0).forEach((function(t){o(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):a(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function c(e,t){if(null==e)return{};var n,r,o=function(e,t){if(null==e)return{};var n,r,o={},a=Object.keys(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||(o[n]=e[n]);return o}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}var l=r.createContext({}),p=function(e){var t=r.useContext(l),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},s=function(e){var t=p(e.components);return r.createElement(l.Provider,{value:t},e.children)},m="mdxType",u={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},g=r.forwardRef((function(e,t){var n=e.components,o=e.mdxType,a=e.originalType,l=e.parentName,s=c(e,["components","mdxType","originalType","parentName"]),m=p(n),g=o,f=m["".concat(l,".").concat(g)]||m[g]||u[g]||a;return n?r.createElement(f,i(i({ref:t},s),{},{components:n})):r.createElement(f,i({ref:t},s))}));function f(e,t){var n=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var a=n.length,i=new Array(a);i[0]=g;var c={};for(var l in t)hasOwnProperty.call(t,l)&&(c[l]=t[l]);c.originalType=e,c[m]="string"==typeof e?e:o,i[1]=c;for(var p=2;p<a;p++)i[p]=n[p];return r.createElement.apply(null,i)}return r.createElement.apply(null,n)}g.displayName="MDXCreateElement"},1162:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>l,contentTitle:()=>i,default:()=>u,frontMatter:()=>a,metadata:()=>c,toc:()=>p});var r=n(7462),o=(n(7294),n(3905));const a={title:"Big O Notation"},i=void 0,c={unversionedId:"programming/concept/bigo",id:"programming/concept/bigo",title:"Big O Notation",description:"Some common complexities",source:"@site/docs/programming/concept/bigo.md",sourceDirName:"programming/concept",slug:"/programming/concept/bigo",permalink:"/docs/programming/concept/bigo",draft:!1,tags:[],version:"current",frontMatter:{title:"Big O Notation"},sidebar:"programming",previous:{title:"Staking in Blockchain",permalink:"/docs/programming/blockchain/staking"},next:{title:"Process and Thread",permalink:"/docs/programming/concept/processandthread"}},l={},p=[{value:"Some common complexities",id:"some-common-complexities",level:2},{value:"The steps to calculate the complexity of an algorithm are",id:"the-steps-to-calculate-the-complexity-of-an-algorithm-are",level:2}],s={toc:p},m="wrapper";function u(e){let{components:t,...n}=e;return(0,o.kt)(m,(0,r.Z)({},s,n,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("h2",{id:"some-common-complexities"},"Some common complexities"),(0,o.kt)("p",null,"O(n): Linear complexity. Consider the function that calculates the sum of numbers from 1 to n"),(0,o.kt)("p",null,"O(1): Constant complexity. It's also the problem of calculating the sum of numbers from 1 to n."),(0,o.kt)("p",null,"O(n\xb2): Commonly occurs when there are two nested loops."),(0,o.kt)("h2",{id:"the-steps-to-calculate-the-complexity-of-an-algorithm-are"},"The steps to calculate the complexity of an algorithm are"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-c"},"int sum(int n)\n{\n    int s = 0; // ---\x3eO(1)\n    for(int i = 1; i <= n; i++) // n l\u1ea7n\n        s += i; // ---\x3eO(1)\n    return s;   // ---\x3eO(1)\n}\n")),(0,o.kt)("p",null,"Based on the above annotations, in this case T = O(1) + n x O(1) + O(1) = n x c + d (using (3), consider O(1) + O(1) as d, where c, d are constants) = n (as mentioned above, n can be considered as +\u221e, using (4) to remove c, d). = O(n)."),(0,o.kt)("p",null,(0,o.kt)("img",{parentName:"p",src:"https://raw.githubusercontent.com/quankori/quankori.github.io/master/src/images/programming/5.png",alt:"Image"})))}u.isMDXComponent=!0}}]);
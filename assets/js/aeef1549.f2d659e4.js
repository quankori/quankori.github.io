"use strict";(self.webpackChunk=self.webpackChunk||[]).push([[2657],{3905:(e,n,t)=>{t.d(n,{Zo:()=>u,kt:()=>f});var r=t(7294);function o(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function a(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);n&&(r=r.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,r)}return t}function s(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?a(Object(t),!0).forEach((function(n){o(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):a(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function i(e,n){if(null==e)return{};var t,r,o=function(e,n){if(null==e)return{};var t,r,o={},a=Object.keys(e);for(r=0;r<a.length;r++)t=a[r],n.indexOf(t)>=0||(o[t]=e[t]);return o}(e,n);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(r=0;r<a.length;r++)t=a[r],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(o[t]=e[t])}return o}var c=r.createContext({}),l=function(e){var n=r.useContext(c),t=n;return e&&(t="function"==typeof e?e(n):s(s({},n),e)),t},u=function(e){var n=l(e.components);return r.createElement(c.Provider,{value:n},e.children)},p="mdxType",d={inlineCode:"code",wrapper:function(e){var n=e.children;return r.createElement(r.Fragment,{},n)}},m=r.forwardRef((function(e,n){var t=e.components,o=e.mdxType,a=e.originalType,c=e.parentName,u=i(e,["components","mdxType","originalType","parentName"]),p=l(t),m=o,f=p["".concat(c,".").concat(m)]||p[m]||d[m]||a;return t?r.createElement(f,s(s({ref:n},u),{},{components:t})):r.createElement(f,s({ref:n},u))}));function f(e,n){var t=arguments,o=n&&n.mdxType;if("string"==typeof e||o){var a=t.length,s=new Array(a);s[0]=m;var i={};for(var c in n)hasOwnProperty.call(n,c)&&(i[c]=n[c]);i.originalType=e,i[p]="string"==typeof e?e:o,s[1]=i;for(var l=2;l<a;l++)s[l]=t[l];return r.createElement.apply(null,s)}return r.createElement.apply(null,t)}m.displayName="MDXCreateElement"},4722:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>c,contentTitle:()=>s,default:()=>d,frontMatter:()=>a,metadata:()=>i,toc:()=>l});var r=t(7462),o=(t(7294),t(3905));const a={title:"Get price on Uniswap"},s=void 0,i={unversionedId:"examples/nodejs/uniswap",id:"examples/nodejs/uniswap",title:"Get price on Uniswap",description:"",source:"@site/docs/examples/nodejs/uniswap.md",sourceDirName:"examples/nodejs",slug:"/examples/nodejs/uniswap",permalink:"/docs/examples/nodejs/uniswap",draft:!1,tags:[],version:"current",frontMatter:{title:"Get price on Uniswap"},sidebar:"examples",previous:{title:"Sign and verify message",permalink:"/docs/examples/nodejs/signmessage"},next:{title:"Hierarchical Deterministic Wallet",permalink:"/docs/examples/go/hdwallet"}},c={},l=[],u={toc:l},p="wrapper";function d(e){let{components:n,...t}=e;return(0,o.kt)(p,(0,r.Z)({},u,t,{components:n,mdxType:"MDXLayout"}),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-ts"},'async function getHistory(\n  pairAddress: string,\n  routerAddress: string,\n  price: any,\n  fromBlock: number,\n  toBlock: number\n) {\n  let results: any = [];\n  const contract = await getContract(pairAddress, pair_abi);\n  let eventFilter = contract.filters.Swap();\n  let events = await contract.queryFilter(eventFilter, fromBlock, toBlock);\n  for (let index = 0; index < events.length; index++) {\n    const element = events[index];\n    const args: any = element.args;\n    if (args["sender"] === args["to"]) {\n      continue;\n    }\n    const type =\n      Number(utils.formatEther(args["amount0In"])) !== 0 ? Type.SELL : Type.BUY;\n    const mainAmount =\n      type === Type.BUY\n        ? Number(utils.formatEther(args["amount0Out"]))\n        : Number(utils.formatEther(args["amount1Out"]));\n    const subAmount =\n      type === Type.BUY\n        ? Number(utils.formatEther(args["amount1In"]))\n        : Number(utils.formatEther(args["amount0In"]));\n    const maker =\n      type === Type.BUY ? args["to"].toString() : args["sender"].toString();\n    const object = {\n      maker: maker,\n      mainAmount: mainAmount,\n      subAmount: subAmount,\n      type: type,\n      priceBNB: price.BNB * subAmount,\n    };\n    results.push(object);\n  }\n  return results;\n}\n\n(async () => {\n  // Address infomation\n  let mainTokenAddress = "0x9d9f777d0f9c1dc2851606611822ba002665e0bf"; // From token A\n  let subTokenAddress = "0xbb4CdB9CBd36B01bD1cBaEBF2De08d9173bc095c"; // To token B\n  let factoryAddress = "0xcA143Ce32Fe78f1f7019d7d551a6402fC5350c73"; // Address pancakeswap factory, don\'t change it\n  let pairAddress = "";\n  let routerAddress = "0x10ED43C718714eb63d5aA57B78B54704E256024E";\n\n  // find pair\n  const factoryContract = await getContract(factoryAddress, factory_abi);\n  pairAddress = await factoryContract.getPair(\n    mainTokenAddress,\n    subTokenAddress\n  );\n\n  // Get BNB price for token subToken\n  const price = await getPriceBNB(subTokenAddress);\n\n  // Result total\n  let results: any = [];\n\n  // Get current block\n  const provider = await getProvider();\n  const currentBlock = await provider.getBlockNumber();\n  let current = currentBlock;\n  for (let index = current; index > 0; index -= 500) {\n    if (results.length > 1000) break;\n    let toBlock = current;\n    current = index - 500;\n    let fromBlock = current;\n    if (toBlock !== currentBlock) {\n      toBlock--;\n    }\n    // Get history\n    const history = await getHistory(\n      pairAddress,\n      routerAddress,\n      price,\n      fromBlock,\n      toBlock\n    );\n    results.push(...history);\n  }\n  const addressPath = `${process.cwd()}/info.json`;\n  await fs.writeFile(addressPath, JSON.stringify(results, null, 2));\n})();\n')))}d.isMDXComponent=!0}}]);
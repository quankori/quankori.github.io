"use strict";(self.webpackChunk=self.webpackChunk||[]).push([[1700],{3905:(e,t,n)=>{n.d(t,{Zo:()=>m,kt:()=>k});var a=n(7294);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function o(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,a,r=function(e,t){if(null==e)return{};var n,a,r={},i=Object.keys(e);for(a=0;a<i.length;a++)n=i[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(a=0;a<i.length;a++)n=i[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var s=a.createContext({}),p=function(e){var t=a.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):o(o({},t),e)),n},m=function(e){var t=p(e.components);return a.createElement(s.Provider,{value:t},e.children)},c="mdxType",d={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},u=a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,i=e.originalType,s=e.parentName,m=l(e,["components","mdxType","originalType","parentName"]),c=p(n),u=r,k=c["".concat(s,".").concat(u)]||c[u]||d[u]||i;return n?a.createElement(k,o(o({ref:t},m),{},{components:n})):a.createElement(k,o({ref:t},m))}));function k(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var i=n.length,o=new Array(i);o[0]=u;var l={};for(var s in t)hasOwnProperty.call(t,s)&&(l[s]=t[s]);l.originalType=e,l[c]="string"==typeof e?e:r,o[1]=l;for(var p=2;p<i;p++)o[p]=n[p];return a.createElement.apply(null,o)}return a.createElement.apply(null,n)}u.displayName="MDXCreateElement"},1337:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>s,contentTitle:()=>o,default:()=>d,frontMatter:()=>i,metadata:()=>l,toc:()=>p});var a=n(7462),r=(n(7294),n(3905));const i={title:"Domain Driven Design (DDD)"},o=void 0,l={unversionedId:"programming/fundamental/domain-driven-design",id:"programming/fundamental/domain-driven-design",title:"Domain Driven Design (DDD)",description:"Key Concepts of DDD",source:"@site/docs/programming/fundamental/domain-driven-design.md",sourceDirName:"programming/fundamental",slug:"/programming/fundamental/domain-driven-design",permalink:"/docs/programming/fundamental/domain-driven-design",draft:!1,tags:[],version:"current",frontMatter:{title:"Domain Driven Design (DDD)"},sidebar:"programming",previous:{title:"Domain Name System",permalink:"/docs/programming/fundamental/dns"},next:{title:"Object-oriented programming",permalink:"/docs/programming/fundamental/oop"}},s={},p=[{value:"Key Concepts of DDD",id:"key-concepts-of-ddd",level:2},{value:"Layers in DDD",id:"layers-in-ddd",level:2},{value:"Example Scenario: E-commerce System",id:"example-scenario-e-commerce-system",level:2},{value:"Example Code in Go",id:"example-code-in-go",level:2},{value:"Domain Layer",id:"domain-layer",level:3},{value:"Repository Interface",id:"repository-interface",level:3},{value:"Application Layer",id:"application-layer",level:3},{value:"Summary",id:"summary",level:2}],m={toc:p},c="wrapper";function d(e){let{components:t,...n}=e;return(0,r.kt)(c,(0,a.Z)({},m,n,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("h2",{id:"key-concepts-of-ddd"},"Key Concepts of DDD"),(0,r.kt)("ol",null,(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("p",{parentName:"li"},(0,r.kt)("strong",{parentName:"p"},"Domain"),":"),(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},"The area of knowledge or activity that the application is concerned with. It represents the business problem that needs to be solved."))),(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("p",{parentName:"li"},(0,r.kt)("strong",{parentName:"p"},"Ubiquitous Language"),":"),(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},"A common language used by both developers and domain experts. It ensures clear communication and a shared understanding of the domain."))),(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("p",{parentName:"li"},(0,r.kt)("strong",{parentName:"p"},"Entities"),":"),(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},"Objects that have a distinct identity and lifecycle. For example, in an e-commerce system, a ",(0,r.kt)("inlineCode",{parentName:"li"},"Customer")," is an entity."))),(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("p",{parentName:"li"},(0,r.kt)("strong",{parentName:"p"},"Value Objects"),":"),(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},"Objects that are defined by their attributes rather than their identity. They are immutable. For example, ",(0,r.kt)("inlineCode",{parentName:"li"},"Address")," in a customer entity."))),(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("p",{parentName:"li"},(0,r.kt)("strong",{parentName:"p"},"Aggregates"),":"),(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},"A cluster of entities and value objects that are treated as a single unit. The aggregate has a root entity, known as the aggregate root, that controls access to the other entities."))),(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("p",{parentName:"li"},(0,r.kt)("strong",{parentName:"p"},"Repositories"),":"),(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},"Mechanisms for retrieving and storing aggregates. They provide an abstraction over the data storage layer."))),(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("p",{parentName:"li"},(0,r.kt)("strong",{parentName:"p"},"Factories"),":"),(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},"Objects responsible for creating instances of entities and aggregates, ensuring that the creation process is encapsulated and consistent."))),(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("p",{parentName:"li"},(0,r.kt)("strong",{parentName:"p"},"Services"),":"),(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},"Operations or processes that do not naturally belong to entities or value objects. They are stateless and typically perform domain logic.")))),(0,r.kt)("h2",{id:"layers-in-ddd"},"Layers in DDD"),(0,r.kt)("ol",null,(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("p",{parentName:"li"},(0,r.kt)("strong",{parentName:"p"},"Domain Layer"),":"),(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},"Contains the business logic and domain model. This is where entities, value objects, aggregates, and domain services reside."))),(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("p",{parentName:"li"},(0,r.kt)("strong",{parentName:"p"},"Application Layer"),":"),(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},"Orchestrates domain operations. It coordinates tasks by delegating work to the domain layer. This layer does not contain business logic."))),(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("p",{parentName:"li"},(0,r.kt)("strong",{parentName:"p"},"Infrastructure Layer"),":"),(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},"Contains technical implementations such as repositories, external services, and data access layers. It supports the other layers but is not concerned with business logic."))),(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("p",{parentName:"li"},(0,r.kt)("strong",{parentName:"p"},"User Interface Layer"),":"),(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},"Handles user interactions. This could be a web interface, API, or any other form of user interaction.")))),(0,r.kt)("h2",{id:"example-scenario-e-commerce-system"},"Example Scenario: E-commerce System"),(0,r.kt)("ol",null,(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("p",{parentName:"li"},(0,r.kt)("strong",{parentName:"p"},"Domain"),":"),(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},"The e-commerce domain, which includes customers, orders, products, and payments."))),(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("p",{parentName:"li"},(0,r.kt)("strong",{parentName:"p"},"Ubiquitous Language"),":"),(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},"Terms like ",(0,r.kt)("inlineCode",{parentName:"li"},"Customer"),", ",(0,r.kt)("inlineCode",{parentName:"li"},"Order"),", ",(0,r.kt)("inlineCode",{parentName:"li"},"Product"),", and ",(0,r.kt)("inlineCode",{parentName:"li"},"Payment")," are used consistently across the team."))),(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("p",{parentName:"li"},(0,r.kt)("strong",{parentName:"p"},"Entities"),":"),(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"Customer"),", ",(0,r.kt)("inlineCode",{parentName:"li"},"Order"),", and ",(0,r.kt)("inlineCode",{parentName:"li"},"Product")," are entities with unique identities."))),(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("p",{parentName:"li"},(0,r.kt)("strong",{parentName:"p"},"Value Objects"),":"),(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"Address"),", ",(0,r.kt)("inlineCode",{parentName:"li"},"Money"),", and ",(0,r.kt)("inlineCode",{parentName:"li"},"ProductDetails")," are value objects."))),(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("p",{parentName:"li"},(0,r.kt)("strong",{parentName:"p"},"Aggregates"),":"),(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"Order")," aggregate includes the ",(0,r.kt)("inlineCode",{parentName:"li"},"Order")," entity and ",(0,r.kt)("inlineCode",{parentName:"li"},"OrderItem")," value objects."))),(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("p",{parentName:"li"},(0,r.kt)("strong",{parentName:"p"},"Repositories"),":"),(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"OrderRepository")," for accessing and storing orders."))),(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("p",{parentName:"li"},(0,r.kt)("strong",{parentName:"p"},"Factories"),":"),(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"OrderFactory")," for creating new orders."))),(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("p",{parentName:"li"},(0,r.kt)("strong",{parentName:"p"},"Services"),":"),(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"PaymentService")," for processing payments.")))),(0,r.kt)("h2",{id:"example-code-in-go"},"Example Code in Go"),(0,r.kt)("h3",{id:"domain-layer"},"Domain Layer"),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Entity: Customer")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-go"},"package domain\n\ntype Customer struct {\n    ID   string\n    Name string\n    Address Address\n}\n")),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Value Object: Address")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-go"},"package domain\n\ntype Address struct {\n    Street  string\n    City    string\n    ZipCode string\n}\n")),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Aggregate: Order")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-go"},"package domain\n\ntype Order struct {\n    ID     string\n    CustomerID string\n    Items  []OrderItem\n    Total  Money\n}\n\ntype OrderItem struct {\n    ProductID string\n    Quantity  int\n    Price     Money\n}\n\ntype Money struct {\n    Amount   float64\n    Currency string\n}\n")),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Service: PaymentService")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-go"},"package domain\n\ntype PaymentService interface {\n    ProcessPayment(order Order) error\n}\n")),(0,r.kt)("h3",{id:"repository-interface"},"Repository Interface"),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"OrderRepository")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-go"},"package domain\n\ntype OrderRepository interface {\n    Save(order Order) error\n    FindByID(id string) (*Order, error)\n}\n")),(0,r.kt)("h3",{id:"application-layer"},"Application Layer"),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Order Application Service")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-go"},'package application\n\nimport "example.com/domain"\n\ntype OrderService struct {\n    orderRepo domain.OrderRepository\n    paymentService domain.PaymentService\n}\n\nfunc (s *OrderService) PlaceOrder(customerID string, items []domain.OrderItem) (*domain.Order, error) {\n    order := domain.Order{\n        ID:         generateOrderID(),\n        CustomerID: customerID,\n        Items:      items,\n        Total:      calculateTotal(items),\n    }\n    if err := s.orderRepo.Save(order); err != nil {\n        return nil, err\n    }\n    if err := s.paymentService.ProcessPayment(order); err != nil {\n        return nil, err\n    }\n    return &order, nil\n}\n\nfunc generateOrderID() string {\n    // Implementation to generate a unique order ID\n}\n\nfunc calculateTotal(items []domain.OrderItem) domain.Money {\n    // Implementation to calculate the total amount\n}\n')),(0,r.kt)("h2",{id:"summary"},"Summary"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"Domain-Driven Design (DDD)"),": A design approach that focuses on modeling the core business domain and its logic."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"Key Concepts"),":",(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"Domain"),": The area of knowledge or activity the application addresses."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"Ubiquitous Language"),": A shared language between developers and domain experts."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"Entities"),": Objects with unique identities."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"Value Objects"),": Immutable objects defined by their attributes."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"Aggregates"),": Clusters of entities and value objects treated as a single unit."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"Repositories"),": Abstractions for data access."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"Factories"),": Responsible for creating instances of entities and aggregates."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"Services"),": Stateless operations performing domain logic."))),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"Layers"),":",(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"Domain Layer"),": Business logic and domain model."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"Application Layer"),": Orchestrates domain operations."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"Infrastructure Layer"),": Technical implementations supporting other layers."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"User Interface Layer"),": Handles user interactions.")))))}d.isMDXComponent=!0}}]);
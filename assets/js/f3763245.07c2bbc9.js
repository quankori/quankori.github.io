"use strict";(self.webpackChunk=self.webpackChunk||[]).push([[403],{3905:(n,t,h)=>{h.d(t,{Zo:()=>l,kt:()=>s});var c=h(7294);function e(n,t,h){return t in n?Object.defineProperty(n,t,{value:h,enumerable:!0,configurable:!0,writable:!0}):n[t]=h,n}function i(n,t){var h=Object.keys(n);if(Object.getOwnPropertySymbols){var c=Object.getOwnPropertySymbols(n);t&&(c=c.filter((function(t){return Object.getOwnPropertyDescriptor(n,t).enumerable}))),h.push.apply(h,c)}return h}function r(n){for(var t=1;t<arguments.length;t++){var h=null!=arguments[t]?arguments[t]:{};t%2?i(Object(h),!0).forEach((function(t){e(n,t,h[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(n,Object.getOwnPropertyDescriptors(h)):i(Object(h)).forEach((function(t){Object.defineProperty(n,t,Object.getOwnPropertyDescriptor(h,t))}))}return n}function o(n,t){if(null==n)return{};var h,c,e=function(n,t){if(null==n)return{};var h,c,e={},i=Object.keys(n);for(c=0;c<i.length;c++)h=i[c],t.indexOf(h)>=0||(e[h]=n[h]);return e}(n,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(n);for(c=0;c<i.length;c++)h=i[c],t.indexOf(h)>=0||Object.prototype.propertyIsEnumerable.call(n,h)&&(e[h]=n[h])}return e}var a=c.createContext({}),g=function(n){var t=c.useContext(a),h=t;return n&&(h="function"==typeof n?n(t):r(r({},t),n)),h},l=function(n){var t=g(n.components);return c.createElement(a.Provider,{value:t},n.children)},p="mdxType",u={inlineCode:"code",wrapper:function(n){var t=n.children;return c.createElement(c.Fragment,{},t)}},m=c.forwardRef((function(n,t){var h=n.components,e=n.mdxType,i=n.originalType,a=n.parentName,l=o(n,["components","mdxType","originalType","parentName"]),p=g(h),m=e,s=p["".concat(a,".").concat(m)]||p[m]||u[m]||i;return h?c.createElement(s,r(r({ref:t},l),{},{components:h})):c.createElement(s,r({ref:t},l))}));function s(n,t){var h=arguments,e=t&&t.mdxType;if("string"==typeof n||e){var i=h.length,r=new Array(i);r[0]=m;var o={};for(var a in t)hasOwnProperty.call(t,a)&&(o[a]=t[a]);o.originalType=n,o[p]="string"==typeof n?n:e,r[1]=o;for(var g=2;g<i;g++)r[g]=h[g];return c.createElement.apply(null,r)}return c.createElement.apply(null,h)}m.displayName="MDXCreateElement"},2915:(n,t,h)=>{h.r(t),h.d(t,{assets:()=>a,contentTitle:()=>r,default:()=>u,frontMatter:()=>i,metadata:()=>o,toc:()=>g});var c=h(7462),e=(h(7294),h(3905));const i={title:"Computer Science"},r=void 0,o={unversionedId:"blog/programming/computer-science",id:"blog/programming/computer-science",title:"Computer Science",description:"Core Concepts: N\u1ec1n t\u1ea3ng Ho\u1ea1t \u0111\u1ed9ng",source:"@site/docs/blog/programming/computer-science.md",sourceDirName:"blog/programming",slug:"/blog/programming/computer-science",permalink:"/blog/programming/computer-science",draft:!1,tags:[],version:"current",frontMatter:{title:"Computer Science"},sidebar:"blog",previous:{title:"Redis",permalink:"/blog/programming/redis"},next:{title:"Programming Design Pattern",permalink:"/blog/programming/programming-design-pattern"}},a={},g=[{value:"Core Concepts: N\u1ec1n t\u1ea3ng Ho\u1ea1t \u0111\u1ed9ng",id:"core-concepts-n\u1ec1n-t\u1ea3ng-ho\u1ea1t-\u0111\u1ed9ng",level:2},{value:"Stack v\xe0 Heap: Qu\u1ea3n l\xfd B\u1ed9 nh\u1edb C\u1ea5p Cao",id:"stack-v\xe0-heap-qu\u1ea3n-l\xfd-b\u1ed9-nh\u1edb-c\u1ea5p-cao",level:3},{value:"Stack",id:"stack",level:4},{value:"Heap",id:"heap",level:4},{value:"CPU v\xe0 Process: Th\u1ef1c thi v\xe0 C\xf4 l\u1eadp",id:"cpu-v\xe0-process-th\u1ef1c-thi-v\xe0-c\xf4-l\u1eadp",level:3},{value:"\u1ea2nh h\u01b0\u1edfng \u0111\u1ebfn I/O Bound vs. CPU Bound v\xe0 Scaling",id:"\u1ea3nh-h\u01b0\u1edfng-\u0111\u1ebfn-io-bound-vs-cpu-bound-v\xe0-scaling",level:3},{value:"Memory Management (Qu\u1ea3n l\xfd B\u1ed9 nh\u1edb) trong Khoa h\u1ecdc M\xe1y t\xednh",id:"memory-management-qu\u1ea3n-l\xfd-b\u1ed9-nh\u1edb-trong-khoa-h\u1ecdc-m\xe1y-t\xednh",level:2},{value:"Process Management (Qu\u1ea3n l\xfd Ti\u1ebfn tr\xecnh) trong Khoa h\u1ecdc M\xe1y t\xednh",id:"process-management-qu\u1ea3n-l\xfd-ti\u1ebfn-tr\xecnh-trong-khoa-h\u1ecdc-m\xe1y-t\xednh",level:2},{value:"CPU Architecture (Ki\u1ebfn tr\xfac CPU) trong Khoa h\u1ecdc M\xe1y t\xednh",id:"cpu-architecture-ki\u1ebfn-tr\xfac-cpu-trong-khoa-h\u1ecdc-m\xe1y-t\xednh",level:2},{value:"Performance Optimization (T\u1ed1i \u01b0u Hi\u1ec7u n\u0103ng) trong Khoa h\u1ecdc M\xe1y t\xednh",id:"performance-optimization-t\u1ed1i-\u01b0u-hi\u1ec7u-n\u0103ng-trong-khoa-h\u1ecdc-m\xe1y-t\xednh",level:2}],l={toc:g},p="wrapper";function u(n){let{components:t,...h}=n;return(0,e.kt)(p,(0,c.Z)({},l,h,{components:t,mdxType:"MDXLayout"}),(0,e.kt)("h2",{id:"core-concepts-n\u1ec1n-t\u1ea3ng-ho\u1ea1t-\u0111\u1ed9ng"},"Core Concepts: N\u1ec1n t\u1ea3ng Ho\u1ea1t \u0111\u1ed9ng"),(0,e.kt)("h3",{id:"stack-v\xe0-heap-qu\u1ea3n-l\xfd-b\u1ed9-nh\u1edb-c\u1ea5p-cao"},"Stack v\xe0 Heap: Qu\u1ea3n l\xfd B\u1ed9 nh\u1edb C\u1ea5p Cao"),(0,e.kt)("p",null,"Trong h\u1ea7u h\u1ebft c\xe1c ng\xf4n ng\u1eef l\u1eadp tr\xecnh, b\u1ed9 nh\u1edb c\u1ee7a m\u1ed9t ch\u01b0\u01a1ng tr\xecnh th\u01b0\u1eddng \u0111\u01b0\u1ee3c chia th\xe0nh hai khu v\u1ef1c ch\xednh: Stack v\xe0 Heap."),(0,e.kt)("h4",{id:"stack"},"Stack"),(0,e.kt)("p",null,"L\xe0 m\u1ed9t v\xf9ng nh\u1edb c\xf3 c\u1ea5u tr\xfac LIFO (Last-In, First-Out). N\xf3 \u0111\u01b0\u1ee3c s\u1eed d\u1ee5ng \u0111\u1ec3 l\u01b0u tr\u1eef c\xe1c bi\u1ebfn c\u1ee5c b\u1ed9 (local variables), tham s\u1ed1 h\xe0m (function parameters), v\xe0 \u0111\u1ecba ch\u1ec9 tr\u1ea3 v\u1ec1 (return addresses) khi m\u1ed9t h\xe0m \u0111\u01b0\u1ee3c g\u1ecdi."),(0,e.kt)("p",null,'Vi\u1ec7c c\u1ea5p ph\xe1t v\xe0 gi\u1ea3i ph\xf3ng b\u1ed9 nh\u1edb tr\xean Stack di\u1ec5n ra r\u1ea5t nhanh ch\xf3ng v\xe0 \u0111\u01b0\u1ee3c qu\u1ea3n l\xfd t\u1ef1 \u0111\u1ed9ng b\u1edfi tr\xecnh bi\xean d\u1ecbch/runtime. Khi m\u1ed9t h\xe0m \u0111\u01b0\u1ee3c g\u1ecdi, m\u1ed9t "stack frame" m\u1edbi \u0111\u01b0\u1ee3c \u0111\u1ea9y v\xe0o \u0111\u1ec9nh Stack. Khi h\xe0m k\u1ebft th\xfac, stack frame \u0111\xf3 \u0111\u01b0\u1ee3c t\u1ef1 \u0111\u1ed9ng g\u1ee1 b\u1ecf.'),(0,e.kt)("p",null,'Stack th\u01b0\u1eddng c\xf3 k\xedch th\u01b0\u1edbc c\u1ed1 \u0111\u1ecbnh v\xe0 t\u01b0\u01a1ng \u0111\u1ed1i nh\u1ecf. Vi\u1ec7c c\u1ea5p ph\xe1t qu\xe1 nhi\u1ec1u b\u1ed9 nh\u1edb tr\xean Stack (v\xed d\u1ee5: \u0111\u1ec7 quy qu\xe1 s\xe2u) c\xf3 th\u1ec3 d\u1eabn \u0111\u1ebfn l\u1ed7i "stack overflow".'),(0,e.kt)("p",null,(0,e.kt)("strong",{parentName:"p"},"Trong Go"),": M\u1ed7i goroutine trong Go c\xf3 m\u1ed9t Stack ri\xeang, ban \u0111\u1ea7u c\xf3 k\xedch th\u01b0\u1edbc nh\u1ecf (v\xe0i KB) v\xe0 c\xf3 th\u1ec3 t\u1ef1 \u0111\u1ed9ng t\u0103ng/gi\u1ea3m k\xedch th\u01b0\u1edbc khi c\u1ea7n. \u0110i\u1ec1u n\xe0y cho ph\xe9p Go t\u1ea1o ra h\xe0ng tri\u1ec7u goroutine m\u1ed9t c\xe1ch hi\u1ec7u qu\u1ea3."),(0,e.kt)("p",null,(0,e.kt)("strong",{parentName:"p"},"Trong Node.js (V8)"),": Node.js ch\u1ea1y tr\xean engine V8 c\u1ee7a Google Chrome. M\u1ed7i l\u1eddi g\u1ecdi h\xe0m trong JavaScript c\u0169ng t\u1ea1o ra m\u1ed9t stack frame tr\xean Call Stack c\u1ee7a V8. Gi\u1ed1ng nh\u01b0 c\xe1c m\xf4i tr\u01b0\u1eddng kh\xe1c, n\xf3 c\xf3 k\xedch th\u01b0\u1edbc gi\u1edbi h\u1ea1n."),(0,e.kt)("h4",{id:"heap"},"Heap"),(0,e.kt)("p",null,"L\xe0 m\u1ed9t v\xf9ng nh\u1edb l\u1edbn h\u01a1n v\xe0 linh ho\u1ea1t h\u01a1n Stack, \u0111\u01b0\u1ee3c s\u1eed d\u1ee5ng \u0111\u1ec3 l\u01b0u tr\u1eef c\xe1c \u0111\u1ed1i t\u01b0\u1ee3ng c\xf3 v\xf2ng \u0111\u1eddi kh\xf4ng x\xe1c \u0111\u1ecbnh t\u1ea1i th\u1eddi \u0111i\u1ec3m bi\xean d\u1ecbch, ho\u1eb7c c\xe1c \u0111\u1ed1i t\u01b0\u1ee3ng c\xf3 k\xedch th\u01b0\u1edbc l\u1edbn. Vi\u1ec7c c\u1ea5p ph\xe1t b\u1ed9 nh\u1edb tr\xean Heap c\u1ea7n \u0111\u01b0\u1ee3c qu\u1ea3n l\xfd m\u1ed9t c\xe1ch t\u01b0\u1eddng minh ho\u1eb7c th\xf4ng qua c\u01a1 ch\u1ebf thu gom r\xe1c (Garbage Collection - GC)."),(0,e.kt)("p",null,"C\u1ea5p ph\xe1t v\xe0 gi\u1ea3i ph\xf3ng b\u1ed9 nh\u1edb tr\xean Heap ch\u1eadm h\u01a1n so v\u1edbi Stack. L\u1eadp tr\xecnh vi\xean (ho\u1eb7c runtime) ch\u1ecbu tr\xe1ch nhi\u1ec7m qu\u1ea3n l\xfd b\u1ed9 nh\u1edb n\xe0y. Trong c\xe1c ng\xf4n ng\u1eef nh\u01b0 C/C++, l\u1eadp tr\xecnh vi\xean ph\u1ea3i t\u1ef1 malloc/free ho\u1eb7c new/delete. Trong Go v\xe0 JavaScript (Node.js), c\u01a1 ch\u1ebf GC t\u1ef1 \u0111\u1ed9ng t\xecm v\xe0 gi\u1ea3i ph\xf3ng c\xe1c v\xf9ng nh\u1edb kh\xf4ng c\xf2n \u0111\u01b0\u1ee3c tham chi\u1ebfu."),(0,e.kt)("p",null,"Heap th\u01b0\u1eddng l\u1edbn h\u01a1n Stack r\u1ea5t nhi\u1ec1u v\xe0 k\xedch th\u01b0\u1edbc c\xf3 th\u1ec3 thay \u0111\u1ed5i \u0111\u1ed9ng trong qu\xe1 tr\xecnh ch\u1ea1y ch\u01b0\u01a1ng tr\xecnh."),(0,e.kt)("p",null,(0,e.kt)("strong",{parentName:"p"},"Trong Go"),': C\xe1c \u0111\u1ed1i t\u01b0\u1ee3ng \u0111\u01b0\u1ee3c c\u1ea5p ph\xe1t \u0111\u1ed9ng (v\xed d\u1ee5: s\u1eed d\u1ee5ng new() ho\u1eb7c make(), ho\u1eb7c khi bi\u1ebfn "escape" kh\u1ecfi scope c\u1ee7a h\xe0m) s\u1ebd \u0111\u01b0\u1ee3c l\u01b0u tr\u1eef tr\xean Heap. Go s\u1eed d\u1ee5ng m\u1ed9t tr\xecnh thu gom r\xe1c \u0111\u1ed3ng th\u1eddi (concurrent garbage collector) hi\u1ec7u qu\u1ea3.'),(0,e.kt)("p",null,(0,e.kt)("strong",{parentName:"p"},"Trong Node.js (V8)"),": C\xe1c \u0111\u1ed1i t\u01b0\u1ee3ng (objects), m\u1ea3ng (arrays), closures \u0111\u01b0\u1ee3c t\u1ea1o ra trong JavaScript th\u01b0\u1eddng \u0111\u01b0\u1ee3c c\u1ea5p ph\xe1t tr\xean Heap c\u1ee7a V8. V8 c\u0169ng c\xf3 m\u1ed9t c\u01a1 ch\u1ebf GC ph\u1ee9c t\u1ea1p (th\u01b0\u1eddng l\xe0 generational) \u0111\u1ec3 qu\u1ea3n l\xfd b\u1ed9 nh\u1edb Heap."),(0,e.kt)("h3",{id:"cpu-v\xe0-process-th\u1ef1c-thi-v\xe0-c\xf4-l\u1eadp"},"CPU v\xe0 Process: Th\u1ef1c thi v\xe0 C\xf4 l\u1eadp"),(0,e.kt)("p",null,(0,e.kt)("strong",{parentName:"p"},"CPU (Central Processing Unit)"),": B\u1ed9 n\xe3o c\u1ee7a m\xe1y t\xednh, ch\u1ecbu tr\xe1ch nhi\u1ec7m th\u1ef1c thi c\xe1c ch\u1ec9 th\u1ecb (instructions) c\u1ee7a ch\u01b0\u01a1ng tr\xecnh. CPU c\xf3 m\u1ed9t ho\u1eb7c nhi\u1ec1u l\xf5i (cores), m\u1ed7i l\xf5i c\xf3 th\u1ec3 th\u1ef1c thi m\u1ed9t lu\u1ed3ng (thread) ch\u1ec9 th\u1ecb t\u1ea1i m\u1ed9t th\u1eddi \u0111i\u1ec3m (v\u1edbi c\xf4ng ngh\u1ec7 nh\u01b0 Hyper-Threading, m\u1ed9t l\xf5i v\u1eadt l\xfd c\xf3 th\u1ec3 x\u1eed l\xfd nhi\u1ec1u lu\u1ed3ng logic)."),(0,e.kt)("p",null,(0,e.kt)("strong",{parentName:"p"},"Process (Ti\u1ebfn tr\xecnh)"),": L\xe0 m\u1ed9t th\u1ef1c th\u1ec3 (instance) c\u1ee7a m\u1ed9t ch\u01b0\u01a1ng tr\xecnh \u0111ang ch\u1ea1y. M\u1ed7i process c\xf3 kh\xf4ng gian \u0111\u1ecba ch\u1ec9 b\u1ed9 nh\u1edb \u1ea3o (virtual address space) ri\xeang bi\u1ec7t, bao g\u1ed3m code, d\u1eef li\u1ec7u (global variables), Heap, v\xe0 \xedt nh\u1ea5t m\u1ed9t Thread th\u1ef1c thi. H\u1ec7 \u0111i\u1ec1u h\xe0nh ch\u1ecbu tr\xe1ch nhi\u1ec7m qu\u1ea3n l\xfd c\xe1c process, c\u1ea5p ph\xe1t t\xe0i nguy\xean (CPU time, memory) v\xe0 \u0111\u1ea3m b\u1ea3o s\u1ef1 c\xf4 l\u1eadp gi\u1eefa ch\xfang."),(0,e.kt)("p",null,(0,e.kt)("strong",{parentName:"p"},"Thread (Lu\u1ed3ng)"),": L\xe0 \u0111\u01a1n v\u1ecb th\u1ef1c thi c\u01a1 b\u1ea3n nh\u1ea5t trong m\u1ed9t process. M\u1ed9t process c\xf3 th\u1ec3 c\xf3 m\u1ed9t ho\u1eb7c nhi\u1ec1u thread, t\u1ea5t c\u1ea3 c\xf9ng chia s\u1ebb kh\xf4ng gian \u0111\u1ecba ch\u1ec9 b\u1ed9 nh\u1edb c\u1ee7a process \u0111\xf3 (code, data, heap) nh\u01b0ng m\u1ed7i thread c\xf3 Stack v\xe0 b\u1ed9 \u0111\u1ebfm ch\u01b0\u01a1ng tr\xecnh (program counter) ri\xeang. Vi\u1ec7c chuy\u1ec3n \u0111\u1ed5i ng\u1eef c\u1ea3nh (context switching) gi\u1eefa c\xe1c thread trong c\xf9ng m\u1ed9t process th\u01b0\u1eddng nhanh h\u01a1n gi\u1eefa c\xe1c process kh\xe1c nhau."),(0,e.kt)("p",null,(0,e.kt)("strong",{parentName:"p"},"Trong Go (Goroutines v\xe0 M:N Scheduler)"),":"),(0,e.kt)("p",null,"Go s\u1eed d\u1ee5ng kh\xe1i ni\u1ec7m Goroutine thay v\xec tr\u1ef1c ti\u1ebfp l\xe0m vi\u1ec7c v\u1edbi OS threads. Goroutine l\xe0 c\xe1c h\xe0m ho\u1eb7c ph\u01b0\u01a1ng th\u1ee9c c\xf3 th\u1ec3 ch\u1ea1y \u0111\u1ed3ng th\u1eddi v\u1edbi c\xe1c h\xe0m/ph\u01b0\u01a1ng th\u1ee9c kh\xe1c. Ch\xfang r\u1ea5t nh\u1eb9 (lightweight), ch\u1ec9 t\u1ed1n v\xe0i KB b\u1ed9 nh\u1edb Stack ban \u0111\u1ea7u."),(0,e.kt)("p",null,"Go runtime tri\u1ec3n khai m\u1ed9t b\u1ed9 l\u1eadp l\u1ecbch (scheduler) M:N, t\u1ee9c l\xe0 n\xf3 \xe1nh x\u1ea1 M goroutine l\xean N OS threads. Runtime t\u1ef1 \u0111\u1ed9ng qu\u1ea3n l\xfd vi\u1ec7c t\u1ea1o, l\u1eadp l\u1ecbch v\xe0 h\u1ee7y c\xe1c OS threads c\u1ea7n thi\u1ebft \u0111\u1ec3 ch\u1ea1y c\xe1c goroutine. \u0110i\u1ec1u n\xe0y cho ph\xe9p Go x\u1eed l\xfd h\xe0ng ng\xe0n, th\u1eadm ch\xed h\xe0ng tri\u1ec7u goroutine \u0111\u1ed3ng th\u1eddi m\u1ed9t c\xe1ch hi\u1ec7u qu\u1ea3 m\xe0 kh\xf4ng t\u1ea1o ra qu\xe1 nhi\u1ec1u OS threads. Khi m\u1ed9t goroutine th\u1ef1c hi\u1ec7n m\u1ed9t l\u1eddi g\u1ecdi h\u1ec7 th\u1ed1ng ch\u1eb7n (blocking system call) nh\u01b0 I/O, Go runtime c\xf3 th\u1ec3 chuy\u1ec3n OS thread \u0111\xf3 sang ch\u1ea1y m\u1ed9t goroutine kh\xe1c, tr\xe1nh l\xe3ng ph\xed t\xe0i nguy\xean CPU."),(0,e.kt)("p",null,(0,e.kt)("strong",{parentName:"p"},"Trong Node.js (Event Loop v\xe0 Worker Threads)"),":"),(0,e.kt)("p",null,"Node.js ho\u1ea1t \u0111\u1ed9ng d\u1ef1a tr\xean m\xf4 h\xecnh Event Loop v\xe0 ki\u1ebfn tr\xfac single-threaded (cho m\xe3 JavaScript ch\xednh). H\u1ea7u h\u1ebft c\xe1c t\xe1c v\u1ee5 I/O (m\u1ea1ng, file system) \u0111\u01b0\u1ee3c th\u1ef1c hi\u1ec7n m\u1ed9t c\xe1ch b\u1ea5t \u0111\u1ed3ng b\u1ed9 (asynchronous) v\xe0 kh\xf4ng ch\u1eb7n (non-blocking). Khi m\u1ed9t t\xe1c v\u1ee5 I/O b\u1eaft \u0111\u1ea7u, Node.js \u0111\u0103ng k\xfd m\u1ed9t callback v\xe0 giao vi\u1ec7c \u0111\xf3 cho h\u1ec7 \u0111i\u1ec1u h\xe0nh ho\u1eb7c m\u1ed9t thread pool (libuv). Event Loop s\u1ebd ti\u1ebfp t\u1ee5c x\u1eed l\xfd c\xe1c s\u1ef1 ki\u1ec7n kh\xe1c. Khi t\xe1c v\u1ee5 I/O ho\xe0n th\xe0nh, callback t\u01b0\u01a1ng \u1ee9ng s\u1ebd \u0111\u01b0\u1ee3c \u0111\u01b0a v\xe0o h\xe0ng \u0111\u1ee3i (callback queue) v\xe0 Event Loop s\u1ebd th\u1ef1c thi n\xf3 khi Call Stack tr\u1ed1ng."),(0,e.kt)("p",null,'M\xf4 h\xecnh n\xe0y r\u1ea5t hi\u1ec7u qu\u1ea3 cho c\xe1c \u1ee9ng d\u1ee5ng I/O-bound. Tuy nhi\xean, n\u1ebfu c\xf3 m\u1ed9t t\xe1c v\u1ee5 CPU-bound (t\xednh to\xe1n n\u1eb7ng) ch\u1ea1y tr\xean lu\u1ed3ng ch\xednh, n\xf3 s\u1ebd ch\u1eb7n Event Loop, khi\u1ebfn to\xe0n b\u1ed9 \u1ee9ng d\u1ee5ng b\u1ecb "\u0111\u01a1".'),(0,e.kt)("p",null,"\u0110\u1ec3 x\u1eed l\xfd c\xe1c t\xe1c v\u1ee5 CPU-bound, Node.js cung c\u1ea5p module worker_threads, cho ph\xe9p t\u1ea1o ra c\xe1c lu\u1ed3ng ri\xeang bi\u1ec7t \u0111\u1ec3 ch\u1ea1y m\xe3 JavaScript song song, gi\u1ea3i ph\xf3ng Event Loop ch\xednh."),(0,e.kt)("h3",{id:"\u1ea3nh-h\u01b0\u1edfng-\u0111\u1ebfn-io-bound-vs-cpu-bound-v\xe0-scaling"},"\u1ea2nh h\u01b0\u1edfng \u0111\u1ebfn I/O Bound vs. CPU Bound v\xe0 Scaling"),(0,e.kt)("p",null,(0,e.kt)("strong",{parentName:"p"},"I/O Bound"),": C\xe1c t\xe1c v\u1ee5 d\xe0nh ph\u1ea7n l\u1edbn th\u1eddi gian ch\u1edd \u0111\u1ee3i c\xe1c ho\u1ea1t \u0111\u1ed9ng I/O ho\xe0n th\xe0nh (v\xed d\u1ee5: \u0111\u1ecdc/ghi file, truy v\u1ea5n database, g\u1ecdi API m\u1ea1ng)."),(0,e.kt)("ul",null,(0,e.kt)("li",{parentName:"ul"},(0,e.kt)("p",{parentName:"li"},"Go: R\u1ea5t m\u1ea1nh m\u1ebd trong x\u1eed l\xfd I/O bound nh\u1edd goroutines v\xe0 M:N scheduler. H\xe0ng ng\xe0n k\u1ebft n\u1ed1i m\u1ea1ng c\xf3 th\u1ec3 \u0111\u01b0\u1ee3c x\u1eed l\xfd \u0111\u1ed3ng th\u1eddi m\u1ed9t c\xe1ch hi\u1ec7u qu\u1ea3.")),(0,e.kt)("li",{parentName:"ul"},(0,e.kt)("p",{parentName:"li"},"Node.js: C\u0169ng r\u1ea5t hi\u1ec7u qu\u1ea3 nh\u1edd m\xf4 h\xecnh non-blocking I/O v\xe0 Event Loop. Th\xedch h\u1ee3p cho c\xe1c web server, API gateway x\u1eed l\xfd nhi\u1ec1u request \u0111\u1ed3ng th\u1eddi."))),(0,e.kt)("p",null,(0,e.kt)("strong",{parentName:"p"},"CPU Bound"),": C\xe1c t\xe1c v\u1ee5 d\xe0nh ph\u1ea7n l\u1edbn th\u1eddi gian th\u1ef1c hi\u1ec7n t\xednh to\xe1n tr\xean CPU (v\xed d\u1ee5: x\u1eed l\xfd \u1ea3nh/video, m\xe3 h\xf3a, thu\u1eadt to\xe1n ph\u1ee9c t\u1ea1p)."),(0,e.kt)("ul",null,(0,e.kt)("li",{parentName:"ul"},(0,e.kt)("p",{parentName:"li"},"Go: C\xf3 th\u1ec3 t\u1eadn d\u1ee5ng nhi\u1ec1u l\xf5i CPU b\u1eb1ng c\xe1ch ch\u1ea1y nhi\u1ec1u goroutine t\xednh to\xe1n song song tr\xean c\xe1c OS thread kh\xe1c nhau (do M:N scheduler qu\u1ea3n l\xfd).")),(0,e.kt)("li",{parentName:"ul"},(0,e.kt)("p",{parentName:"li"},"Node.js: Lu\u1ed3ng ch\xednh d\u1ec5 b\u1ecb ch\u1eb7n b\u1edfi t\xe1c v\u1ee5 CPU-bound. C\u1ea7n s\u1eed d\u1ee5ng worker_threads \u0111\u1ec3 th\u1ef1c hi\u1ec7n c\xe1c t\xednh to\xe1n n\u1eb7ng song song m\xe0 kh\xf4ng \u1ea3nh h\u01b0\u1edfng \u0111\u1ebfn Event Loop ch\xednh."))),(0,e.kt)("p",null,(0,e.kt)("strong",{parentName:"p"},"Scaling (M\u1edf r\u1ed9ng)"),":"),(0,e.kt)("ul",null,(0,e.kt)("li",{parentName:"ul"},(0,e.kt)("p",{parentName:"li"},"Vertical Scaling (Scale Up - M\u1edf r\u1ed9ng d\u1ecdc): T\u0103ng c\u01b0\u1eddng t\xe0i nguy\xean cho m\u1ed9t m\xe1y ch\u1ee7 duy nh\u1ea5t (th\xeam CPU, RAM). C\u1ea3 Go v\xe0 Node.js \u0111\u1ec1u h\u01b0\u1edfng l\u1ee3i t\u1eeb vi\u1ec7c n\xe0y, nh\u01b0ng c\xf3 gi\u1edbi h\u1ea1n v\u1eadt l\xfd v\xe0 chi ph\xed.")),(0,e.kt)("li",{parentName:"ul"},(0,e.kt)("p",{parentName:"li"},"Horizontal Scaling (Scale Out - M\u1edf r\u1ed9ng ngang): Th\xeam nhi\u1ec1u m\xe1y ch\u1ee7 \u0111\u1ec3 ch\u1ea1y c\xe1c b\u1ea3n sao (instances) c\u1ee7a \u1ee9ng d\u1ee5ng."),(0,e.kt)("ul",{parentName:"li"},(0,e.kt)("li",{parentName:"ul"},(0,e.kt)("p",{parentName:"li"},"Go: Ki\u1ebfn tr\xfac goroutine nh\u1eb9 v\xe0 hi\u1ec7u qu\u1ea3 gi\xfap vi\u1ec7c ch\u1ea1y nhi\u1ec1u instance Go tr\u1edf n\xean d\u1ec5 d\xe0ng. C\xe1c \u1ee9ng d\u1ee5ng Go th\u01b0\u1eddng \u0111\u01b0\u1ee3c thi\u1ebft k\u1ebf stateless, thu\u1eadn l\u1ee3i cho vi\u1ec7c scale ngang sau m\u1ed9t b\u1ed9 c\xe2n b\u1eb1ng t\u1ea3i (load balancer).")),(0,e.kt)("li",{parentName:"ul"},(0,e.kt)("p",{parentName:"li"},"Node.js: C\u0169ng c\xf3 th\u1ec3 scale ngang t\u1ed1t, \u0111\u1eb7c bi\u1ec7t l\xe0 c\xe1c \u1ee9ng d\u1ee5ng stateless. Tuy nhi\xean, n\u1ebfu \u1ee9ng d\u1ee5ng c\xf3 state (tr\u1ea1ng th\xe1i) c\u1ea7n chia s\u1ebb gi\u1eefa c\xe1c instance (v\xed d\u1ee5: session ng\u01b0\u1eddi d\xf9ng, WebSocket connections), c\u1ea7n c\xf3 gi\u1ea3i ph\xe1p qu\u1ea3n l\xfd state t\u1eadp trung (nh\u01b0 Redis, Memcached) ho\u1eb7c c\u01a1 ch\u1ebf sticky session tr\xean load balancer. Vi\u1ec7c qu\u1ea3n l\xfd nhi\u1ec1u process Node.js tr\xean c\xf9ng m\u1ed9t m\xe1y (s\u1eed d\u1ee5ng c\xe1c c\xf4ng c\u1ee5 nh\u01b0 PM2) c\u0169ng l\xe0 m\u1ed9t h\xecnh th\u1ee9c scale (t\u1eadn d\u1ee5ng nhi\u1ec1u core)."))))),(0,e.kt)("h2",{id:"memory-management-qu\u1ea3n-l\xfd-b\u1ed9-nh\u1edb-trong-khoa-h\u1ecdc-m\xe1y-t\xednh"},"Memory Management (Qu\u1ea3n l\xfd B\u1ed9 nh\u1edb) trong Khoa h\u1ecdc M\xe1y t\xednh"),(0,e.kt)("p",null,"Qu\u1ea3n l\xfd b\u1ed9 nh\u1edb l\xe0 qu\xe1 tr\xecnh c\u1ea5p ph\xe1t v\xe0 gi\u1ea3i ph\xf3ng t\xe0i nguy\xean b\u1ed9 nh\u1edb cho c\xe1c ch\u01b0\u01a1ng tr\xecnh. M\u1ee5c ti\xeau l\xe0 cung c\u1ea5p b\u1ed9 nh\u1edb khi c\u1ea7n v\xe0 thu h\u1ed3i khi kh\xf4ng c\xf2n s\u1eed d\u1ee5ng \u0111\u1ec3 tr\xe1nh l\xe3ng ph\xed v\xe0 l\u1ed7i."),(0,e.kt)("p",null,(0,e.kt)("strong",{parentName:"p"},"Allocation (C\u1ea5p ph\xe1t)"),": G\xe1n m\u1ed9t kh\u1ed1i b\u1ed9 nh\u1edb cho m\u1ed9t bi\u1ebfn ho\u1eb7c c\u1ea5u tr\xfac d\u1eef li\u1ec7u. C\xf3 th\u1ec3 l\xe0 c\u1ea5p ph\xe1t t\u0129nh (static - t\u1ea1i th\u1eddi \u0111i\u1ec3m bi\xean d\u1ecbch), c\u1ea5p ph\xe1t tr\xean Stack (t\u1ef1 \u0111\u1ed9ng), ho\u1eb7c c\u1ea5p ph\xe1t \u0111\u1ed9ng (dynamic - tr\xean Heap t\u1ea1i th\u1eddi \u0111i\u1ec3m ch\u1ea1y)."),(0,e.kt)("p",null,(0,e.kt)("strong",{parentName:"p"},"Deallocation (Gi\u1ea3i ph\xf3ng)"),": Thu h\u1ed3i b\u1ed9 nh\u1edb \u0111\xe3 c\u1ea5p ph\xe1t \u0111\u1ec3 n\xf3 c\xf3 th\u1ec3 \u0111\u01b0\u1ee3c t\xe1i s\u1eed d\u1ee5ng. C\xf3 th\u1ec3 l\xe0 gi\u1ea3i ph\xf3ng th\u1ee7 c\xf4ng (manual - C/C++) ho\u1eb7c t\u1ef1 \u0111\u1ed9ng (automatic - th\xf4ng qua Garbage Collection)."),(0,e.kt)("p",null,(0,e.kt)("strong",{parentName:"p"},"Garbage Collection (GC - Thu gom r\xe1c)"),": C\u01a1 ch\u1ebf t\u1ef1 \u0111\u1ed9ng x\xe1c \u0111\u1ecbnh v\xe0 gi\u1ea3i ph\xf3ng c\xe1c v\xf9ng nh\u1edb kh\xf4ng c\xf2n \u0111\u01b0\u1ee3c ch\u01b0\u01a1ng tr\xecnh tham chi\u1ebfu \u0111\u1ebfn (unreachable memory). C\xe1c thu\u1eadt to\xe1n GC ph\u1ed5 bi\u1ebfn bao g\u1ed3m:"),(0,e.kt)("ul",null,(0,e.kt)("li",{parentName:"ul"},(0,e.kt)("p",{parentName:"li"},"Reference Counting: \u0110\u1ebfm s\u1ed1 l\u01b0\u1ee3ng tham chi\u1ebfu \u0111\u1ebfn m\u1ed7i \u0111\u1ed1i t\u01b0\u1ee3ng. Khi s\u1ed1 \u0111\u1ebfm v\u1ec1 0, \u0111\u1ed1i t\u01b0\u1ee3ng \u0111\u01b0\u1ee3c thu gom. (D\u1ec5 b\u1ecb cycle detection problem).")),(0,e.kt)("li",{parentName:"ul"},(0,e.kt)("p",{parentName:"li"},"Mark-and-Sweep: \u0110\xe1nh d\u1ea5u c\xe1c \u0111\u1ed1i t\u01b0\u1ee3ng c\xf3 th\u1ec3 truy c\u1eadp t\u1eeb g\u1ed1c (roots - global variables, stack), sau \u0111\xf3 qu\xe9t to\xe0n b\u1ed9 Heap v\xe0 gi\u1ea3i ph\xf3ng c\xe1c \u0111\u1ed1i t\u01b0\u1ee3ng kh\xf4ng \u0111\u01b0\u1ee3c \u0111\xe1nh d\u1ea5u.")),(0,e.kt)("li",{parentName:"ul"},(0,e.kt)("p",{parentName:"li"},'Generational GC: Gi\u1ea3 \u0111\u1ecbnh r\u1eb1ng h\u1ea7u h\u1ebft c\xe1c \u0111\u1ed1i t\u01b0\u1ee3ng ch\u1ebft tr\u1ebb. Heap \u0111\u01b0\u1ee3c chia th\xe0nh c\xe1c "th\u1ebf h\u1ec7". GC th\u01b0\u1eddng xuy\xean qu\xe9t th\u1ebf h\u1ec7 tr\u1ebb (young generation) v\xe0 \xedt th\u01b0\u1eddng xuy\xean h\u01a1n \u1edf th\u1ebf h\u1ec7 gi\xe0 (old generation). V8 s\u1eed d\u1ee5ng ph\u01b0\u01a1ng ph\xe1p n\xe0y.')),(0,e.kt)("li",{parentName:"ul"},(0,e.kt)("p",{parentName:"li"},'Concurrent/Parallel GC: Th\u1ef1c hi\u1ec7n c\xe1c pha c\u1ee7a GC song song v\u1edbi vi\u1ec7c th\u1ef1c thi ch\u01b0\u01a1ng tr\xecnh ch\xednh \u0111\u1ec3 gi\u1ea3m thi\u1ec3u th\u1eddi gian "stop-the-world" (khi \u1ee9ng d\u1ee5ng ph\u1ea3i d\u1eebng ho\xe0n to\xe0n \u0111\u1ec3 GC ch\u1ea1y). Go s\u1eed d\u1ee5ng GC \u0111\u1ed3ng th\u1eddi.'))),(0,e.kt)("p",null,(0,e.kt)("strong",{parentName:"p"},"Memory Fragmentation (Ph\xe2n m\u1ea3nh B\u1ed9 nh\u1edb)"),": X\u1ea3y ra khi c\xe1c kh\u1ed1i b\u1ed9 nh\u1edb tr\u1ed1ng b\u1ecb ph\xe2n t\xe1n r\u1ea3i r\xe1c tr\xean Heap, khi\u1ebfn vi\u1ec7c c\u1ea5p ph\xe1t m\u1ed9t kh\u1ed1i nh\u1edb l\u1edbn li\xean t\u1ee5c tr\u1edf n\xean kh\xf3 kh\u0103n d\xf9 t\u1ed5ng b\u1ed9 nh\u1edb tr\u1ed1ng v\u1eabn c\xf2n nhi\u1ec1u."),(0,e.kt)("h2",{id:"process-management-qu\u1ea3n-l\xfd-ti\u1ebfn-tr\xecnh-trong-khoa-h\u1ecdc-m\xe1y-t\xednh"},"Process Management (Qu\u1ea3n l\xfd Ti\u1ebfn tr\xecnh) trong Khoa h\u1ecdc M\xe1y t\xednh"),(0,e.kt)("p",null,"H\u1ec7 \u0111i\u1ec1u h\xe0nh ch\u1ecbu tr\xe1ch nhi\u1ec7m t\u1ea1o, l\u1eadp l\u1ecbch, v\xe0 ch\u1ea5m d\u1ee9t c\xe1c ti\u1ebfn tr\xecnh, qu\u1ea3n l\xfd t\xe0i nguy\xean v\xe0 s\u1ef1 t\u01b0\u01a1ng t\xe1c gi\u1eefa ch\xfang."),(0,e.kt)("p",null,(0,e.kt)("strong",{parentName:"p"},"Process States (Tr\u1ea1ng th\xe1i Ti\u1ebfn tr\xecnh)"),": M\u1ed9t ti\u1ebfn tr\xecnh c\xf3 th\u1ec3 \u1edf c\xe1c tr\u1ea1ng th\xe1i nh\u01b0 New (M\u1edbi t\u1ea1o), Ready (S\u1eb5n s\xe0ng ch\u1ea1y), Running (\u0110ang ch\u1ea1y tr\xean CPU), Waiting (\u0110ang ch\u1edd I/O ho\u1eb7c s\u1ef1 ki\u1ec7n kh\xe1c), Terminated (\u0110\xe3 k\u1ebft th\xfac)."),(0,e.kt)("p",null,(0,e.kt)("strong",{parentName:"p"},"Process Control Block (PCB)"),": C\u1ea5u tr\xfac d\u1eef li\u1ec7u \u0111\u01b0\u1ee3c h\u1ec7 \u0111i\u1ec1u h\xe0nh s\u1eed d\u1ee5ng \u0111\u1ec3 l\u01b0u tr\u1eef th\xf4ng tin v\u1ec1 m\u1ed9t ti\u1ebfn tr\xecnh (ID ti\u1ebfn tr\xecnh, tr\u1ea1ng th\xe1i, b\u1ed9 \u0111\u1ebfm ch\u01b0\u01a1ng tr\xecnh, thanh ghi CPU, th\xf4ng tin l\u1eadp l\u1ecbch, th\xf4ng tin qu\u1ea3n l\xfd b\u1ed9 nh\u1edb, file \u0111ang m\u1edf,...)."),(0,e.kt)("p",null,(0,e.kt)("strong",{parentName:"p"},"Scheduling (L\u1eadp l\u1ecbch)"),": Quy\u1ebft \u0111\u1ecbnh ti\u1ebfn tr\xecnh n\xe0o s\u1ebd \u0111\u01b0\u1ee3c ch\u1ea1y tr\xean CPU ti\u1ebfp theo v\xe0 trong bao l\xe2u. C\xe1c thu\u1eadt to\xe1n l\u1eadp l\u1ecbch ph\u1ed5 bi\u1ebfn: First-Come First-Served (FCFS), Shortest Job First (SJF), Priority Scheduling, Round Robin."),(0,e.kt)("p",null,(0,e.kt)("strong",{parentName:"p"},"Context Switching (Chuy\u1ec3n \u0111\u1ed5i Ng\u1eef c\u1ea3nh)"),": H\xe0nh \u0111\u1ed9ng l\u01b0u tr\u1ea1ng th\xe1i c\u1ee7a ti\u1ebfn tr\xecnh \u0111ang ch\u1ea1y hi\u1ec7n t\u1ea1i v\xe0 n\u1ea1p tr\u1ea1ng th\xe1i c\u1ee7a ti\u1ebfn tr\xecnh ti\u1ebfp theo \u0111\u1ec3 ch\u1ea1y. \u0110\xe2y l\xe0 m\u1ed9t ho\u1ea1t \u0111\u1ed9ng t\u1ed1n k\xe9m chi ph\xed (overhead)."),(0,e.kt)("p",null,(0,e.kt)("strong",{parentName:"p"},"Inter-Process Communication (IPC - Giao ti\u1ebfp Li\xean Ti\u1ebfn tr\xecnh)"),": C\xe1c c\u01a1 ch\u1ebf cho ph\xe9p c\xe1c ti\u1ebfn tr\xecnh kh\xe1c nhau giao ti\u1ebfp v\xe0 chia s\u1ebb d\u1eef li\u1ec7u (v\xed d\u1ee5: Pipes, Shared Memory, Message Queues, Sockets)."),(0,e.kt)("h2",{id:"cpu-architecture-ki\u1ebfn-tr\xfac-cpu-trong-khoa-h\u1ecdc-m\xe1y-t\xednh"},"CPU Architecture (Ki\u1ebfn tr\xfac CPU) trong Khoa h\u1ecdc M\xe1y t\xednh"),(0,e.kt)("p",null,"Hi\u1ec3u bi\u1ebft c\u01a1 b\u1ea3n v\u1ec1 c\xe1ch CPU ho\u1ea1t \u0111\u1ed9ng gi\xfap t\u1ed1i \u01b0u h\xf3a code \u1edf m\u1ee9c \u0111\u1ed9 th\u1ea5p h\u01a1n."),(0,e.kt)("p",null,(0,e.kt)("strong",{parentName:"p"},"Instruction Set Architecture (ISA)"),": \u0110\u1ecbnh ngh\u0129a t\u1eadp l\u1ec7nh m\xe0 CPU c\xf3 th\u1ec3 hi\u1ec3u v\xe0 th\u1ef1c thi (v\xed d\u1ee5: x86, ARM). C\xf3 hai lo\u1ea1i ch\xednh:"),(0,e.kt)("ul",null,(0,e.kt)("li",{parentName:"ul"},(0,e.kt)("p",{parentName:"li"},"CISC (Complex Instruction Set Computer): C\xf3 t\u1eadp l\u1ec7nh l\u1edbn, ph\u1ee9c t\u1ea1p, m\u1ed9t l\u1ec7nh c\xf3 th\u1ec3 th\u1ef1c hi\u1ec7n nhi\u1ec1u thao t\xe1c c\u1ea5p th\u1ea5p (ph\u1ed5 bi\u1ebfn tr\xean desktop/server - Intel, AMD).")),(0,e.kt)("li",{parentName:"ul"},(0,e.kt)("p",{parentName:"li"},"RISC (Reduced Instruction Set Computer): C\xf3 t\u1eadp l\u1ec7nh nh\u1ecf, \u0111\u01a1n gi\u1ea3n, t\u1ed1i \u01b0u h\xf3a. M\u1ed7i l\u1ec7nh th\u01b0\u1eddng th\u1ef1c hi\u1ec7n m\u1ed9t thao t\xe1c \u0111\u01a1n gi\u1ea3n v\xe0 th\u1ef1c thi trong m\u1ed9t chu k\u1ef3 xung nh\u1ecbp (ph\u1ed5 bi\u1ebfn tr\xean mobile, embedded - ARM)."))),(0,e.kt)("p",null,(0,e.kt)("strong",{parentName:"p"},"Pipelining"),": K\u1ef9 thu\u1eadt cho ph\xe9p CPU b\u1eaft \u0111\u1ea7u x\u1eed l\xfd l\u1ec7nh ti\u1ebfp theo tr\u01b0\u1edbc khi l\u1ec7nh hi\u1ec7n t\u1ea1i ho\xe0n th\xe0nh, gi\u1ed1ng nh\u01b0 m\u1ed9t d\xe2y chuy\u1ec1n l\u1eafp r\xe1p, t\u0103ng th\xf4ng l\u01b0\u1ee3ng th\u1ef1c thi l\u1ec7nh."),(0,e.kt)("p",null,(0,e.kt)("strong",{parentName:"p"},"Cores and Multiprocessing"),": CPU hi\u1ec7n \u0111\u1ea1i th\u01b0\u1eddng c\xf3 nhi\u1ec1u l\xf5i (cores), cho ph\xe9p th\u1ef1c thi nhi\u1ec1u lu\u1ed3ng (threads) song song th\u1ef1c s\u1ef1."),(0,e.kt)("p",null,(0,e.kt)("strong",{parentName:"p"},"Cache Hierarchy (H\u1ec7 th\u1ed1ng Cache Ph\xe2n c\u1ea5p)"),": C\xe1c b\u1ed9 nh\u1edb \u0111\u1ec7m (cache) nh\u1ecf, nhanh n\u1eb1m gi\u1eefa CPU v\xe0 RAM ch\xednh (L1, L2, L3 cache). Cache l\u01b0u tr\u1eef d\u1eef li\u1ec7u v\xe0 l\u1ec7nh th\u01b0\u1eddng xuy\xean \u0111\u01b0\u1ee3c truy c\u1eadp \u0111\u1ec3 gi\u1ea3m th\u1eddi gian ch\u1edd \u0111\u1ee3i t\u1eeb RAM ch\u1eadm h\u01a1n. T\u1eadn d\u1ee5ng t\u1ed1t cache (locality of reference) l\xe0 r\u1ea5t quan tr\u1ecdng cho hi\u1ec7u n\u0103ng."),(0,e.kt)("p",null,(0,e.kt)("em",{parentName:"p"},"Branch Prediction"),": CPU c\u1ed1 g\u1eafng \u0111o\xe1n tr\u01b0\u1edbc k\u1ebft qu\u1ea3 c\u1ee7a c\xe1c l\u1ec7nh r\u1ebd nh\xe1nh (if/else, loops) \u0111\u1ec3 n\u1ea1p tr\u01b0\u1edbc c\xe1c l\u1ec7nh c\xf3 kh\u1ea3 n\u0103ng \u0111\u01b0\u1ee3c th\u1ef1c thi ti\u1ebfp theo, tr\xe1nh l\xe0m \u0111\xecnh tr\u1ec7 pipeline."),(0,e.kt)("h2",{id:"performance-optimization-t\u1ed1i-\u01b0u-hi\u1ec7u-n\u0103ng-trong-khoa-h\u1ecdc-m\xe1y-t\xednh"},"Performance Optimization (T\u1ed1i \u01b0u Hi\u1ec7u n\u0103ng) trong Khoa h\u1ecdc M\xe1y t\xednh"),(0,e.kt)("p",null,"T\u1ed1i \u01b0u h\xf3a hi\u1ec7u n\u0103ng l\xe0 qu\xe1 tr\xecnh c\u1ea3i thi\u1ec7n hi\u1ec7u qu\u1ea3 s\u1eed d\u1ee5ng t\xe0i nguy\xean (CPU, b\u1ed9 nh\u1edb, m\u1ea1ng, I/O) v\xe0 gi\u1ea3m th\u1eddi gian ph\u1ea3n h\u1ed3i c\u1ee7a \u1ee9ng d\u1ee5ng."),(0,e.kt)("p",null,(0,e.kt)("strong",{parentName:"p"},"Profiling"),": \u0110o l\u01b0\u1eddng v\xe0 ph\xe2n t\xedch hi\u1ec7u n\u0103ng c\u1ee7a \u1ee9ng d\u1ee5ng \u0111\u1ec3 x\xe1c \u0111\u1ecbnh c\xe1c \u0111i\u1ec3m ngh\u1ebdn c\u1ed5 chai (bottlenecks). C\xe1c c\xf4ng c\u1ee5 profiling gi\xfap x\xe1c \u0111\u1ecbnh h\xe0m n\xe0o t\u1ed1n nhi\u1ec1u th\u1eddi gian CPU nh\u1ea5t, h\xe0m n\xe0o c\u1ea5p ph\xe1t nhi\u1ec1u b\u1ed9 nh\u1edb nh\u1ea5t, v.v."),(0,e.kt)("ul",null,(0,e.kt)("li",{parentName:"ul"},(0,e.kt)("p",{parentName:"li"},"Go: Cung c\u1ea5p c\xf4ng c\u1ee5 pprof m\u1ea1nh m\u1ebd \u0111\u1ec3 profiling CPU, b\u1ed9 nh\u1edb, goroutine, blocking, mutex.")),(0,e.kt)("li",{parentName:"ul"},(0,e.kt)("p",{parentName:"li"},"Node.js: C\xf3 th\u1ec3 s\u1eed d\u1ee5ng V8 profiler t\xedch h\u1ee3p (qua Chrome DevTools ho\u1eb7c c\u1edd l\u1ec7nh --prof), ho\u1eb7c c\xe1c th\u01b0 vi\u1ec7n nh\u01b0 0x, clinic.js."))),(0,e.kt)("p",null,(0,e.kt)("strong",{parentName:"p"},"Algorithmic Optimization"),": Ch\u1ecdn ho\u1eb7c thi\u1ebft k\u1ebf thu\u1eadt to\xe1n c\xf3 \u0111\u1ed9 ph\u1ee9c t\u1ea1p th\u1eddi gian v\xe0 kh\xf4ng gian t\u1ed1t h\u01a1n (v\xed d\u1ee5: s\u1eed d\u1ee5ng O(n log n) thay v\xec O(n^2))."),(0,e.kt)("p",null,(0,e.kt)("strong",{parentName:"p"},"Data Structure Selection"),": S\u1eed d\u1ee5ng c\u1ea5u tr\xfac d\u1eef li\u1ec7u ph\xf9 h\u1ee3p v\u1edbi t\xe1c v\u1ee5 (v\xed d\u1ee5: hash map cho t\xecm ki\u1ebfm nhanh, list cho truy c\u1eadp tu\u1ea7n t\u1ef1)."),(0,e.kt)("p",null,(0,e.kt)("strong",{parentName:"p"},"Caching"),": L\u01b0u tr\u1eef k\u1ebft qu\u1ea3 c\u1ee7a c\xe1c ph\xe9p t\xednh to\xe1n t\u1ed1n k\xe9m ho\u1eb7c d\u1eef li\u1ec7u th\u01b0\u1eddng xuy\xean truy c\u1eadp v\xe0o b\u1ed9 nh\u1edb nhanh h\u01a1n (in-memory cache, Redis, Memcached) \u0111\u1ec3 tr\xe1nh ph\u1ea3i t\xednh to\xe1n l\u1ea1i ho\u1eb7c truy v\u1ea5n l\u1ea1i."),(0,e.kt)("p",null,(0,e.kt)("strong",{parentName:"p"},"Concurrency and Parallelism"),": S\u1eed d\u1ee5ng \u0111\u1ed3ng th\u1eddi (concurrency - Go goroutines, Node.js async/await) v\xe0 song song (parallelism - Go tr\xean multi-core, Node.js worker_threads) \u0111\u1ec3 x\u1eed l\xfd nhi\u1ec1u t\xe1c v\u1ee5 c\xf9ng l\xfac, \u0111\u1eb7c bi\u1ec7t hi\u1ec7u qu\u1ea3 cho I/O bound v\xe0 CPU bound tr\xean multi-core."),(0,e.kt)("p",null,(0,e.kt)("strong",{parentName:"p"},"Efficient I/O"),": S\u1eed d\u1ee5ng c\xe1c k\u1ef9 thu\u1eadt I/O hi\u1ec7u qu\u1ea3 nh\u01b0 non-blocking I/O, batching (gom nhi\u1ec1u thao t\xe1c nh\u1ecf th\xe0nh m\u1ed9t thao t\xe1c l\u1edbn), buffering."),(0,e.kt)("p",null,(0,e.kt)("strong",{parentName:"p"},"Memory Optimization"),": Gi\u1ea3m c\u1ea5p ph\xe1t b\u1ed9 nh\u1edb kh\xf4ng c\u1ea7n thi\u1ebft, tr\xe1nh memory leaks, s\u1eed d\u1ee5ng object pooling n\u1ebfu ph\xf9 h\u1ee3p."),(0,e.kt)("p",null,(0,e.kt)("strong",{parentName:"p"},"Network Optimization"),": Gi\u1ea3m s\u1ed1 l\u01b0\u1ee3ng request m\u1ea1ng, s\u1eed d\u1ee5ng n\xe9n d\u1eef li\u1ec7u, t\u1eadn d\u1ee5ng HTTP/2."))}u.isMDXComponent=!0}}]);
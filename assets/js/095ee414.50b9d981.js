"use strict";(self.webpackChunk=self.webpackChunk||[]).push([[617],{3905:(n,t,e)=>{e.d(t,{Zo:()=>g,kt:()=>m});var i=e(7294);function c(n,t,e){return t in n?Object.defineProperty(n,t,{value:e,enumerable:!0,configurable:!0,writable:!0}):n[t]=e,n}function a(n,t){var e=Object.keys(n);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(n);t&&(i=i.filter((function(t){return Object.getOwnPropertyDescriptor(n,t).enumerable}))),e.push.apply(e,i)}return e}function h(n){for(var t=1;t<arguments.length;t++){var e=null!=arguments[t]?arguments[t]:{};t%2?a(Object(e),!0).forEach((function(t){c(n,t,e[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(n,Object.getOwnPropertyDescriptors(e)):a(Object(e)).forEach((function(t){Object.defineProperty(n,t,Object.getOwnPropertyDescriptor(e,t))}))}return n}function l(n,t){if(null==n)return{};var e,i,c=function(n,t){if(null==n)return{};var e,i,c={},a=Object.keys(n);for(i=0;i<a.length;i++)e=a[i],t.indexOf(e)>=0||(c[e]=n[e]);return c}(n,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(n);for(i=0;i<a.length;i++)e=a[i],t.indexOf(e)>=0||Object.prototype.propertyIsEnumerable.call(n,e)&&(c[e]=n[e])}return c}var r=i.createContext({}),o=function(n){var t=i.useContext(r),e=t;return n&&(e="function"==typeof n?n(t):h(h({},t),n)),e},g=function(n){var t=o(n.components);return i.createElement(r.Provider,{value:t},n.children)},u="mdxType",p={inlineCode:"code",wrapper:function(n){var t=n.children;return i.createElement(i.Fragment,{},t)}},s=i.forwardRef((function(n,t){var e=n.components,c=n.mdxType,a=n.originalType,r=n.parentName,g=l(n,["components","mdxType","originalType","parentName"]),u=o(e),s=c,m=u["".concat(r,".").concat(s)]||u[s]||p[s]||a;return e?i.createElement(m,h(h({ref:t},g),{},{components:e})):i.createElement(m,h({ref:t},g))}));function m(n,t){var e=arguments,c=t&&t.mdxType;if("string"==typeof n||c){var a=e.length,h=new Array(a);h[0]=s;var l={};for(var r in t)hasOwnProperty.call(t,r)&&(l[r]=t[r]);l.originalType=n,l[u]="string"==typeof n?n:c,h[1]=l;for(var o=2;o<a;o++)h[o]=e[o];return i.createElement.apply(null,h)}return i.createElement.apply(null,e)}s.displayName="MDXCreateElement"},3562:(n,t,e)=>{e.r(t),e.d(t,{assets:()=>r,contentTitle:()=>h,default:()=>p,frontMatter:()=>a,metadata:()=>l,toc:()=>o});var i=e(7462),c=(e(7294),e(3905));const a={title:"Database"},h=void 0,l={unversionedId:"blog/system-design/database",id:"blog/system-design/database",title:"Database",description:"Core concepts (C\xe1c kh\xe1i ni\u1ec7m C\u1ed1t l\xf5i)",source:"@site/docs/blog/system-design/database.md",sourceDirName:"blog/system-design",slug:"/blog/system-design/database",permalink:"/blog/system-design/database",draft:!1,tags:[],version:"current",frontMatter:{title:"Database"},sidebar:"blog",previous:{title:"System Design Pattern",permalink:"/blog/system-design/system-design-pattern"},next:{title:"Node.js",permalink:"/blog/programming/nodejs"}},r={},o=[{value:"Core concepts (C\xe1c kh\xe1i ni\u1ec7m C\u1ed1t l\xf5i)",id:"core-concepts-c\xe1c-kh\xe1i-ni\u1ec7m-c\u1ed1t-l\xf5i",level:2},{value:"Consistency v\xe0 Eventual Consistency",id:"consistency-v\xe0-eventual-consistency",level:3},{value:"Strong Consistency (T\xednh nh\u1ea5t qu\xe1n M\u1ea1nh m\u1ebd):",id:"strong-consistency-t\xednh-nh\u1ea5t-qu\xe1n-m\u1ea1nh-m\u1ebd",level:4},{value:"Eventual Consistency (T\xednh nh\u1ea5t qu\xe1n Cu\u1ed1i c\xf9ng):",id:"eventual-consistency-t\xednh-nh\u1ea5t-qu\xe1n-cu\u1ed1i-c\xf9ng",level:4},{value:"Scaling (Kh\u1ea3 n\u0103ng M\u1edf r\u1ed9ng)",id:"scaling-kh\u1ea3-n\u0103ng-m\u1edf-r\u1ed9ng",level:3},{value:"PostgreSQL Scaling:",id:"postgresql-scaling",level:4},{value:"MongoDB Scaling:",id:"mongodb-scaling",level:4},{value:"Performance Optimization (T\u1ed1i \u01b0u Hi\u1ec7u n\u0103ng)",id:"performance-optimization-t\u1ed1i-\u01b0u-hi\u1ec7u-n\u0103ng",level:3},{value:"PostgreSQL (SQL) Optimization:",id:"postgresql-sql-optimization",level:4},{value:"MongoDB (NoSQL) Optimization:",id:"mongodb-nosql-optimization",level:4},{value:"ACID v\xe0 BASE",id:"acid-v\xe0-base",level:2},{value:"ACID (Atomicity, Consistency, Isolation, Durability):",id:"acid-atomicity-consistency-isolation-durability",level:3},{value:"BASE (Basically Available, Soft state, Eventually consistent):",id:"base-basically-available-soft-state-eventually-consistent",level:3}],g={toc:o},u="wrapper";function p(n){let{components:t,...e}=n;return(0,c.kt)(u,(0,i.Z)({},g,e,{components:t,mdxType:"MDXLayout"}),(0,c.kt)("h2",{id:"core-concepts-c\xe1c-kh\xe1i-ni\u1ec7m-c\u1ed1t-l\xf5i"},"Core concepts (C\xe1c kh\xe1i ni\u1ec7m C\u1ed1t l\xf5i)"),(0,c.kt)("h3",{id:"consistency-v\xe0-eventual-consistency"},"Consistency v\xe0 Eventual Consistency"),(0,c.kt)("p",null,"\u0110\xe2y l\xe0 m\u1ed9t trong nh\u1eefng \u0111i\u1ec3m kh\xe1c bi\u1ec7t c\u01a1 b\u1ea3n nh\u1ea5t gi\u1eefa c\xe1c h\u1ec7 th\u1ed1ng c\u01a1 s\u1edf d\u1eef li\u1ec7u truy\u1ec1n th\u1ed1ng (nh\u01b0 RDBMS) v\xe0 nhi\u1ec1u h\u1ec7 th\u1ed1ng NoSQL ph\xe2n t\xe1n."),(0,c.kt)("h4",{id:"strong-consistency-t\xednh-nh\u1ea5t-qu\xe1n-m\u1ea1nh-m\u1ebd"},"Strong Consistency (T\xednh nh\u1ea5t qu\xe1n M\u1ea1nh m\u1ebd):"),(0,c.kt)("p",null,"Kh\xe1i ni\u1ec7m: \u0110\u1ea3m b\u1ea3o r\u1eb1ng m\u1ecdi thao t\xe1c \u0111\u1ecdc (read) sau khi m\u1ed9t thao t\xe1c ghi (write) ho\xe0n th\xe0nh s\u1ebd tr\u1ea3 v\u1ec1 gi\xe1 tr\u1ecb \u0111\xe3 \u0111\u01b0\u1ee3c ghi \u0111\xf3. Trong m\u1ed9t h\u1ec7 th\u1ed1ng ph\xe2n t\xe1n, \u0111i\u1ec1u n\xe0y c\xf3 ngh\u0129a l\xe0 t\u1ea5t c\u1ea3 c\xe1c b\u1ea3n sao (replicas) ph\u1ea3i \u0111\u1ed3ng b\u1ed9 ngay l\u1eadp t\u1ee9c tr\u01b0\u1edbc khi thao t\xe1c ghi \u0111\u01b0\u1ee3c coi l\xe0 th\xe0nh c\xf4ng v\xe0 d\u1eef li\u1ec7u m\u1edbi \u0111\u01b0\u1ee3c ph\xe9p \u0111\u1ecdc."),(0,c.kt)("p",null,"V\xed d\u1ee5 (PostgreSQL): Gi\u1ea3 s\u1eed b\u1ea1n th\u1ef1c hi\u1ec7n m\u1ed9t giao d\u1ecbch chuy\u1ec3n ti\u1ec1n t\u1eeb t\xe0i kho\u1ea3n A sang t\xe0i kho\u1ea3n B trong PostgreSQL."),(0,c.kt)("pre",null,(0,c.kt)("code",{parentName:"pre",className:"language-sql"},"BEGIN;\nUPDATE accounts SET balance = balance - 100 WHERE account_id = 'A';\nUPDATE accounts SET balance = balance + 100 WHERE account_id = 'B';\nCOMMIT;\n-- Ngay sau khi COMMIT th\xe0nh c\xf4ng:\nSELECT balance FROM accounts WHERE account_id = 'A'; -- S\u1ebd lu\xf4n th\u1ea5y s\u1ed1 d\u01b0 \u0111\xe3 tr\u1eeb 100\nSELECT balance FROM accounts WHERE account_id = 'B'; -- S\u1ebd lu\xf4n th\u1ea5y s\u1ed1 d\u01b0 \u0111\xe3 c\u1ed9ng 100\n")),(0,c.kt)("p",null,"B\u1ea5t k\u1ef3 ai truy v\u1ea5n s\u1ed1 d\u01b0 c\u1ee7a A ho\u1eb7c B ngay sau khi giao d\u1ecbch commit th\xe0nh c\xf4ng \u0111\u1ec1u s\u1ebd th\u1ea5y tr\u1ea1ng th\xe1i m\u1edbi nh\u1ea5t. N\u1ebfu c\xf3 read replicas, PostgreSQL \u0111\u1ea3m b\u1ea3o (th\xf4ng qua c\u01a1 ch\u1ebf replication) r\u1eb1ng d\u1eef li\u1ec7u \u0111\u1ecdc t\u1eeb replica (v\u1edbi c\u1ea5u h\xecnh ph\xf9 h\u1ee3p) c\u0169ng ph\u1ea3n \xe1nh tr\u1ea1ng th\xe1i nh\u1ea5t qu\xe1n n\xe0y (c\xf3 th\u1ec3 c\xf3 \u0111\u1ed9 tr\u1ec5 nh\u1ecf, nh\u01b0ng m\u1ed9t khi d\u1eef li\u1ec7u \u0111\u1ebfn replica, n\xf3 l\xe0 nh\u1ea5t qu\xe1n t\u1ea1i th\u1eddi \u0111i\u1ec3m \u0111\xf3)."),(0,c.kt)("p",null,"\u01afu \u0111i\u1ec3m: \u0110\u01a1n gi\u1ea3n h\xf3a logic \u1ee9ng d\u1ee5ng v\xec l\u1eadp tr\xecnh vi\xean lu\xf4n c\xf3 th\u1ec3 tin t\u01b0\u1edfng v\xe0o d\u1eef li\u1ec7u \u0111\u1ecdc \u0111\u01b0\u1ee3c l\xe0 m\u1edbi nh\u1ea5t. Quan tr\u1ecdng cho c\xe1c h\u1ec7 th\u1ed1ng y\xeau c\u1ea7u \u0111\u1ed9 ch\xednh x\xe1c cao (t\xe0i ch\xednh, ng\xe2n h\xe0ng)."),(0,c.kt)("p",null,"Nh\u01b0\u1ee3c \u0111i\u1ec3m: C\xf3 th\u1ec3 l\xe0m gi\u1ea3m t\xednh s\u1eb5n s\xe0ng (Availability) v\xe0 t\u0103ng \u0111\u1ed9 tr\u1ec5 (latency) trong c\xe1c h\u1ec7 th\u1ed1ng ph\xe2n t\xe1n, v\xec h\u1ec7 th\u1ed1ng ph\u1ea3i ch\u1edd t\u1ea5t c\u1ea3 c\xe1c node li\xean quan \u0111\u1ed3ng b\u1ed9 tr\u01b0\u1edbc khi x\xe1c nh\u1eadn thao t\xe1c ghi."),(0,c.kt)("h4",{id:"eventual-consistency-t\xednh-nh\u1ea5t-qu\xe1n-cu\u1ed1i-c\xf9ng"},"Eventual Consistency (T\xednh nh\u1ea5t qu\xe1n Cu\u1ed1i c\xf9ng):"),(0,c.kt)("p",null,"Kh\xe1i ni\u1ec7m: \u0110\u1ea3m b\u1ea3o r\u1eb1ng, n\u1ebfu kh\xf4ng c\xf3 th\xeam c\u1eadp nh\u1eadt n\xe0o cho m\u1ed9t m\u1ee5c d\u1eef li\u1ec7u c\u1ee5 th\u1ec3, th\xec cu\u1ed1i c\xf9ng t\u1ea5t c\u1ea3 c\xe1c l\u01b0\u1ee3t truy c\u1eadp (\u0111\u1ecdc) \u0111\u1ebfn m\u1ee5c d\u1eef li\u1ec7u \u0111\xf3 s\u1ebd tr\u1ea3 v\u1ec1 gi\xe1 tr\u1ecb \u0111\u01b0\u1ee3c ghi cu\u1ed1i c\xf9ng. Tuy nhi\xean, trong m\u1ed9t kho\u1ea3ng th\u1eddi gian ng\u1eafn sau khi ghi, c\xe1c l\u01b0\u1ee3t \u0111\u1ecdc kh\xe1c nhau c\xf3 th\u1ec3 tr\u1ea3 v\u1ec1 gi\xe1 tr\u1ecb c\u0169 ho\u1eb7c gi\xe1 tr\u1ecb m\u1edbi."),(0,c.kt)("p",null,"V\xed d\u1ee5 (MongoDB - Replica Set v\u1edbi Read Preference secondary): M\u1ed9t MongoDB replica set bao g\u1ed3m m\u1ed9t node Primary (nh\u1eadn ghi) v\xe0 nhi\u1ec1u node Secondary (sao ch\xe9p d\u1eef li\u1ec7u t\u1eeb Primary)."),(0,c.kt)("ol",null,(0,c.kt)("li",{parentName:"ol"},(0,c.kt)("p",{parentName:"li"},"Client th\u1ef1c hi\u1ec7n thao t\xe1c ghi v\xe0o node Primary: ",(0,c.kt)("inlineCode",{parentName:"p"},'db.users.updateOne({\\_id: 1}, {$set: {email: "new@example.com"}})')," (v\u1edbi Write Concern m\u1eb7c \u0111\u1ecbnh l\xe0 w:1 - ch\u1ec9 c\u1ea7n Primary x\xe1c nh\u1eadn).")),(0,c.kt)("li",{parentName:"ol"},(0,c.kt)("p",{parentName:"li"},"Primary x\xe1c nh\u1eadn ghi th\xe0nh c\xf4ng cho client ngay l\u1eadp t\u1ee9c.")),(0,c.kt)("li",{parentName:"ol"},(0,c.kt)("p",{parentName:"li"},"D\u1eef li\u1ec7u \u0111\u01b0\u1ee3c sao ch\xe9p b\u1ea5t \u0111\u1ed3ng b\u1ed9 (asynchronously) \u0111\u1ebfn c\xe1c node Secondary.")),(0,c.kt)("li",{parentName:"ol"},(0,c.kt)("p",{parentName:"li"},"Ngay sau b\u01b0\u1edbc 2, tr\u01b0\u1edbc khi b\u01b0\u1edbc 3 ho\xe0n th\xe0nh tr\xean m\u1ed9t Secondary c\u1ee5 th\u1ec3: N\u1ebfu m\u1ed9t client kh\xe1c \u0111\u1ecdc t\u1eeb Secondary \u0111\xf3 (s\u1eed d\u1ee5ng Read Preference secondary), h\u1ecd c\xf3 th\u1ec3 v\u1eabn th\u1ea5y \u0111\u1ecba ch\u1ec9 email c\u0169.")),(0,c.kt)("li",{parentName:"ol"},(0,c.kt)("p",{parentName:"li"},"Sau m\u1ed9t kho\u1ea3ng th\u1eddi gian (th\u01b0\u1eddng r\u1ea5t ng\u1eafn): D\u1eef li\u1ec7u \u0111\u01b0\u1ee3c sao ch\xe9p xong, v\xe0 m\u1ecdi l\u01b0\u1ee3t \u0111\u1ecdc t\u1eeb Secondary \u0111\xf3 s\u1ebd th\u1ea5y \u0111\u1ecba ch\u1ec9 email m\u1edbi (",(0,c.kt)("a",{parentName:"p",href:"mailto:new@example.com"},"new@example.com"),")."))),(0,c.kt)("ul",null,(0,c.kt)("li",{parentName:"ul"},(0,c.kt)("p",{parentName:"li"},"\u01afu \u0111i\u1ec3m: T\u0103ng t\xednh s\u1eb5n s\xe0ng (Availability) v\xe0 gi\u1ea3m \u0111\u1ed9 tr\u1ec5 ghi, v\xec h\u1ec7 th\u1ed1ng kh\xf4ng c\u1ea7n ch\u1edd t\u1ea5t c\u1ea3 c\xe1c replica \u0111\u1ed3ng b\u1ed9 ngay l\u1eadp t\u1ee9c. Th\xedch h\u1ee3p cho c\xe1c h\u1ec7 th\u1ed1ng \u01b0u ti\xean t\u1ed1c \u0111\u1ed9 v\xe0 kh\u1ea3 n\u0103ng ch\u1ecbu l\u1ed7i ph\xe2n v\xf9ng (v\xed d\u1ee5: m\u1ea1ng x\xe3 h\u1ed9i, catalog s\u1ea3n ph\u1ea9m).")),(0,c.kt)("li",{parentName:"ul"},(0,c.kt)("p",{parentName:"li"},"Nh\u01b0\u1ee3c \u0111i\u1ec3m: Ph\u1ee9c t\u1ea1p h\xf3a logic \u1ee9ng d\u1ee5ng v\xec ph\u1ea3i x\u1eed l\xfd kh\u1ea3 n\u0103ng \u0111\u1ecdc d\u1eef li\u1ec7u c\u0169 (stale data). Kh\xf4ng ph\xf9 h\u1ee3p cho c\xe1c nghi\u1ec7p v\u1ee5 y\xeau c\u1ea7u t\xednh nh\u1ea5t qu\xe1n t\u1ee9c th\xec."))),(0,c.kt)("p",null,"C\xe1ch kh\u1eafc ph\u1ee5c/gi\u1ea3m thi\u1ec3u nh\u01b0\u1ee3c \u0111i\u1ec3m:"),(0,c.kt)("ul",null,(0,c.kt)("li",{parentName:"ul"},(0,c.kt)("p",{parentName:"li"},"Read Your Writes: \u0110\u1ea3m b\u1ea3o r\u1eb1ng m\u1ed9t client lu\xf4n \u0111\u1ecdc \u0111\u01b0\u1ee3c d\u1eef li\u1ec7u m\xe0 ch\xednh n\xf3 v\u1eeba ghi (v\xed d\u1ee5: \u0111\u1ecdc t\u1eeb Primary sau khi ghi).")),(0,c.kt)("li",{parentName:"ul"},(0,c.kt)("p",{parentName:"li"},"Monotonic Reads: \u0110\u1ea3m b\u1ea3o r\u1eb1ng n\u1ebfu m\u1ed9t client \u0111\u1ecdc th\u1ea5y m\u1ed9t tr\u1ea1ng th\xe1i d\u1eef li\u1ec7u, c\xe1c l\u1ea7n \u0111\u1ecdc ti\u1ebfp theo c\u1ee7a client \u0111\xf3 s\u1ebd kh\xf4ng bao gi\u1edd th\u1ea5y tr\u1ea1ng th\xe1i c\u0169 h\u01a1n.")),(0,c.kt)("li",{parentName:"ul"},(0,c.kt)("p",{parentName:"li"},"\u0110i\u1ec1u ch\u1ec9nh Read/Write Concerns (MongoDB): S\u1eed d\u1ee5ng c\xe1c m\u1ee9c \u0111\u1ed9 \u0111\u1ea3m b\u1ea3o cao h\u01a1n. V\xed d\u1ee5:"),(0,c.kt)("ul",{parentName:"li"},(0,c.kt)("li",{parentName:"ul"},(0,c.kt)("p",{parentName:"li"},'Write Concern: {w: "majority"}: Y\xeau c\u1ea7u ghi ph\u1ea3i \u0111\u01b0\u1ee3c x\xe1c nh\u1eadn b\u1edfi \u0111a s\u1ed1 c\xe1c node trong replica set tr\u01b0\u1edbc khi tr\u1ea3 v\u1ec1 th\xe0nh c\xf4ng cho client.')),(0,c.kt)("li",{parentName:"ul"},(0,c.kt)("p",{parentName:"li"},'Read Concern: "majority": \u0110\u1ea3m b\u1ea3o d\u1eef li\u1ec7u \u0111\u1ecdc ra \u0111\xe3 \u0111\u01b0\u1ee3c x\xe1c nh\u1eadn b\u1edfi \u0111a s\u1ed1 node, tr\xe1nh \u0111\u1ecdc d\u1eef li\u1ec7u c\xf3 th\u1ec3 b\u1ecb rollback.')),(0,c.kt)("li",{parentName:"ul"},(0,c.kt)("p",{parentName:"li"},'Read Concern: "linearizable" (ch\u1ec9 \u0111\u1ecdc t\u1eeb Primary): \u0110\u1ea3m b\u1ea3o t\xednh nh\u1ea5t qu\xe1n m\u1ea1nh nh\u1ea5t, nh\u01b0ng \u1ea3nh h\u01b0\u1edfng hi\u1ec7u n\u0103ng.')),(0,c.kt)("li",{parentName:"ul"},(0,c.kt)("p",{parentName:"li"},'Read Preference: "primary": Lu\xf4n \u0111\u1ecdc t\u1eeb node Primary \u0111\u1ec3 c\xf3 d\u1eef li\u1ec7u m\u1edbi nh\u1ea5t (nh\u01b0ng t\u0103ng t\u1ea3i cho Primary).'))))),(0,c.kt)("h3",{id:"scaling-kh\u1ea3-n\u0103ng-m\u1edf-r\u1ed9ng"},"Scaling (Kh\u1ea3 n\u0103ng M\u1edf r\u1ed9ng)"),(0,c.kt)("p",null,"C\u1ea3 PostgreSQL v\xe0 MongoDB \u0111\u1ec1u cung c\u1ea5p c\xe1c c\u01a1 ch\u1ebf \u0111\u1ec3 m\u1edf r\u1ed9ng, nh\u01b0ng c\xe1ch ti\u1ebfp c\u1eadn kh\xe1c nhau."),(0,c.kt)("h4",{id:"postgresql-scaling"},"PostgreSQL Scaling:"),(0,c.kt)("p",null,"Vertical Scaling (Scale Up): T\u0103ng CPU, RAM, Disk cho server PostgreSQL. \u0110\u01a1n gi\u1ea3n nh\u01b0ng c\xf3 gi\u1edbi h\u1ea1n v\u1eadt l\xfd v\xe0 chi ph\xed."),(0,c.kt)("p",null,"Read Replicas (Streaming Replication): T\u1ea1o c\xe1c b\u1ea3n sao ch\u1ec9 \u0111\u1ecdc c\u1ee7a database ch\xednh. C\xe1c truy v\u1ea5n \u0111\u1ecdc c\xf3 th\u1ec3 \u0111\u01b0\u1ee3c chuy\u1ec3n h\u01b0\u1edbng \u0111\u1ebfn replicas, gi\u1ea3m t\u1ea3i cho server ch\xednh. \u0110\xe2y l\xe0 c\xe1ch ph\u1ed5 bi\u1ebfn nh\u1ea5t \u0111\u1ec3 scale read cho PostgreSQL. D\u1eef li\u1ec7u \u0111\u01b0\u1ee3c sao ch\xe9p g\u1ea7n nh\u01b0 real-time."),(0,c.kt)("p",null,"Logical Replication: Cho ph\xe9p sao ch\xe9p d\u1eef li\u1ec7u \u1edf m\u1ee9c \u0111\u1ed9 logic (theo t\u1eebng b\u1ea3ng ho\u1eb7c thay \u0111\u1ed5i) \u0111\u1ebfn c\xe1c server kh\xe1c, c\xf3 th\u1ec3 d\xf9ng cho nhi\u1ec1u m\u1ee5c \u0111\xedch h\u01a1n streaming replication (v\xed d\u1ee5: n\xe2ng c\u1ea5p phi\xean b\u1ea3n, sao ch\xe9p m\u1ed9t ph\u1ea7n d\u1eef li\u1ec7u)."),(0,c.kt)("p",null,"Sharding (Ph\xe2n m\u1ea3nh): Chia d\u1eef li\u1ec7u c\u1ee7a m\u1ed9t b\u1ea3ng l\u1edbn th\xe0nh nhi\u1ec1u ph\u1ea7n nh\u1ecf (shards) v\xe0 l\u01b0u tr\u1eef tr\xean nhi\u1ec1u server PostgreSQL \u0111\u1ed9c l\u1eadp. \u0110\xe2y l\xe0 c\xe1ch scale c\u1ea3 read v\xe0 write, nh\u01b0ng ph\u1ee9c t\u1ea1p h\u01a1n \u0111\xe1ng k\u1ec3 so v\u1edbi replication."),(0,c.kt)("p",null,"Th\xe1ch th\u1ee9c: Vi\u1ec7c chia d\u1eef li\u1ec7u (sharding key), \u0111\u1ecbnh tuy\u1ebfn truy v\u1ea5n (query routing), qu\u1ea3n l\xfd transaction qua nhi\u1ec1u shard, join d\u1eef li\u1ec7u gi\u1eefa c\xe1c shard r\u1ea5t ph\u1ee9c t\u1ea1p."),(0,c.kt)("p",null,"Gi\u1ea3i ph\xe1p: C\xf3 th\u1ec3 t\u1ef1 tri\u1ec3n khai logic sharding \u1edf t\u1ea7ng \u1ee9ng d\u1ee5ng ho\u1eb7c s\u1eed d\u1ee5ng c\xe1c extension/gi\u1ea3i ph\xe1p nh\u01b0:"),(0,c.kt)("ul",null,(0,c.kt)("li",{parentName:"ul"},(0,c.kt)("p",{parentName:"li"},"Citus Data: Extension m\xe3 ngu\u1ed3n m\u1edf (nay thu\u1ed9c Microsoft) bi\u1ebfn PostgreSQL th\xe0nh m\u1ed9t database ph\xe2n t\xe1n, t\u1ef1 \u0111\u1ed9ng h\xf3a vi\u1ec7c sharding v\xe0 \u0111\u1ecbnh tuy\u1ebfn truy v\u1ea5n.")),(0,c.kt)("li",{parentName:"ul"},(0,c.kt)("p",{parentName:"li"},"pg_partman: Extension gi\xfap qu\u1ea3n l\xfd partitioning (ph\xe2n v\xf9ng b\u1ea3ng - m\u1ed9t d\u1ea1ng sharding c\u1ee5c b\u1ed9 tr\xean m\u1ed9t server).")),(0,c.kt)("li",{parentName:"ul"},(0,c.kt)("p",{parentName:"li"},"C\xe1c gi\u1ea3i ph\xe1p middleware sharding kh\xe1c."))),(0,c.kt)("h4",{id:"mongodb-scaling"},"MongoDB Scaling:"),(0,c.kt)("p",null,"Vertical Scaling (Scale Up): T\u01b0\u01a1ng t\u1ef1 PostgreSQL, t\u0103ng t\xe0i nguy\xean cho server MongoDB."),(0,c.kt)("p",null,"Replica Sets (High Availability & Read Scaling): \u0110\xe2y l\xe0 n\u1ec1n t\u1ea3ng c\u1ee7a MongoDB. M\u1ed9t replica set g\u1ed3m 1 Primary v\xe0 nhi\u1ec1u Secondary."),(0,c.kt)("ul",null,(0,c.kt)("li",{parentName:"ul"},(0,c.kt)("p",{parentName:"li"},"High Availability: N\u1ebfu Primary g\u1eb7p s\u1ef1 c\u1ed1, c\xe1c Secondary s\u1ebd b\u1ea7u ch\u1ecdn ra m\u1ed9t Primary m\u1edbi m\u1ed9t c\xe1ch t\u1ef1 \u0111\u1ed9ng (automatic failover), \u0111\u1ea3m b\u1ea3o h\u1ec7 th\u1ed1ng v\u1eabn ho\u1ea1t \u0111\u1ed9ng.")),(0,c.kt)("li",{parentName:"ul"},(0,c.kt)("p",{parentName:"li"},"Read Scaling: Client c\xf3 th\u1ec3 c\u1ea5u h\xecnh \u0111\u1ec3 \u0111\u1ecdc t\u1eeb c\xe1c node Secondary (Read Preferences), ph\xe2n t\xe1n t\u1ea3i \u0111\u1ecdc."))),(0,c.kt)("p",null,"Sharding (Horizontal Scaling): MongoDB \u0111\u01b0\u1ee3c thi\u1ebft k\u1ebf v\u1edbi sharding l\xe0 t\xednh n\u0103ng c\u1ed1t l\xf5i \u0111\u1ec3 scale c\u1ea3 read v\xe0 write cho c\xe1c t\u1eadp d\u1eef li\u1ec7u c\u1ef1c l\u1edbn."),(0,c.kt)("p",null,"Ki\u1ebfn tr\xfac: M\u1ed9t sharded cluster bao g\u1ed3m:"),(0,c.kt)("ul",null,(0,c.kt)("li",{parentName:"ul"},(0,c.kt)("p",{parentName:"li"},"Shards: M\u1ed7i shard l\xe0 m\u1ed9t replica set ri\xeang, l\u01b0u tr\u1eef m\u1ed9t ph\u1ea7n d\u1eef li\u1ec7u.")),(0,c.kt)("li",{parentName:"ul"},(0,c.kt)("p",{parentName:"li"},"Mongos (Query Routers): C\xe1c ti\u1ebfn tr\xecnh \u0111\u1ecbnh tuy\u1ebfn truy v\u1ea5n t\u1eeb client \u0111\u1ebfn \u0111\xfang shard(s). Client k\u1ebft n\u1ed1i \u0111\u1ebfn Mongos thay v\xec shard tr\u1ef1c ti\u1ebfp.")),(0,c.kt)("li",{parentName:"ul"},(0,c.kt)("p",{parentName:"li"},"Config Servers: L\u01b0u tr\u1eef metadata v\u1ec1 cluster, bao g\u1ed3m th\xf4ng tin v\u1ec1 shard n\xe0o ch\u1ee9a d\u1eef li\u1ec7u n\xe0o (mapping d\u1ef1a tr\xean shard key)."))),(0,c.kt)("p",null,"Shard Key: Vi\u1ec7c ch\u1ecdn shard key l\xe0 c\u1ef1c k\u1ef3 quan tr\u1ecdng, \u1ea3nh h\u01b0\u1edfng \u0111\u1ebfn vi\u1ec7c ph\xe2n ph\u1ed1i d\u1eef li\u1ec7u \u0111\u1ed3ng \u0111\u1ec1u v\xe0 hi\u1ec7u n\u0103ng truy v\u1ea5n."),(0,c.kt)("p",null,"\u01afu \u0111i\u1ec3m: Kh\u1ea3 n\u0103ng m\u1edf r\u1ed9ng g\u1ea7n nh\u01b0 tuy\u1ebfn t\xednh cho c\u1ea3 read v\xe0 write, \u0111\u01b0\u1ee3c t\xedch h\u1ee3p s\u1eb5n v\xe0 qu\u1ea3n l\xfd b\u1edfi MongoDB."),(0,c.kt)("h3",{id:"performance-optimization-t\u1ed1i-\u01b0u-hi\u1ec7u-n\u0103ng"},"Performance Optimization (T\u1ed1i \u01b0u Hi\u1ec7u n\u0103ng)"),(0,c.kt)("p",null,"T\u1ed1i \u01b0u h\xf3a hi\u1ec7u n\u0103ng l\xe0 qu\xe1 tr\xecnh li\xean t\u1ee5c cho c\u1ea3 SQL v\xe0 NoSQL."),(0,c.kt)("h4",{id:"postgresql-sql-optimization"},"PostgreSQL (SQL) Optimization:"),(0,c.kt)("ul",null,(0,c.kt)("li",{parentName:"ul"},"Indexing: T\u1ea1o index tr\xean c\xe1c c\u1ed9t th\u01b0\u1eddng \u0111\u01b0\u1ee3c s\u1eed d\u1ee5ng trong m\u1ec7nh \u0111\u1ec1 WHERE, JOIN, ORDER BY.")),(0,c.kt)("p",null,"V\xed d\u1ee5: ",(0,c.kt)("inlineCode",{parentName:"p"},"CREATE INDEX idx_users_email ON users (email);")),(0,c.kt)("p",null,"S\u1eed d\u1ee5ng ",(0,c.kt)("inlineCode",{parentName:"p"},"EXPLAIN ANALYZE <c\xe2u l\u1ec7nh SQL>")," \u0111\u1ec3 xem k\u1ebf ho\u1ea1ch th\u1ef1c thi v\xe0 x\xe1c \u0111\u1ecbnh xem index c\xf3 \u0111\u01b0\u1ee3c s\u1eed d\u1ee5ng hay kh\xf4ng, c\u0169ng nh\u01b0 c\xe1c \u0111i\u1ec3m ch\u1eadm kh\xe1c."),(0,c.kt)("p",null,"C\xe1c lo\u1ea1i index kh\xe1c nhau: B-tree (m\u1eb7c \u0111\u1ecbnh, t\u1ed1t cho =, >, <, BETWEEN, IN, LIKE prefix), Hash (ch\u1ec9 t\u1ed1t cho =), GiST, GIN (t\u1ed1t cho full-text search, array, jsonb), BRIN (t\u1ed1t cho d\u1eef li\u1ec7u l\u1edbn, c\xf3 t\u01b0\u01a1ng quan v\u1eadt l\xfd)."),(0,c.kt)("ul",null,(0,c.kt)("li",{parentName:"ul"},"Query Optimization:")),(0,c.kt)("p",null,"Vi\u1ebft truy v\u1ea5n hi\u1ec7u qu\u1ea3: Tr\xe1nh SELECT ","*",", ch\u1ec9 ch\u1ecdn c\xe1c c\u1ed9t c\u1ea7n thi\u1ebft."),(0,c.kt)("p",null,"S\u1eed d\u1ee5ng JOIN hi\u1ec7u qu\u1ea3, \u0111\u1ea3m b\u1ea3o c\xf3 index tr\xean c\xe1c c\u1ed9t join."),(0,c.kt)("p",null,"H\u1ea1n ch\u1ebf s\u1eed d\u1ee5ng subquery ho\u1eb7c CTE (Common Table Expressions) n\u1ebfu c\xf3 th\u1ec3 vi\u1ebft l\u1ea1i b\u1eb1ng JOIN."),(0,c.kt)("p",null,"S\u1eed d\u1ee5ng LIMIT v\xe0 OFFSET c\u1ea9n th\u1eadn (offset l\u1edbn c\xf3 th\u1ec3 ch\u1eadm, c\xe2n nh\u1eafc keyset pagination)."),(0,c.kt)("ul",null,(0,c.kt)("li",{parentName:"ul"},(0,c.kt)("p",{parentName:"li"},"Connection Pooling: S\u1eed d\u1ee5ng connection pool (nh\u01b0 PgBouncer ho\u1eb7c pool t\xedch h\u1ee3p trong framework) \u0111\u1ec3 t\xe1i s\u1eed d\u1ee5ng k\u1ebft n\u1ed1i database, tr\xe1nh chi ph\xed t\u1ea1o k\u1ebft n\u1ed1i m\u1edbi li\xean t\u1ee5c.")),(0,c.kt)("li",{parentName:"ul"},(0,c.kt)("p",{parentName:"li"},"Database Tuning: \u0110i\u1ec1u ch\u1ec9nh c\xe1c tham s\u1ed1 c\u1ea5u h\xecnh c\u1ee7a PostgreSQL (trong postgresql.conf) nh\u01b0 shared_buffers, work_mem, effective_cache_size d\u1ef1a tr\xean t\xe0i nguy\xean h\u1ec7 th\u1ed1ng.")),(0,c.kt)("li",{parentName:"ul"},(0,c.kt)("p",{parentName:"li"},"Vacuuming & Analyzing: Ch\u1ea1y VACUUM (\u0111\u1ec3 thu h\u1ed3i kh\xf4ng gian t\u1eeb c\xe1c h\xe0ng \u0111\xe3 x\xf3a/c\u1eadp nh\u1eadt) v\xe0 ANALYZE (\u0111\u1ec3 c\u1eadp nh\u1eadt th\u1ed1ng k\xea cho query planner) th\u01b0\u1eddng xuy\xean. Autovacuum th\u01b0\u1eddng \u0111\u01b0\u1ee3c b\u1eadt m\u1eb7c \u0111\u1ecbnh.")),(0,c.kt)("li",{parentName:"ul"},(0,c.kt)("p",{parentName:"li"},"Partitioning: Chia c\xe1c b\u1ea3ng l\u1edbn th\xe0nh c\xe1c partition nh\u1ecf h\u01a1n d\u1ef1a tr\xean m\u1ed9t key (v\xed d\u1ee5: theo ng\xe0y, theo v\xf9ng) \u0111\u1ec3 c\u1ea3i thi\u1ec7n hi\u1ec7u n\u0103ng qu\u1ea3n l\xfd v\xe0 truy v\u1ea5n."))),(0,c.kt)("h4",{id:"mongodb-nosql-optimization"},"MongoDB (NoSQL) Optimization:"),(0,c.kt)("ul",null,(0,c.kt)("li",{parentName:"ul"},(0,c.kt)("p",{parentName:"li"},"Data Modeling: \u0110\xe2y l\xe0 y\u1ebfu t\u1ed1 quan tr\u1ecdng nh\u1ea5t. Thi\u1ebft k\u1ebf schema d\u1ef1a tr\xean c\xe1ch \u1ee9ng d\u1ee5ng truy c\u1eadp d\u1eef li\u1ec7u (access patterns)."),(0,c.kt)("ul",{parentName:"li"},(0,c.kt)("li",{parentName:"ul"},(0,c.kt)("p",{parentName:"li"},'Embedding (Nh\xfang): Nh\xfang c\xe1c d\u1eef li\u1ec7u li\xean quan v\xe0o c\xf9ng m\u1ed9t document n\u1ebfu ch\xfang th\u01b0\u1eddng xuy\xean \u0111\u01b0\u1ee3c truy c\u1eadp c\xf9ng nhau v\xe0 m\u1ed1i quan h\u1ec7 l\xe0 "one-to-few". Gi\u1ea3m thi\u1ec3u s\u1ed1 l\u01b0\u1ee3ng truy v\u1ea5n.'),(0,c.kt)("pre",{parentName:"li"},(0,c.kt)("code",{parentName:"pre",className:"language-json"},'// V\xed d\u1ee5: Nh\xfang \u0111\u1ecba ch\u1ec9 v\xe0o user document\n{\n  "_id": 1,\n  "name": "Alice",\n  "addresses": [\n    { "street": "123 Main St", "city": "Anytown" },\n    { "street": "456 Oak Ave", "city": "Otherville" }\n  ]\n}\n'))),(0,c.kt)("li",{parentName:"ul"},(0,c.kt)("p",{parentName:"li"},'Referencing (Tham chi\u1ebfu): S\u1eed d\u1ee5ng ID \u0111\u1ec3 tham chi\u1ebfu \u0111\u1ebfn document kh\xe1c n\u1ebfu m\u1ed1i quan h\u1ec7 l\xe0 "one-to-many" ho\u1eb7c "many-to-many", ho\u1eb7c n\u1ebfu d\u1eef li\u1ec7u \u0111\u01b0\u1ee3c truy c\u1eadp \u0111\u1ed9c l\u1eadp. Y\xeau c\u1ea7u truy v\u1ea5n $lookup (t\u01b0\u01a1ng t\u1ef1 JOIN) ho\u1eb7c nhi\u1ec1u truy v\u1ea5n t\u1eeb \u1ee9ng d\u1ee5ng.'),(0,c.kt)("pre",{parentName:"li"},(0,c.kt)("code",{parentName:"pre",className:"language-json"},'// V\xed d\u1ee5: Tham chi\u1ebfu \u0111\u1ebfn orders t\u1eeb user document\n// User document:\n{ "_id": 1, "name": "Bob" }\n// Order documents:\n{ "_id": 101, "userId": 1, "item": "Laptop" }\n{ "_id": 102, "userId": 1, "item": "Mouse" }\n'))))),(0,c.kt)("li",{parentName:"ul"},(0,c.kt)("p",{parentName:"li"},"Indexing: T\u01b0\u01a1ng t\u1ef1 SQL, t\u1ea1o index tr\xean c\xe1c tr\u01b0\u1eddng d\xf9ng \u0111\u1ec3 truy v\u1ea5n, s\u1eafp x\u1ebfp."),(0,c.kt)("p",{parentName:"li"},"V\xed d\u1ee5: ",(0,c.kt)("inlineCode",{parentName:"p"},"db.users.createIndex({ email: 1 }) (1: ascending, -1: descending)")),(0,c.kt)("ul",{parentName:"li"},(0,c.kt)("li",{parentName:"ul"},(0,c.kt)("p",{parentName:"li"},"Compound Indexes: T\u1ea1o index tr\xean nhi\u1ec1u tr\u01b0\u1eddng: db.users.createIndex({ city: 1, signup_date: -1 }) (th\u1ee9 t\u1ef1 tr\u01b0\u1eddng quan tr\u1ecdng).")),(0,c.kt)("li",{parentName:"ul"},(0,c.kt)("p",{parentName:"li"},"S\u1eed d\u1ee5ng explain() \u0111\u1ec3 ph\xe2n t\xedch hi\u1ec7u n\u0103ng truy v\u1ea5n: ",(0,c.kt)("inlineCode",{parentName:"p"},'db.users.find({ email: "test@example.com" }).explain("executionStats")'),".")),(0,c.kt)("li",{parentName:"ul"},(0,c.kt)("p",{parentName:"li"},'\u0110\u1ea3m b\u1ea3o index "cover" \u0111\u01b0\u1ee3c truy v\u1ea5n (covered query) n\u1ebfu c\xf3 th\u1ec3 - t\u1ee9c l\xe0 index ch\u1ee9a \u0111\u1ee7 th\xf4ng tin \u0111\u1ec3 tr\u1ea3 l\u1eddi truy v\u1ea5n m\xe0 kh\xf4ng c\u1ea7n \u0111\u1ecdc document th\u1ef1c t\u1ebf.')))),(0,c.kt)("li",{parentName:"ul"},(0,c.kt)("p",{parentName:"li"},'Sharding Strategy: N\u1ebfu s\u1eed d\u1ee5ng sharding, ch\u1ecdn shard key ph\xf9 h\u1ee3p \u0111\u1ec3 ph\xe2n ph\u1ed1i d\u1eef li\u1ec7u \u0111\u1ec1u v\xe0 tr\xe1nh "hot shards" (shard b\u1ecb qu\xe1 t\u1ea3i).')),(0,c.kt)("li",{parentName:"ul"},(0,c.kt)("p",{parentName:"li"},"Write Concerns & Read Preferences: C\xe2n b\u1eb1ng gi\u1eefa consistency v\xe0 performance. M\u1ee9c concern cao h\u01a1n \u0111\u1ea3m b\u1ea3o an to\xe0n d\u1eef li\u1ec7u h\u01a1n nh\u01b0ng c\xf3 th\u1ec3 ch\u1eadm h\u01a1n. \u0110\u1ecdc t\u1eeb secondary gi\u1ea3m t\u1ea3i cho primary nh\u01b0ng c\xf3 th\u1ec3 \u0111\u1ecdc d\u1eef li\u1ec7u c\u0169.")),(0,c.kt)("li",{parentName:"ul"},(0,c.kt)("p",{parentName:"li"},'Projection: Ch\u1ec9 l\u1ea5y c\xe1c tr\u01b0\u1eddng c\u1ea7n thi\u1ebft trong truy v\u1ea5n: db.users.find({ city: "Anytown" }, { name: 1, email: 1, ',"_","id: 0 })."))),(0,c.kt)("h2",{id:"acid-v\xe0-base"},"ACID v\xe0 BASE"),(0,c.kt)("p",null,"\u0110\xe2y l\xe0 hai m\xf4 h\xecnh m\xf4 t\u1ea3 c\xe1c thu\u1ed9c t\xednh giao d\u1ecbch (transaction properties) c\u1ee7a c\u01a1 s\u1edf d\u1eef li\u1ec7u."),(0,c.kt)("h3",{id:"acid-atomicity-consistency-isolation-durability"},"ACID (Atomicity, Consistency, Isolation, Durability):"),(0,c.kt)("p",null,"M\xf4 h\xecnh truy\u1ec1n th\u1ed1ng, th\u01b0\u1eddng g\u1eafn li\u1ec1n v\u1edbi RDBMS nh\u01b0 PostgreSQL."),(0,c.kt)("p",null,(0,c.kt)("strong",{parentName:"p"},"A - Atomicity (T\xednh nguy\xean t\u1eed)"),": M\u1ed9t giao d\u1ecbch (transaction) l\xe0 m\u1ed9t \u0111\u01a1n v\u1ecb c\xf4ng vi\u1ec7c kh\xf4ng th\u1ec3 chia c\u1eaft. Ho\u1eb7c t\u1ea5t c\u1ea3 c\xe1c thao t\xe1c trong giao d\u1ecbch \u0111\u1ec1u th\xe0nh c\xf4ng (COMMIT), ho\u1eb7c n\u1ebfu c\xf3 b\u1ea5t k\u1ef3 l\u1ed7i n\xe0o, t\u1ea5t c\u1ea3 c\xe1c thay \u0111\u1ed5i s\u1ebd b\u1ecb h\u1ee7y b\u1ecf (ROLLBACK), \u0111\u01b0a h\u1ec7 th\u1ed1ng v\u1ec1 tr\u1ea1ng th\xe1i tr\u01b0\u1edbc khi giao d\u1ecbch b\u1eaft \u0111\u1ea7u."),(0,c.kt)("p",null,"V\xed d\u1ee5: Giao d\u1ecbch chuy\u1ec3n ti\u1ec1n: Ho\u1eb7c c\u1ea3 vi\u1ec7c tr\u1eeb ti\u1ec1n \u1edf t\xe0i kho\u1ea3n A v\xe0 c\u1ed9ng ti\u1ec1n \u1edf t\xe0i kho\u1ea3n B \u0111\u1ec1u x\u1ea3y ra, ho\u1eb7c kh\xf4ng c\xf3 g\xec x\u1ea3y ra c\u1ea3."),(0,c.kt)("p",null,(0,c.kt)("strong",{parentName:"p"},"C - Consistency (T\xednh nh\u1ea5t qu\xe1n)"),": \u0110\u1ea3m b\u1ea3o r\u1eb1ng m\u1ed9t giao d\u1ecbch ch\u1ec9 chuy\u1ec3n database t\u1eeb m\u1ed9t tr\u1ea1ng th\xe1i h\u1ee3p l\u1ec7 n\xe0y sang m\u1ed9t tr\u1ea1ng th\xe1i h\u1ee3p l\u1ec7 kh\xe1c. M\u1ecdi r\xe0ng bu\u1ed9c d\u1eef li\u1ec7u (constraints) ph\u1ea3i \u0111\u01b0\u1ee3c th\u1ecfa m\xe3n sau khi giao d\u1ecbch k\u1ebft th\xfac. L\u01b0u \xfd: Ch\u1eef C n\xe0y kh\xe1c v\u1edbi C trong CAP Theorem, n\xf3 n\xf3i v\u1ec1 t\xednh nh\u1ea5t qu\xe1n c\u1ee7a d\u1eef li\u1ec7u theo c\xe1c quy t\u1eafc nghi\u1ec7p v\u1ee5/r\xe0ng bu\u1ed9c \u0111\xe3 \u0111\u1ecbnh ngh\u0129a."),(0,c.kt)("p",null,"V\xed d\u1ee5: S\u1ed1 d\u01b0 t\xe0i kho\u1ea3n kh\xf4ng th\u1ec3 \xe2m (n\u1ebfu c\xf3 r\xe0ng bu\u1ed9c CHECK), t\u1ed5ng s\u1ed1 ti\u1ec1n trong h\u1ec7 th\u1ed1ng kh\xf4ng \u0111\u1ed5i sau giao d\u1ecbch chuy\u1ec3n ti\u1ec1n."),(0,c.kt)("p",null,(0,c.kt)("strong",{parentName:"p"},"I - Isolation (T\xednh c\xf4 l\u1eadp)"),": \u0110\u1ea3m b\u1ea3o r\u1eb1ng c\xe1c giao d\u1ecbch \u0111\u1ed3ng th\u1eddi kh\xf4ng can thi\u1ec7p l\u1eabn nhau. K\u1ebft qu\u1ea3 c\u1ee7a vi\u1ec7c th\u1ef1c thi nhi\u1ec1u giao d\u1ecbch \u0111\u1ed3ng th\u1eddi ph\u1ea3i gi\u1ed1ng nh\u01b0 khi ch\xfang \u0111\u01b0\u1ee3c th\u1ef1c thi tu\u1ea7n t\u1ef1 theo m\u1ed9t th\u1ee9 t\u1ef1 n\xe0o \u0111\xf3. C\xe1c m\u1ee9c \u0111\u1ed9 c\xf4 l\u1eadp (Isolation Levels) kh\xe1c nhau (Read Uncommitted, Read Committed, Repeatable Read, Serializable) cung c\u1ea5p c\xe1c m\u1ee9c \u0111\u1ed9 b\u1ea3o v\u1ec7 kh\xe1c nhau ch\u1ed1ng l\u1ea1i c\xe1c hi\u1ec7n t\u01b0\u1ee3ng nh\u01b0 Dirty Read, Non-Repeatable Read, Phantom Read."),(0,c.kt)("p",null,'V\xed d\u1ee5: Khi giao d\u1ecbch chuy\u1ec3n ti\u1ec1n \u0111ang di\u1ec5n ra, m\u1ed9t giao d\u1ecbch kh\xe1c t\xednh t\u1ed5ng s\u1ed1 d\u01b0 to\xe0n b\u1ed9 h\u1ec7 th\u1ed1ng s\u1ebd kh\xf4ng th\u1ea5y tr\u1ea1ng th\xe1i "n\u1eeda v\u1eddi" (ti\u1ec1n \u0111\xe3 tr\u1eeb \u1edf A nh\u01b0ng ch\u01b0a c\u1ed9ng v\xe0o B).'),(0,c.kt)("p",null,(0,c.kt)("strong",{parentName:"p"},"D - Durability (T\xednh b\u1ec1n v\u1eefng)"),": M\u1ed9t khi giao d\u1ecbch \u0111\xe3 \u0111\u01b0\u1ee3c COMMIT th\xe0nh c\xf4ng, c\xe1c thay \u0111\u1ed5i c\u1ee7a n\xf3 ph\u1ea3i \u0111\u01b0\u1ee3c l\u01b0u tr\u1eef v\u0129nh vi\u1ec5n v\xe0 kh\xf4ng b\u1ecb m\u1ea5t ngay c\u1ea3 khi h\u1ec7 th\u1ed1ng g\u1eb7p s\u1ef1 c\u1ed1 (m\u1ea5t \u0111i\u1ec7n, crash). Th\u01b0\u1eddng \u0111\u1ea1t \u0111\u01b0\u1ee3c b\u1eb1ng c\xe1ch ghi v\xe0o c\xe1c b\u1ea3n ghi transaction log (Write-Ahead Logging - WAL) tr\u01b0\u1edbc khi ghi v\xe0o file d\u1eef li\u1ec7u ch\xednh."),(0,c.kt)("p",null,"V\xed d\u1ee5: Sau khi b\u1ea1n nh\u1eadn th\xf4ng b\xe1o chuy\u1ec3n ti\u1ec1n th\xe0nh c\xf4ng, s\u1ed1 ti\u1ec1n \u0111\xf3 ph\u1ea3i \u1edf trong t\xe0i kho\u1ea3n c\u1ee7a b\u1ea1n ngay c\u1ea3 khi server ng\xe2n h\xe0ng kh\u1edfi \u0111\u1ed9ng l\u1ea1i."),(0,c.kt)("h3",{id:"base-basically-available-soft-state-eventually-consistent"},"BASE (Basically Available, Soft state, Eventually consistent):"),(0,c.kt)("p",null,"M\xf4 h\xecnh th\u01b0\u1eddng th\u1ea5y trong c\xe1c h\u1ec7 th\u1ed1ng NoSQL ph\xe2n t\xe1n, \u01b0u ti\xean t\xednh s\u1eb5n s\xe0ng h\u01a1n t\xednh nh\u1ea5t qu\xe1n m\u1ea1nh m\u1ebd."),(0,c.kt)("p",null,(0,c.kt)("strong",{parentName:"p"},"BA - Basically Available (C\u01a1 b\u1ea3n l\xe0 S\u1eb5n s\xe0ng)"),": H\u1ec7 th\u1ed1ng \u0111\u1ea3m b\u1ea3o t\xednh s\u1eb5n s\xe0ng (Availability theo ngh\u0129a c\u1ee7a CAP Theorem). N\xf3 s\u1ebd ph\u1ea3n h\u1ed3i m\u1ecdi y\xeau c\u1ea7u (d\xf9 c\xf3 th\u1ec3 tr\u1ea3 v\u1ec1 d\u1eef li\u1ec7u c\u0169 ho\u1eb7c l\u1ed7i kh\xf4ng nh\u1ea5t qu\xe1n)."),(0,c.kt)("p",null,"V\xed d\u1ee5: D\xf9 m\u1ed9t node trong c\u1ee5m Cassandra b\u1ecb l\u1ed7i, c\xe1c node kh\xe1c v\u1eabn c\u1ed1 g\u1eafng ph\u1ee5c v\u1ee5 y\xeau c\u1ea7u \u0111\u1ecdc/ghi."),(0,c.kt)("p",null,(0,c.kt)("strong",{parentName:"p"},"S - Soft state (Tr\u1ea1ng th\xe1i M\u1ec1m)"),': Tr\u1ea1ng th\xe1i c\u1ee7a h\u1ec7 th\u1ed1ng c\xf3 th\u1ec3 thay \u0111\u1ed5i theo th\u1eddi gian, ngay c\u1ea3 khi kh\xf4ng c\xf3 input m\u1edbi, do t\xednh nh\u1ea5t qu\xe1n cu\u1ed1i c\xf9ng. D\u1eef li\u1ec7u c\xf3 th\u1ec3 "t\u1ef1" c\u1eadp nh\u1eadt khi c\xe1c b\u1ea3n sao \u0111\u1ed3ng b\u1ed9 v\u1edbi nhau.'),(0,c.kt)("p",null,'V\xed d\u1ee5: B\u1ea1n v\u1eeba c\u1eadp nh\u1eadt avatar, tr\u1ea1ng th\xe1i avatar tr\xean c\xe1c server kh\xe1c nhau \u0111ang trong qu\xe1 tr\xecnh "m\u1ec1m" \u0111\u1ec3 ti\u1ebfn t\u1edbi tr\u1ea1ng th\xe1i m\u1edbi nh\u1ea5t.'),(0,c.kt)("p",null,(0,c.kt)("strong",{parentName:"p"},"E - Eventually consistent (Nh\u1ea5t qu\xe1n Cu\u1ed1i c\xf9ng)"),": Nh\u01b0 \u0111\xe3 gi\u1ea3i th\xedch \u1edf ph\u1ea7n tr\u01b0\u1edbc, h\u1ec7 th\u1ed1ng s\u1ebd \u0111\u1ea1t \u0111\u1ebfn tr\u1ea1ng th\xe1i nh\u1ea5t qu\xe1n sau m\u1ed9t kho\u1ea3ng th\u1eddi gian n\u1ebfu kh\xf4ng c\xf3 th\xeam c\u1eadp nh\u1eadt n\xe0o."),(0,c.kt)("p",null,"V\xed d\u1ee5: Sau v\xe0i gi\xe2y/ph\xfat, avatar m\u1edbi c\u1ee7a b\u1ea1n s\u1ebd hi\u1ec3n th\u1ecb \u0111\u1ed3ng nh\u1ea5t tr\xean t\u1ea5t c\u1ea3 c\xe1c thi\u1ebft b\u1ecb v\xe0 cho t\u1ea5t c\u1ea3 b\u1ea1n b\xe8."))}p.isMDXComponent=!0}}]);
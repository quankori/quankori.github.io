"use strict";(self.webpackChunk=self.webpackChunk||[]).push([[6109],{3905:(e,t,a)=>{a.d(t,{Zo:()=>u,kt:()=>c});var n=a(7294);function l(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function i(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,n)}return a}function r(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?i(Object(a),!0).forEach((function(t){l(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):i(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function o(e,t){if(null==e)return{};var a,n,l=function(e,t){if(null==e)return{};var a,n,l={},i=Object.keys(e);for(n=0;n<i.length;n++)a=i[n],t.indexOf(a)>=0||(l[a]=e[a]);return l}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(n=0;n<i.length;n++)a=i[n],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(l[a]=e[a])}return l}var p=n.createContext({}),s=function(e){var t=n.useContext(p),a=t;return e&&(a="function"==typeof e?e(t):r(r({},t),e)),a},u=function(e){var t=s(e.components);return n.createElement(p.Provider,{value:t},e.children)},m="mdxType",g={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},k=n.forwardRef((function(e,t){var a=e.components,l=e.mdxType,i=e.originalType,p=e.parentName,u=o(e,["components","mdxType","originalType","parentName"]),m=s(a),k=l,c=m["".concat(p,".").concat(k)]||m[k]||g[k]||i;return a?n.createElement(c,r(r({ref:t},u),{},{components:a})):n.createElement(c,r({ref:t},u))}));function c(e,t){var a=arguments,l=t&&t.mdxType;if("string"==typeof e||l){var i=a.length,r=new Array(i);r[0]=k;var o={};for(var p in t)hasOwnProperty.call(t,p)&&(o[p]=t[p]);o.originalType=e,o[m]="string"==typeof e?e:l,r[1]=o;for(var s=2;s<i;s++)r[s]=a[s];return n.createElement.apply(null,r)}return n.createElement.apply(null,a)}k.displayName="MDXCreateElement"},2777:(e,t,a)=>{a.r(t),a.d(t,{assets:()=>p,contentTitle:()=>r,default:()=>g,frontMatter:()=>i,metadata:()=>o,toc:()=>s});var n=a(7462),l=(a(7294),a(3905));const i={title:"Scaling Transaction"},r=void 0,o={unversionedId:"programming/database/scaling",id:"programming/database/scaling",title:"Scaling Transaction",description:"Scaling Databases: SQL and MongoDB",source:"@site/docs/programming/database/scaling.md",sourceDirName:"programming/database",slug:"/programming/database/scaling",permalink:"/docs/programming/database/scaling",draft:!1,tags:[],version:"current",frontMatter:{title:"Scaling Transaction"},sidebar:"programming",previous:{title:"Redis",permalink:"/docs/programming/database/redis"},next:{title:"Types of Data",permalink:"/docs/programming/database/types-data"}},p={},s=[{value:"Scaling Databases: SQL and MongoDB",id:"scaling-databases-sql-and-mongodb",level:2},{value:"SQL Databases",id:"sql-databases",level:2},{value:"1. Vertical Scaling (Scaling Up)",id:"1-vertical-scaling-scaling-up",level:3},{value:"2. Horizontal Scaling (Scaling Out)",id:"2-horizontal-scaling-scaling-out",level:3},{value:"3. Replication",id:"3-replication",level:3},{value:"4. Sharding (Partitioning)",id:"4-sharding-partitioning",level:3},{value:"5. Caching",id:"5-caching",level:3},{value:"6. Load Balancing",id:"6-load-balancing",level:3},{value:"7. Database Optimization",id:"7-database-optimization",level:3},{value:"MongoDB",id:"mongodb",level:2},{value:"1. Vertical Scaling (Scaling Up)",id:"1-vertical-scaling-scaling-up-1",level:3},{value:"2. Horizontal Scaling (Scaling Out)",id:"2-horizontal-scaling-scaling-out-1",level:3},{value:"3. Replication",id:"3-replication-1",level:3},{value:"4. Sharding",id:"4-sharding",level:3},{value:"5. Caching",id:"5-caching-1",level:3},{value:"6. Load Balancing",id:"6-load-balancing-1",level:3},{value:"7. Database Optimization",id:"7-database-optimization-1",level:3},{value:"Summary",id:"summary",level:2}],u={toc:s},m="wrapper";function g(e){let{components:t,...a}=e;return(0,l.kt)(m,(0,n.Z)({},u,a,{components:t,mdxType:"MDXLayout"}),(0,l.kt)("h2",{id:"scaling-databases-sql-and-mongodb"},"Scaling Databases: SQL and MongoDB"),(0,l.kt)("p",null,"Scaling databases involves strategies to handle increased load and ensure high availability. Both SQL and NoSQL (MongoDB) databases offer various scaling options. Here\u2019s a comprehensive overview of the scaling options for both types of databases:"),(0,l.kt)("h2",{id:"sql-databases"},"SQL Databases"),(0,l.kt)("ol",null,(0,l.kt)("li",{parentName:"ol"},(0,l.kt)("strong",{parentName:"li"},"Vertical Scaling (Scaling Up)")),(0,l.kt)("li",{parentName:"ol"},(0,l.kt)("strong",{parentName:"li"},"Horizontal Scaling (Scaling Out)")),(0,l.kt)("li",{parentName:"ol"},(0,l.kt)("strong",{parentName:"li"},"Replication")),(0,l.kt)("li",{parentName:"ol"},(0,l.kt)("strong",{parentName:"li"},"Sharding (Partitioning)")),(0,l.kt)("li",{parentName:"ol"},(0,l.kt)("strong",{parentName:"li"},"Caching")),(0,l.kt)("li",{parentName:"ol"},(0,l.kt)("strong",{parentName:"li"},"Load Balancing")),(0,l.kt)("li",{parentName:"ol"},(0,l.kt)("strong",{parentName:"li"},"Database Optimization"))),(0,l.kt)("h3",{id:"1-vertical-scaling-scaling-up"},"1. Vertical Scaling (Scaling Up)"),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"Definition"),":"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"Increasing the resources of a single database server (e.g., CPU, RAM, disk space).")),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"Pros"),":"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"Simpler to implement."),(0,l.kt)("li",{parentName:"ul"},"No changes required in the application.")),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"Cons"),":"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"Hardware limitations."),(0,l.kt)("li",{parentName:"ul"},"Single point of failure.")),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"Example"),":"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"Upgrading from a server with 8 GB RAM to one with 32 GB RAM.")),(0,l.kt)("h3",{id:"2-horizontal-scaling-scaling-out"},"2. Horizontal Scaling (Scaling Out)"),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"Definition"),":"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"Adding more database servers to distribute the load.")),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"Pros"),":"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"Can handle more load than vertical scaling."),(0,l.kt)("li",{parentName:"ul"},"High availability and redundancy.")),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"Cons"),":"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"More complex to implement."),(0,l.kt)("li",{parentName:"ul"},"Requires changes in the application to handle distributed data.")),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"Example"),":"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"Adding more read replicas in MySQL.")),(0,l.kt)("h3",{id:"3-replication"},"3. Replication"),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"Definition"),":"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"Copying data from one database server (primary) to one or more servers (replicas).")),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"Types"),":"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"Master-Slave Replication"),": One master server, multiple slave servers."),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"Master-Master Replication"),": Multiple masters, all can accept writes.")),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"Pros"),":"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"Improved read performance."),(0,l.kt)("li",{parentName:"ul"},"High availability.")),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"Cons"),":"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"Potential consistency issues."),(0,l.kt)("li",{parentName:"ul"},"Increased complexity.")),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"Example")," (MySQL):"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-sql"},"-- Master configuration\n[mysqld]\nlog-bin=mysql-bin\nserver-id=1\n\n-- Slave configuration\n[mysqld]\nserver-id=2\nreplicate-do-db=exampledb\n")),(0,l.kt)("h3",{id:"4-sharding-partitioning"},"4. Sharding (Partitioning)"),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"Definition"),":"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"Splitting data into smaller, more manageable pieces (shards) and distributing them across multiple servers.")),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"Pros"),":"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"Can handle very large datasets."),(0,l.kt)("li",{parentName:"ul"},"Improved performance and manageability.")),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"Cons"),":"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"Complex to implement."),(0,l.kt)("li",{parentName:"ul"},"Requires changes in the application.")),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"Example")," (PostgreSQL):"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"Using table partitioning to shard data by range or list.")),(0,l.kt)("h3",{id:"5-caching"},"5. Caching"),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"Definition"),":"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"Storing frequently accessed data in memory to reduce load on the database.")),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"Pros"),":"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"Significant performance improvement."),(0,l.kt)("li",{parentName:"ul"},"Reduced database load.")),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"Cons"),":"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"Potential cache consistency issues.")),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"Example"),":"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"Using Redis or Memcached for caching query results.")),(0,l.kt)("h3",{id:"6-load-balancing"},"6. Load Balancing"),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"Definition"),":"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"Distributing database queries across multiple servers to balance the load.")),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"Pros"),":"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"Improved performance."),(0,l.kt)("li",{parentName:"ul"},"High availability.")),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"Cons"),":"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"Requires a load balancer."),(0,l.kt)("li",{parentName:"ul"},"Potential for uneven load distribution.")),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"Example"),":"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"Using HAProxy or Pgpool-II for PostgreSQL.")),(0,l.kt)("h3",{id:"7-database-optimization"},"7. Database Optimization"),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"Definition"),":"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"Optimizing database schema, queries, and indexes for better performance.")),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"Pros"),":"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"Improved performance without additional hardware.")),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"Cons"),":"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"Requires deep knowledge of the database and application.")),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"Example"),":"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"Optimizing SQL queries using EXPLAIN.")),(0,l.kt)("h2",{id:"mongodb"},"MongoDB"),(0,l.kt)("ol",null,(0,l.kt)("li",{parentName:"ol"},(0,l.kt)("strong",{parentName:"li"},"Vertical Scaling (Scaling Up)")),(0,l.kt)("li",{parentName:"ol"},(0,l.kt)("strong",{parentName:"li"},"Horizontal Scaling (Scaling Out)")),(0,l.kt)("li",{parentName:"ol"},(0,l.kt)("strong",{parentName:"li"},"Replication")),(0,l.kt)("li",{parentName:"ol"},(0,l.kt)("strong",{parentName:"li"},"Sharding")),(0,l.kt)("li",{parentName:"ol"},(0,l.kt)("strong",{parentName:"li"},"Caching")),(0,l.kt)("li",{parentName:"ol"},(0,l.kt)("strong",{parentName:"li"},"Load Balancing")),(0,l.kt)("li",{parentName:"ol"},(0,l.kt)("strong",{parentName:"li"},"Database Optimization"))),(0,l.kt)("h3",{id:"1-vertical-scaling-scaling-up-1"},"1. Vertical Scaling (Scaling Up)"),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"Definition"),":"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"Increasing the resources of a single MongoDB server.")),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"Pros"),":"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"Simpler to implement."),(0,l.kt)("li",{parentName:"ul"},"No changes required in the application.")),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"Cons"),":"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"Hardware limitations."),(0,l.kt)("li",{parentName:"ul"},"Single point of failure.")),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"Example"),":"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"Upgrading the hardware of a MongoDB instance to more powerful resources.")),(0,l.kt)("h3",{id:"2-horizontal-scaling-scaling-out-1"},"2. Horizontal Scaling (Scaling Out)"),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"Definition"),":"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"Adding more MongoDB servers to handle increased load.")),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"Pros"),":"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"Better scalability."),(0,l.kt)("li",{parentName:"ul"},"High availability.")),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"Cons"),":"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"More complex to implement."),(0,l.kt)("li",{parentName:"ul"},"Requires data distribution strategy.")),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"Example"),":"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"Adding more nodes to a MongoDB replica set.")),(0,l.kt)("h3",{id:"3-replication-1"},"3. Replication"),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"Definition"),":"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"Copying data across multiple MongoDB servers to ensure high availability and redundancy.")),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"Types"),":"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"Replica Sets"),": A group of MongoDB instances that maintain the same data set.")),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"Pros"),":"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"High availability."),(0,l.kt)("li",{parentName:"ul"},"Redundant copies of data.")),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"Cons"),":"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"Potential consistency issues."),(0,l.kt)("li",{parentName:"ul"},"Replication lag.")),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"Example"),":"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-javascript"},'// Initiating a replica set\nrs.initiate({\n  _id: "rs0",\n  members: [\n    { _id: 0, host: "mongodb0.example.net:27017" },\n    { _id: 1, host: "mongodb1.example.net:27017" },\n    { _id: 2, host: "mongodb2.example.net:27017" },\n  ],\n});\n')),(0,l.kt)("h3",{id:"4-sharding"},"4. Sharding"),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"Definition"),":"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"Distributing data across multiple servers or clusters to handle large datasets.")),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"Pros"),":"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"Can handle very large datasets."),(0,l.kt)("li",{parentName:"ul"},"Improved performance and manageability.")),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"Cons"),":"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"Complex to implement."),(0,l.kt)("li",{parentName:"ul"},"Requires changes in the application.")),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"Example"),":"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-javascript"},'// Enabling sharding on a database\nsh.enableSharding("myDatabase");\n\n// Sharding a collection\nsh.shardCollection("myDatabase.myCollection", { shardKey: 1 });\n')),(0,l.kt)("h3",{id:"5-caching-1"},"5. Caching"),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"Definition"),":"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"Using in-memory storage to cache frequently accessed data.")),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"Pros"),":"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"Improved performance."),(0,l.kt)("li",{parentName:"ul"},"Reduced load on MongoDB.")),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"Cons"),":"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"Potential cache consistency issues.")),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"Example"),":"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"Using Redis to cache MongoDB query results.")),(0,l.kt)("h3",{id:"6-load-balancing-1"},"6. Load Balancing"),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"Definition"),":"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"Distributing the database load across multiple MongoDB servers.")),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"Pros"),":"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"Improved performance."),(0,l.kt)("li",{parentName:"ul"},"High availability.")),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"Cons"),":"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"Requires a load balancer."),(0,l.kt)("li",{parentName:"ul"},"Potential for uneven load distribution.")),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"Example"),":"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"MongoDB's built-in sharding mechanism handles load balancing.")),(0,l.kt)("h3",{id:"7-database-optimization-1"},"7. Database Optimization"),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"Definition"),":"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"Optimizing MongoDB schema, indexes, and queries for better performance.")),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"Pros"),":"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"Improved performance without additional hardware.")),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"Cons"),":"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"Requires deep knowledge of MongoDB and the application.")),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"Example"),":"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"Creating appropriate indexes to optimize query performance.")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-javascript"},"db.myCollection.createIndex({ myField: 1 });\n")),(0,l.kt)("h2",{id:"summary"},"Summary"),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"SQL Databases"),":"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"Vertical Scaling (Scaling Up)"),": Increasing server resources."),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"Horizontal Scaling (Scaling Out)"),": Adding more servers."),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"Replication"),": Master-slave or master-master replication."),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"Sharding (Partitioning)"),": Distributing data across servers."),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"Caching"),": Storing frequently accessed data in memory."),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"Load Balancing"),": Distributing queries across servers."),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"Database Optimization"),": Optimizing schema, queries, and indexes.")),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"MongoDB"),":"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"Vertical Scaling (Scaling Up)"),": Increasing server resources."),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"Horizontal Scaling (Scaling Out)"),": Adding more servers."),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"Replication"),": Using replica sets."),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"Sharding"),": Distributing data across clusters."),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"Caching"),": Using in-memory storage like Redis."),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"Load Balancing"),": Handled by MongoDB's sharding."),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"Database Optimization"),": Optimizing schema, indexes, and queries.")))}g.isMDXComponent=!0}}]);
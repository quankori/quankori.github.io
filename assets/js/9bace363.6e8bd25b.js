"use strict";(self.webpackChunk=self.webpackChunk||[]).push([[742],{3905:(e,t,n)=>{n.d(t,{Zo:()=>s,kt:()=>d});var r=n(7294);function i(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function a(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function o(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?a(Object(n),!0).forEach((function(t){i(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):a(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function c(e,t){if(null==e)return{};var n,r,i=function(e,t){if(null==e)return{};var n,r,i={},a=Object.keys(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||(i[n]=e[n]);return i}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(i[n]=e[n])}return i}var l=r.createContext({}),p=function(e){var t=r.useContext(l),n=t;return e&&(n="function"==typeof e?e(t):o(o({},t),e)),n},s=function(e){var t=p(e.components);return r.createElement(l.Provider,{value:t},e.children)},u="mdxType",m={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},y=r.forwardRef((function(e,t){var n=e.components,i=e.mdxType,a=e.originalType,l=e.parentName,s=c(e,["components","mdxType","originalType","parentName"]),u=p(n),y=i,d=u["".concat(l,".").concat(y)]||u[y]||m[y]||a;return n?r.createElement(d,o(o({ref:t},s),{},{components:n})):r.createElement(d,o({ref:t},s))}));function d(e,t){var n=arguments,i=t&&t.mdxType;if("string"==typeof e||i){var a=n.length,o=new Array(a);o[0]=y;var c={};for(var l in t)hasOwnProperty.call(t,l)&&(c[l]=t[l]);c.originalType=e,c[u]="string"==typeof e?e:i,o[1]=c;for(var p=2;p<a;p++)o[p]=n[p];return r.createElement.apply(null,o)}return r.createElement.apply(null,n)}y.displayName="MDXCreateElement"},9459:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>l,contentTitle:()=>o,default:()=>m,frontMatter:()=>a,metadata:()=>c,toc:()=>p});var r=n(7462),i=(n(7294),n(3905));const a={title:"Hierarchical Deterministic Wallet"},o=void 0,c={unversionedId:"examples/go/hdwallet",id:"examples/go/hdwallet",title:"Hierarchical Deterministic Wallet",description:"Mnemonic to private key",source:"@site/docs/examples/go/hdwallet.md",sourceDirName:"examples/go",slug:"/examples/go/hdwallet",permalink:"/docs/examples/go/hdwallet",draft:!1,tags:[],version:"current",frontMatter:{title:"Hierarchical Deterministic Wallet"},sidebar:"examples",previous:{title:"Get price on Uniswap",permalink:"/docs/examples/nodejs/uniswap"},next:{title:"Proof Of Work",permalink:"/docs/examples/go/pow"}},l={},p=[],s={toc:p},u="wrapper";function m(e){let{components:t,...n}=e;return(0,i.kt)(u,(0,r.Z)({},s,n,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("p",null,"Mnemonic to private key"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-go"},'import (\n    "fmt"\n\n    "github.com/tyler-smith/go-bip39"\n    "github.com/tyler-smith/go-bip32"\n)\n\nfunc main() {\n    mnemonic := "park light tobacco jar acoustic velvet swap charge market demand dress hockey"\n    seed := bip39.NewSeed(mnemonic, "")\n    masterKey, err := bip32.NewMasterKey(seed)\n    if err != nil {\n        panic(err)\n    }\n    index := uint32(0) // or any index you want to use\n    childKey, err := masterKey.NewChildKey(index)\n    if err != nil {\n        panic(err)\n    }\n    privateKey := childKey.Key\n    fmt.Printf("Private Key: %x\\n", privateKey)\n}\n')),(0,i.kt)("p",null,"Private key to public key and address"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-go"},'import (\n    "crypto/ecdsa"\n    "crypto/elliptic"\n    "crypto/rand"\n    "encoding/hex"\n    "fmt"\n\n    "github.com/ethereum/go-ethereum/common"\n    "github.com/ethereum/go-ethereum/crypto"\n)\n\nfunc main() {\n    privateKey, err := ecdsa.GenerateKey(elliptic.P256(), rand.Reader)\n    if err != nil {\n        panic(err)\n    }\n    publicKey := privateKey.Public()\n    publicKeyECDSA, ok := publicKey.(*ecdsa.PublicKey)\n    if !ok {\n        panic("Error casting public key to ECDSA")\n    }\n    publicKeyBytes := crypto.FromECDSAPub(publicKeyECDSA)\n    publicKeyHex := hex.EncodeToString(publicKeyBytes)\n    fmt.Printf("Public Key: %s\\n", publicKeyHex)\n    address := crypto.PubkeyToAddress(*publicKeyECDSA).Hex()\n    fmt.Printf("Wallet Address: %s\\n", address)\n}\n')))}m.isMDXComponent=!0}}]);
"use strict";(self.webpackChunk=self.webpackChunk||[]).push([[9378],{3905:(e,t,n)=>{n.d(t,{Zo:()=>u,kt:()=>h});var r=n(7294);function o(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function s(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function c(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?s(Object(n),!0).forEach((function(t){o(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):s(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function a(e,t){if(null==e)return{};var n,r,o=function(e,t){if(null==e)return{};var n,r,o={},s=Object.keys(e);for(r=0;r<s.length;r++)n=s[r],t.indexOf(n)>=0||(o[n]=e[n]);return o}(e,t);if(Object.getOwnPropertySymbols){var s=Object.getOwnPropertySymbols(e);for(r=0;r<s.length;r++)n=s[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}var i=r.createContext({}),l=function(e){var t=r.useContext(i),n=t;return e&&(n="function"==typeof e?e(t):c(c({},t),e)),n},u=function(e){var t=l(e.components);return r.createElement(i.Provider,{value:t},e.children)},p="mdxType",d={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},m=r.forwardRef((function(e,t){var n=e.components,o=e.mdxType,s=e.originalType,i=e.parentName,u=a(e,["components","mdxType","originalType","parentName"]),p=l(n),m=o,h=p["".concat(i,".").concat(m)]||p[m]||d[m]||s;return n?r.createElement(h,c(c({ref:t},u),{},{components:n})):r.createElement(h,c({ref:t},u))}));function h(e,t){var n=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var s=n.length,c=new Array(s);c[0]=m;var a={};for(var i in t)hasOwnProperty.call(t,i)&&(a[i]=t[i]);a.originalType=e,a[p]="string"==typeof e?e:o,c[1]=a;for(var l=2;l<s;l++)c[l]=n[l];return r.createElement.apply(null,c)}return r.createElement.apply(null,n)}m.displayName="MDXCreateElement"},8917:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>i,contentTitle:()=>c,default:()=>d,frontMatter:()=>s,metadata:()=>a,toc:()=>l});var r=n(7462),o=(n(7294),n(3905));const s={title:"Github Actions Example"},c=void 0,a={unversionedId:"cheatsheet/githubactions",id:"cheatsheet/githubactions",title:"Github Actions Example",description:"Example deploy code to EC2 with docker-compose",source:"@site/docs/cheatsheet/githubactions.md",sourceDirName:"cheatsheet",slug:"/cheatsheet/githubactions",permalink:"/docs/cheatsheet/githubactions",draft:!1,editUrl:"https://github.com/recallwei/wiki/tree/main/website/docs/cheatsheet/githubactions.md",tags:[],version:"current",frontMatter:{title:"Github Actions Example"},sidebar:"cheatsheet",previous:{title:"GIT CheatSheet",permalink:"/docs/cheatsheet/git"},next:{title:"Golang Module Cheatsheet",permalink:"/docs/cheatsheet/golang"}},i={},l=[],u={toc:l},p="wrapper";function d(e){let{components:t,...n}=e;return(0,o.kt)(p,(0,r.Z)({},u,n,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("p",null,"Example deploy code to EC2 with docker-compose"),(0,o.kt)("p",null,"folder ",(0,o.kt)("inlineCode",{parentName:"p"},".github/workflows")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-yml"},'name: Push-to-EC2\n\n# Trigger deployment only on push to master branch\non:\n  push:\n    branches:\n      - master\n\njobs:\n  deploy:\n    name: Deploy to EC2 on master branch push\n    runs-on: ubuntu-latest\n\n    steps:\n      - name: Checkout the files\n        uses: actions/checkout@v2\n\n      - name: Deploy to Server\n        uses: easingthemes/ssh-deploy@main\n        env:\n          SSH_PRIVATE_KEY: ${{ secrets.EC2_SSH_KEY }}\n          REMOTE_HOST: ${{ secrets.HOST_DNS }}\n          REMOTE_USER: ${{ secrets.USERNAME }}\n          TARGET: ${{ secrets.TARGET_DIR }}\n\n  build:\n    name: Build docker to EC2\n    runs-on: ubuntu-latest\n    needs: [deploy]\n    steps:\n      - name: Buid docker\n        uses: appleboy/ssh-action@master\n        with:\n          host: ${{ secrets.HOST_DNS }}\n          username: ${{ secrets.USERNAME }}\n          key: ${{ secrets.EC2_SSH_KEY }}\n          script: |\n            cd ${{ secrets.TARGET_DIR }}\n            sudo docker-compose stop node\n            sudo docker-compose build node\n            sudo docker rmi $(docker images --filter "dangling=true" --quiet --no-trunc)\n            sudo docker-compose up node -d\n            sudo docker ps\n')))}d.isMDXComponent=!0}}]);